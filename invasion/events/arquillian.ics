BEGIN:VCALENDAR
PRODID;X-RICAL-TZSOURCE=TZINFO:-//com.denhaven2/NONSGML ri_cal gem//EN
CALSCALE:GREGORIAN
VERSION:2.0
BEGIN:VEVENT
CREATED;VALUE=DATE-TIME:20140127T081036Z
DTEND;VALUE=DATE-TIME:20140130T083000Z
DTSTART;VALUE=DATE-TIME:20140130T073000Z
CATEGORIES:SESSION
LAST-MODIFIED;VALUE=DATE-TIME:20140127T081036Z
ATTENDEE:Aslak Knutsen
DESCRIPTION:\n				<p>Arquillian is an innovative and highly extensible te
 sting platform for the JVM that enables developers to easily create auto
 mated integration\, functional and acceptance tests for Java middleware\
 , from Java EE and beyond.</p>\n<p>In this presentation\, we'll focus on
  the "highly extensible" part\, one of Arquillian's proven strengths. Ar
 quillian was designed with the ability to change its default behavior vi
 a its powerful extension model. These extensions are portals through whi
 ch Arquillian can travel to take on challenges in new domains or those y
 et to be realized.</p>\n<p>This presentation takes you on a tour through
  the universe of Arquillian extensions by demonstrating how specific ext
 ensions solve common problematic testing scenarios faced by enterprise d
 evelopers. You will get a overview of what extensions and extension poin
 ts are available today and what ideas are starting to take shape in the 
 community.</p>\n			
URL:http://lanyrd.com/2014/judcon-india/scwffc/
SUMMARY:Beam me up! A tour around the Arquillian Universe
ORGANIZER:CN=JUDCon India 2014:http://lanyrd.com/2014/judcon-india/
CLASS:PUBLIC
LOCATION:JUDCon India 2014
SEQUENCE:0
END:VEVENT
BEGIN:VEVENT
CREATED;VALUE=DATE-TIME:20140127T080853Z
DTEND;VALUE=DATE-TIME:20140131T083000Z
DTSTART;VALUE=DATE-TIME:20140131T073000Z
CATEGORIES:SESSION
LAST-MODIFIED;VALUE=DATE-TIME:20140127T080853Z
ATTENDEE:Aslak Knutsen
ATTENDEE:Andrew Lee Rubinger
DESCRIPTION:\n				<p>This session pulls a variety of examples in testable
  development from O’Reilly's Continuous Enterprise Development in Java
 \, including a review of the sections on:</p>\n<p>• RESTful services<b
 r>\n• UI verification<br>\n• Transactions<br>\n• Security</p>\n<p>
 ...and covers other areas of the Java EE platform that have historically
  been branded as “difficult to test.” The session spends a lot of ti
 me in the IDE\, with examples that are freely available to fork and run.
 </p>\n			
URL:http://lanyrd.com/2014/judcon-india/scwhmm/
SUMMARY:Case Studies in Testable Java EE Development
ORGANIZER:CN=JUDCon India 2014:http://lanyrd.com/2014/judcon-india/
CLASS:PUBLIC
LOCATION:JUDCon India 2014
SEQUENCE:0
END:VEVENT
BEGIN:VEVENT
CREATED;VALUE=DATE-TIME:20140127T081037Z
DTEND;VALUE=DATE-TIME:20140131T083000Z
DTSTART;VALUE=DATE-TIME:20140131T073000Z
CATEGORIES:SESSION
LAST-MODIFIED;VALUE=DATE-TIME:20140127T081037Z
ATTENDEE:Aslak Knutsen
DESCRIPTION:\n				<p>For years we’ve been exploring how to layer and se
 parate our code to test in isolation on the unit level. We’ve kept int
 egration and functional testing as a big ball of mud\; jumping straight 
 from unit to full system testing. But can we apply some of the same less
 ons learned from unit to integration testing?</p>\n<p>This session explo
 re the different technologies within the Java Enterprise specification a
 nd see how our application can be tested in isolation\; layer for layer\
 , module for module and component for component.</p>\n<p>Can we isolate 
 and stay real at the same time? Does mocks\, stubs and test doubles have
  a place in the world of integration testing? Are there other lessons to
  be learned?</p>\n			
URL:http://lanyrd.com/2014/judcon-india/scwffb/
SUMMARY:Testing the Enterprise Layers - The A\, B\, C’s of Integration 
 Testing
ORGANIZER:CN=JUDCon India 2014:http://lanyrd.com/2014/judcon-india/
CLASS:PUBLIC
LOCATION:JUDCon India 2014
SEQUENCE:0
END:VEVENT
BEGIN:VEVENT
CREATED;VALUE=DATE-TIME:20131210T135747Z
DTEND;VALUE=DATE-TIME:20140326T124500Z
DTSTART;VALUE=DATE-TIME:20140326T120000Z
CATEGORIES:SESSION
LAST-MODIFIED;VALUE=DATE-TIME:20131210T135747Z
ATTENDEE:Andrew Lee Rubinger
DESCRIPTION:\n				<p>For years developers have been exploring how to laye
 r and separate code to test it in isolation on the unit level. It has ke
 pt integration and functional testing as a big ball of mud\, jumping str
 aight from unit to full system testing. But could some of the same lesso
 ns learned from unit testing apply to integration testing? Is it possibl
 e to isolate and stay real at the same time? Do mocks\, stubs\, and test
  doubles have a place in the world of integration testing? Are there oth
 er lessons to be learned? This session explores the different technologi
 es within the enterprise Java specification and shows how enterprise Jav
 a applications can be tested in isolation - layer for layer\, module for
  module\, and component for component.</p>\n			
URL:http://lanyrd.com/2014/javaland/sctkmz/
SUMMARY:Testing the Enterprise Layers: The ABCs of Integration Testing
ORGANIZER:CN=JavaLand:http://lanyrd.com/2014/javaland/
CLASS:PUBLIC
LOCATION:JavaLand
SEQUENCE:0
END:VEVENT
END:VCALENDAR
