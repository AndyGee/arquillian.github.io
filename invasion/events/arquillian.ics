BEGIN:VCALENDAR
PRODID;X-RICAL-TZSOURCE=TZINFO:-//com.denhaven2/NONSGML ri_cal gem//EN
CALSCALE:GREGORIAN
VERSION:2.0
BEGIN:VEVENT
CREATED;VALUE=DATE-TIME:20141010T094235Z
DTEND;VALUE=DATE-TIME:20141011T183000Z
DTSTART;VALUE=DATE-TIME:20141011T174500Z
CATEGORIES:SESSION
LAST-MODIFIED;VALUE=DATE-TIME:20141010T094235Z
ATTENDEE:Alex Soto
DESCRIPTION:\n				<p>Los tests unitarios son escritos por los desarrollad
 ores para validar que la aplicación que estamos realizando funciona corr
 ectamente. El problem es que no podemos depender exclusivamente de tests
  unitarios ya daría la falsa ilusión que todo el sistema funciona correc
 tamente. En algún punto debemos empezar a verificar la integración entre
  componentes y asegurar que no nos encontremos sorpresas desagradables c
 uando movemos nuestra aplicación a producción.</p>\n<p>En esta charla va
 mos a ver cómo podemos usar Arquillian y algunas de sus extensions para 
 poder escribir tests de integración para aplicaciones Java EE sobre un e
 ntorno real (sin recurrir a “mocks”)\, de una forma ágil y plácida para 
 el desarrollador.</p>\n			
URL:http://lanyrd.com/2014/guateju/sdfdhm/
SUMMARY:Testeando proyectos Java EE con Arquillian
ORGANIZER:CN=JavaDays Guatemala 2014:http://lanyrd.com/2014/guateju/
CLASS:PUBLIC
LOCATION:JavaDays Guatemala 2014
SEQUENCE:0
END:VEVENT
BEGIN:VEVENT
CREATED;VALUE=DATE-TIME:20141010T094235Z
DTEND;VALUE=DATE-TIME:20141014T101500Z
DTSTART;VALUE=DATE-TIME:20141014T091500Z
CATEGORIES:SESSION
LAST-MODIFIED;VALUE=DATE-TIME:20141010T094235Z
ATTENDEE:Simon Maple
ATTENDEE:Aslak Knutsen
DESCRIPTION:\n				<p>Set your face to stun as we show you how to setup a 
 Java EE development environment with productivity tools that dramaticall
 y improve your daily coding life\, including:</p>\n<p>Arquillian\, a fra
 mework that allows you to focus on writing your integration and function
 al tests rather than mocking in a more granular way.</p>\n<p>Forge\, a p
 roject that generates the boilerplate code for your projects\, and allow
 s you to build and deploy your applications on your desired container.</
 p>\n<p>JRebel\, a tool that provides a class-reloading mechanism\, that 
 makes your Java code\, framework and resource changes instantly.</p>\n<p
 >Attendees will gain knowledge about how they can turbo charge their env
 ironments\, becoming a more productive Java EE developer. Session assume
 s existing Java EE experience.</p>\n			
URL:http://lanyrd.com/2014/jaxldn14/sdbybq/
SUMMARY:Higher Productivity for Java EE with Forge\, Arquillian and JRebe
 l
ORGANIZER:CN=JAX London 2014 featuring Big Data Con:http://lanyrd.com/201
 4/jaxldn14/
CLASS:PUBLIC
LOCATION:JAX London 2014 featuring Big Data Con
SEQUENCE:0
END:VEVENT
BEGIN:VEVENT
CREATED;VALUE=DATE-TIME:20141010T094237Z
DTEND;VALUE=DATE-TIME:20141014T174500Z
DTSTART;VALUE=DATE-TIME:20141014T164500Z
CATEGORIES:SESSION
LAST-MODIFIED;VALUE=DATE-TIME:20141010T094237Z
ATTENDEE:Aslak Knutsen
DESCRIPTION:\n				<p>For years we’ve been exploring how to layer and sepa
 rate our code to test in isolation on the unit level. We’ve kept integra
 tion and functional testing as a big ball of mud\; jumping straight from
  unit to full system testing. But can we apply some of the same lessons 
 learned from unit to integration testing?This session explores the diffe
 rent technologies within the Java Enterprise specification and you can s
 ee how our application can be tested in isolation\; layer for layer\, mo
 dule for module and component for component. Can we isolate and stay rea
 l at the same time? Does mocks\, stubs and test doubles have a place in 
 the world of integration testing? Are there other lessons to be learned?
 </p>\n			
URL:http://lanyrd.com/2014/jaxldn14/sdftcr/
SUMMARY:Testing the Enterprise layers - The A\, B\, C’s of integration te
 sting
ORGANIZER:CN=JAX London 2014 featuring Big Data Con:http://lanyrd.com/201
 4/jaxldn14/
CLASS:PUBLIC
LOCATION:JAX London 2014 featuring Big Data Con
SEQUENCE:0
END:VEVENT
BEGIN:VEVENT
CREATED;VALUE=DATE-TIME:20141010T094234Z
DTEND;VALUE=DATE-TIME:20141016T110000Z
DTSTART;VALUE=DATE-TIME:20141016T100000Z
CATEGORIES:SESSION
LAST-MODIFIED;VALUE=DATE-TIME:20141010T094234Z
ATTENDEE:Aslak Knutsen
DESCRIPTION:\n				<p>TBA</p>\n			
URL:http://lanyrd.com/2014/geekout-uk/sdftct/
SUMMARY:ARQUILLIAN & FORGE
ORGANIZER:CN=GeekOut UK 2014:http://lanyrd.com/2014/geekout-uk/
CLASS:PUBLIC
LOCATION:GeekOut UK 2014
SEQUENCE:0
END:VEVENT
BEGIN:VEVENT
CREATED;VALUE=DATE-TIME:20140905T141354Z
DTEND;VALUE=DATE-TIME:20141122T093000Z
DTSTART;VALUE=DATE-TIME:20141122T084500Z
CATEGORIES:SESSION
LAST-MODIFIED;VALUE=DATE-TIME:20140905T141354Z
ATTENDEE:Alex Soto
DESCRIPTION:\n				<p>La mayoría de sesiones sobre Java 8 presentan las nu
 evas funcionalidades desde el punto de vista del código escrito como lóg
 ica de negocio. ¿Podemos usar estas nuevas funcionalidades en nuestros t
 ests para hacerlos más legibles y compactos? La respuesta es: Absolutame
 nte!.</p>\n<p>La combinación de las nuevas funcionalidades de Java 8 jun
 tamente con las plataformas de test como JUnit\, Hamcrest o Arquillian i
 ntroducen un nueva forma de escribir tests de una forma más legible\, co
 mpacta y porqué no más bella. Tienen un impacto por ejemplo en la valida
 ción de fechas\, inyección de "fake" objects o la creación de "PageObjec
 ts" compactos.</p>\n<p>Ven a esta sesión y aprenderás como puedes alinea
 r tus tests a Java 8.</p>\n			
URL:http://lanyrd.com/2014/codemotion/sddmmh/
SUMMARY:Java 8 meets Tests
ORGANIZER:CN=Codemotion Madrid 2014:http://lanyrd.com/2014/codemotion/
CLASS:PUBLIC
LOCATION:Codemotion Madrid 2014
SEQUENCE:0
END:VEVENT
BEGIN:VEVENT
CREATED;VALUE=DATE-TIME:20140905T141354Z
DTEND;VALUE=DATE-TIME:20141122T151500Z
DTSTART;VALUE=DATE-TIME:20141122T143000Z
CATEGORIES:SESSION
LAST-MODIFIED;VALUE=DATE-TIME:20140905T141354Z
ATTENDEE:José Manuel López
DESCRIPTION:\n				<p>Using CDI for dependency injection and Arquillian pl
 atform\, there are not excuses for development of unit and integration t
 ests in Java EE.</p>\n<p>In the talk the following concepts\, illustrate
 d with examples of code and a final show will be presented:</p>\n<p>- De
 scription of the architecture of testing: JUnit\, Mockito\, CDI\, Arquil
 lian\, Shrinkwrap\, Maven</p>\n<p>- Unit and integration tests</p>\n<p>-
  Development of testing with Arquillian</p>\n<p>- Running in application
  servers and CDI containers</p>\n<p>- Focus tests: isolated vs end-to-en
 d</p>\n<p>- Using of @Produce and Mockito to inject mocks</p>\n<p>- Mock
 ing Web services and data persistence layer</p>\n<p>- Testing RESTful se
 rvices</p>\n<p>- Coverage using JaCoCo</p>\n<p>- Functional testing with
  Selenium\, Arquillian Graphene and Page Objects</p>\n			
URL:http://lanyrd.com/2014/codemotion/sddmwq/
SUMMARY:Developing tests in Java EE
ORGANIZER:CN=Codemotion Madrid 2014:http://lanyrd.com/2014/codemotion/
CLASS:PUBLIC
LOCATION:Codemotion Madrid 2014
SEQUENCE:0
END:VEVENT
END:VCALENDAR
