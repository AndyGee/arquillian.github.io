BEGIN:VCALENDAR
PRODID;X-RICAL-TZSOURCE=TZINFO:-//com.denhaven2/NONSGML ri_cal gem//EN
CALSCALE:GREGORIAN
VERSION:2.0
BEGIN:VEVENT
CREATED;VALUE=DATE-TIME:20151007T024627Z
DTEND;VALUE=DATE-TIME:20151029T223000Z
DTSTART;VALUE=DATE-TIME:20151029T213000Z
CATEGORIES:SESSION
LAST-MODIFIED;VALUE=DATE-TIME:20151007T024627Z
ATTENDEE:Aslak Knutsen
ATTENDEE:Bartosz Majsak
DESCRIPTION:\n				<p>The Borg is docking your system\; testing is futile!
  Or is it? With microservices\, polyglot\, and DevOps on the rise\, wher
 e are we at with testing? Do these technologies bring more complexity an
 d make our testing effort harder\, or maybe the contrary? Do they actual
 ly help us write better tests more easily? This session explores not onl
 y how we can do our testing in this new world but also how the new world
  can help us test better. It takes a close look at various topics\, from
  NodeJS-\, DynJS-\, VertX-\, Ceylon-\, or Ruby-orchestrated microservice
 s through system-scale testing with various configurations to database m
 igration and regression testing. All are within reach.</p>\n			
URL:http://lanyrd.com/2015/javaone/sdtkzt/
SUMMARY:Taming Microservices Testing with Docker and Arquillian Cube
ORGANIZER:CN=JavaOne 2015:http://lanyrd.com/2015/javaone/
CLASS:PUBLIC
LOCATION:JavaOne 2015
SEQUENCE:0
END:VEVENT
BEGIN:VEVENT
CREATED;VALUE=DATE-TIME:20151009T163640Z
DTEND;VALUE=DATE-TIME:20151030T000000Z
DTSTART;VALUE=DATE-TIME:20151029T230000Z
CATEGORIES:SESSION
LAST-MODIFIED;VALUE=DATE-TIME:20151009T163640Z
ATTENDEE:Alex Soto
DESCRIPTION:\n				<p>Millions of people have had the opportunity to cast 
 a vote online over the last decade. From North America to Australia\, al
 l of them have something in common: they trust Java and open source. The
  new online voting solutions deeply rely on Java EE full stack and open 
 source tools to meet all the requirements of an important event such as 
 an election. Come to this session to learn why governments prefer open s
 ource over proprietary solutions\, including well-known trendy technolog
 ies such as Apache TomEE\, Docker\, or Apache Mesos.</p>\n			
URL:http://lanyrd.com/2015/javaone/sdtmgd/
SUMMARY:Innovating Democracy with Java EE and Open Source
ORGANIZER:CN=JavaOne 2015:http://lanyrd.com/2015/javaone/
CLASS:PUBLIC
LOCATION:JavaOne 2015
SEQUENCE:0
END:VEVENT
BEGIN:VEVENT
CREATED;VALUE=DATE-TIME:20151007T024626Z
DTEND;VALUE=DATE-TIME:20151103T164500Z
DTSTART;VALUE=DATE-TIME:20151103T154500Z
CATEGORIES:SESSION
LAST-MODIFIED;VALUE=DATE-TIME:20151007T024626Z
ATTENDEE:Stefan Hildebrandt
DESCRIPTION:\n				<p>Arquillian ist der aufsteigende Stern in der Open-So
 urce-Softwarecommunity\, wenn es um Tests in Java-EE-Applikationsservern
  geht. Allerdings ist bei vielen die Unsicherheit recht groß\, wenn es u
 m den Einsatz von Arquillian in einem konkreten Inhouseprojekt geht. Urs
 achen sind sicher die teilweise sehr lückenhafte Dokumentation\, die vie
 len Misserfolge\, die sich im Internet finden\, und die Komplexität am A
 nfang. Begründet sind sie in erster Linie in dem abweichenden Fokus: Arq
 uillian ist maßgeblich von Framework- und Applikationsserverentwicklern 
 für den Test ihrer Produkte entwickelt worden. Trotzdem ist es eine gute
  Software für viele Testszenarien einer Java-EE-Anwendung.<br>\nDieser V
 ortrag stellt die wichtigen Punkte beim Einsatz von Arquillian in typisc
 hen Projekten in Unternehmen anhand eines durchgängigen Beispiels vor. D
 abei wird in erster Linie auf Integrationstests eingegangen und ein Ausb
 lick auf weitere Möglichkeiten wie Browsertests\, Akzeptanztests und Las
 ttests gegeben.</p>\n			
URL:http://lanyrd.com/2015/jaxcon-2/sdthwg/
SUMMARY:Landung der Aliens - Arquillian in der Praxis
ORGANIZER:CN=W-JAX 2015:http://lanyrd.com/2015/jaxcon-2/
CLASS:PUBLIC
LOCATION:W-JAX 2015
SEQUENCE:0
END:VEVENT
BEGIN:VEVENT
CREATED;VALUE=DATE-TIME:20150712T083835Z
DTEND;VALUE=DATE-TIME:20151105T153000Z
DTSTART;VALUE=DATE-TIME:20151105T143000Z
CATEGORIES:SESSION
LAST-MODIFIED;VALUE=DATE-TIME:20150712T083835Z
ATTENDEE:Stefan Hildebrandt
DESCRIPTION:\n				<p>Docker-Container bieten ein interessantes Auslieferu
 ngs- und Betriebskonzept. Allerdings lässt es sich in vielen Organisatio
 nen aus unterschiedlichen Gründen noch nicht für produktiven Einsatz ver
 wenden. Dennoch kann Docker auf dem Weg zu Continuous Delivery in der Te
 stautomatisierung schon einen wichtigen Beitrag leisten. Dieser Vortrag 
 stellt die Einsatzbereiche vor\, in denen Docker in automatisierten Test
 s verwendet werden kann: klassisch als Ausführungsumgebung für das Testo
 bjekt\, als Umgebung für Umsysteme oder Simulatoren und insbesondere für
  die Bereitstellung von definierten Testdaten und wie diese am besten in
  den Container gelangen können. Weiterhin wird die Einbindung der Contai
 ner in die Testausführung mit Gradle\, Maven und Arquillian vorgestellt.
 </p>\n			
URL:http://lanyrd.com/2015/w-jax/sdpkcp/
SUMMARY:Testen mit Containern – Docker für Integrationstests
ORGANIZER:CN=W-JAX 2015:http://lanyrd.com/2015/w-jax/
CLASS:PUBLIC
LOCATION:W-JAX 2015
SEQUENCE:0
END:VEVENT
BEGIN:VEVENT
CREATED;VALUE=DATE-TIME:20151007T024628Z
DTEND;VALUE=DATE-TIME:20151105T154500Z
DTSTART;VALUE=DATE-TIME:20151105T144500Z
CATEGORIES:SESSION
LAST-MODIFIED;VALUE=DATE-TIME:20151007T024628Z
ATTENDEE:Stefan Hildebrandt
DESCRIPTION:\n				<p>Docker-Container bieten ein interessantes Auslieferu
 ngs- und Betriebskonzept. Allerdings lässt es sich in vielen Organisatio
 nen aus unterschiedlichen Gründen noch nicht für produktiven Einsatz ver
 wenden. Dennoch kann Docker auf dem Weg zu Continuous Delivery in der Te
 stautomatisierung schon einen wichtigen Beitrag leisten. <br>\nDieser Vo
 rtrag stellt die Einsatzbereiche vor\, in denen Docker in automatisierte
 n Tests verwendet werden kann: klassisch als Ausführungsumgebung für das
  Testobjekt\, als Umgebung für Umsysteme oder Simulatoren und insbesonde
 re für die Bereitstellung von definierten Testdaten und wie diese am bes
 ten in den Container gelangen können. Weiterhin wird die Einbindung der 
 Container in die Testausführung mit Gradle\, Maven und Arquillian vorges
 tellt.</p>\n			
URL:http://lanyrd.com/2015/jaxcon-2/sdthwf/
SUMMARY:Testen mit Containern – Docker für Integrationstests
ORGANIZER:CN=W-JAX 2015:http://lanyrd.com/2015/jaxcon-2/
CLASS:PUBLIC
LOCATION:W-JAX 2015
SEQUENCE:0
END:VEVENT
BEGIN:VEVENT
CREATED;VALUE=DATE-TIME:20151019T061218Z
DTEND;VALUE=DATE-TIME:20151110T165500Z
DTSTART;VALUE=DATE-TIME:20151110T162500Z
CATEGORIES:SESSION
LAST-MODIFIED;VALUE=DATE-TIME:20151019T061218Z
ATTENDEE:Citrus Framework
DESCRIPTION:\n				<p>Citrus is a powerful Open Source integration testing
  tool for automated service API tests. The framework concentrates on the
  interfaces to boundary applications and services with the ability to ex
 change messages on client and server side with different message transpo
 rts (Http\, JMS\, TCP/IP\, FTP\, ...) and formats (XML\, JSON). The prim
 ary goal is an automated integration test of all service APIs where real
  message communication is sent over the wire. The framework helps to man
 age complex test scenarios with multiple services interacting with each 
 other. Citrus integrates with frameworks like Apache Camel\, Arquillian\
 , Kubernetes and Docker in order to provide automated integration testin
 g of Microservice applications. The tools in action session gives a brie
 f introduction to the Citrus framework and shows code samples for a comp
 lete integration test scenario in a Microservices environment.</p>\n			
URL:http://lanyrd.com/2015/devoxx-belgium/sdtpfx/
SUMMARY:Testing Microservices with a Citrus twist
ORGANIZER:CN=Devoxx Belgium 2015:http://lanyrd.com/2015/devoxx-belgium/
CLASS:PUBLIC
LOCATION:Devoxx Belgium 2015
SEQUENCE:0
END:VEVENT
BEGIN:VEVENT
CREATED;VALUE=DATE-TIME:20151019T061219Z
DTEND;VALUE=DATE-TIME:20151110T165500Z
DTSTART;VALUE=DATE-TIME:20151110T162500Z
CATEGORIES:SESSION
LAST-MODIFIED;VALUE=DATE-TIME:20151019T061219Z
ATTENDEE:Andy
DESCRIPTION:\n				<p>Apache Tomcat is a mainstay Java Application Server.
  Apache TomEE is a sister project at the Apache Software foundation that
  adds the entire EE Oracle certified Web Profile to this extremely well 
 known platform. Now all you need to do is make the transition - Step one
 .</p>\n<p>Watch the transition of an established application that runs w
 ithin a standard Tomcat environment into the EE world of Apache TomEE by
  using a visually descriptive step-by-step approach. The accompanying pr
 oject and slides can be found here: <a href="https://github.com/tomitrib
 e/tomcattotomee" rel="nofollow">https://github.com/tomitribe/tom...</a><
 /p>\n<p>Enable the gradual addition of virtually every single EE technol
 ogy to your application through following various trails such as CDI\, R
 ESTful WebServices\, EJBs\, WebServlets and SOAP Services. To complete t
 he transition viewers will also be introduced to Arquillian driven testi
 ng and the advantages this brings in regards to ensuring application sta
 bility an any EE platform.</p>\n			
URL:http://lanyrd.com/2015/devoxx-belgium/sdtpfr/
SUMMARY:Apache Tomcat to Apache TomEE in 1-n Steps
ORGANIZER:CN=Devoxx Belgium 2015:http://lanyrd.com/2015/devoxx-belgium/
CLASS:PUBLIC
LOCATION:Devoxx Belgium 2015
SEQUENCE:0
END:VEVENT
BEGIN:VEVENT
CREATED;VALUE=DATE-TIME:20151009T163239Z
DTEND;VALUE=DATE-TIME:20151110T190000Z
DTSTART;VALUE=DATE-TIME:20151110T180000Z
CATEGORIES:SESSION
LAST-MODIFIED;VALUE=DATE-TIME:20151009T163239Z
ATTENDEE:Erik-Berndt Scheper
DESCRIPTION:\n				<p>This session is intended as an open discussion about
  integration testing using Arquillian\, with an emphasis on the integrat
 ion points with Docker and Maven.</p>\n<p>Aside from the Arquillian Cube
  extension\, there are various Maven plugins available on the internet. 
 Many of these\, or at least the more commonly used\, will feature in thi
 s session.</p>\n<p>To start the discussion\, the presentation will comme
 nce with a comparison of various alternatives and live coding of a worki
 ng example\, during which everyone is invited to comment and participate
 .</p>\n<p>At the end of the session the attendees should have at least a
  basic understanding of the new possibilities these technologies bring\,
  and hopefully be as enthusiastic about them as I am.</p>\n			
URL:http://lanyrd.com/2015/devoxx-belgium/sdtmyx/
SUMMARY:Integration testing with Maven\, Arquillian and Docker Maven plug
 ins
ORGANIZER:CN=Devoxx Belgium 2015:http://lanyrd.com/2015/devoxx-belgium/
CLASS:PUBLIC
LOCATION:Devoxx Belgium 2015
SEQUENCE:0
END:VEVENT
BEGIN:VEVENT
CREATED;VALUE=DATE-TIME:20151007T024628Z
DTEND;VALUE=DATE-TIME:20151111T175000Z
DTSTART;VALUE=DATE-TIME:20151111T165000Z
CATEGORIES:SESSION
LAST-MODIFIED;VALUE=DATE-TIME:20151007T024628Z
ATTENDEE:Aslak Knutsen
ATTENDEE:Alex Soto
DESCRIPTION:\n				<p>With microservices\, polyglot and devops on the rise
 \, where are we at with testing? Does it bring more complexity and makes
  our testing effort harder or in maybe in contrary it actually helps us 
 write better tests easier?</p>\n<p>In this session we will be exploring 
 not only how we can do our testing in this new world\, but also how the 
 new world can help us test better.</p>\n<p>We will take a close look at 
 topics varying from NodeJS\, DynJS\, VertX\, Ceylon or Ruby orchestrated
  microservices through system scale testing with different configuration
 s to database migration and regression testing. All are within a reach.<
 /p>\n			
URL:http://lanyrd.com/2015/devoxx-belgium/sdtkzw/
SUMMARY:The Borg is docking your system\; testing is futile! Or is it?
ORGANIZER:CN=Devoxx Belgium 2015:http://lanyrd.com/2015/devoxx-belgium/
CLASS:PUBLIC
LOCATION:Devoxx Belgium 2015
SEQUENCE:0
END:VEVENT
END:VCALENDAR
