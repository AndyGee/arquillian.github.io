<?xml version="1.0" encoding="utf-8" ?>
<feed xml:lang="en-US" xmlns="http://www.w3.org/2005/Atom">
  <id>http://arquillian.org/</id>
  <title>Arquillian</title>
  <updated>2013-06-21T00:00:00+00:00</updated>
  <link href="http://arquillian.org/blog/atom.xml" rel="self" type="application/atom+xml" />
  <link href="http://arquillian.org/blog" rel="alternate" type="text/html" />
  <entry>
    <id>http://arquillian.org/blog/2013/06/20/arquillian-testrunner-spock-1-0-0-Beta1/</id>
    <title>Arquillian TestRunner Spock 1.0.0.Beta1 Released</title>
    <updated>2013-06-21T00:00:00+00:00</updated>
    <link href="http://arquillian.org/blog/2013/06/20/arquillian-testrunner-spock-1-0-0-Beta1/" rel="alternate" type="text/html" />
    <category scheme="http://arquillian.org/blog/tags" term="release" />
    <category scheme="http://arquillian.org/blog/tags" term="test-runner" />
    <category scheme="http://arquillian.org/blog/tags" term="spock" />
    <category scheme="http://arquillian.org/blog" term="arquillian" />
    <summary>
      The Arquillian team is proud to announce the 1.0.0.Beta1 release of the Arquillian TestRunner Spock component!
      
      &#8220;That’s one small step for man, one giant leap for mankind.&#8221;
      
      When you look at list of changes in this release it might not appear as the biggest release in the history of Arquillian Universe, but it&#8217;s definitely important one for Spock and Arquillian fans. Big kudos this time go to Karel Piwko and Fabian Schwarzer. Karel gave us a choice between Groovy 1.8 and 2.x and Fabian spotted shortcomings of previous integration approach implemented as global Spock extension. By having those two improvements in place......
    </summary>
    <content type="html">
      &lt;p&gt;The Arquillian team is proud to announce the &lt;em&gt;1.0.0.Beta1&lt;/em&gt; release of the &lt;em&gt;Arquillian TestRunner Spock&lt;/em&gt; component!&lt;/p&gt;
      &lt;blockquote&gt;
      &lt;p&gt;“That’s one small step for man, one giant leap for mankind.”&lt;/p&gt;
      &lt;/blockquote&gt;
      &lt;p&gt;When you look at list of changes in this release it might not appear as the biggest release in the history of Arquillian Universe, but it’s definitely important one for Spock and Arquillian fans. Big kudos this time go to &lt;a href=&quot;profile://kpiwko&quot;&gt;Karel Piwko&lt;/a&gt; and Fabian Schwarzer. Karel gave us a choice between Groovy 1.8 and 2.x and Fabian spotted shortcomings of previous integration approach implemented as global Spock extension. By having those two improvements in place we are getting very close to the final stable release!&lt;/p&gt;
      &lt;h3 class=&quot;highlights&quot;&gt;Important changes&lt;/h3&gt;
      &lt;dl&gt;
      &lt;dt&gt;
      &lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; Annotation driven activation&lt;/dt&gt;
      	&lt;dd&gt;In order to let Arquillian sneak in to the Spock dimension you’ll need to annotate your &lt;code&gt;Specification&lt;/code&gt; using &lt;code&gt;@ArquillianSpecification&lt;/code&gt;.&lt;/dd&gt;
      &lt;/dl&gt;&lt;dl&gt;
      &lt;dt&gt;
      &lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; Groovy 1.8 and 2.0&lt;/dt&gt;
      	&lt;dd&gt;We also updated the Spock and Groovy versions. We guarantee that the following combinations won’t let you down:&lt;br&gt;
      * For Groovy 2.x, use spock 0.7-groovy-2.0 or later and Groovy 2.1.4 or later&lt;br&gt;
      * For Groovy 1.x, use spock 0.7-groovy-1.8 or later and Groovy 1.8.9 or later&lt;/dd&gt;
      &lt;/dl&gt;&lt;p&gt;You can always take a look at our &lt;a href=&quot;https://github.com/arquillian/arquillian-testrunner-spock/tree/master/examples&quot;&gt;examples&lt;/a&gt; where we show how to use both versions with Maven.&lt;/p&gt;
      &lt;p&gt;Both &lt;a href=&quot;http://code.google.com/p/spock/&quot;&gt;Spock&lt;/a&gt; and Arquillian let you test your code with pleasure so wait no more and give it a spin!&lt;/p&gt;
      &lt;h3&gt;What is Arquillian?&lt;/h3&gt;
      &lt;p&gt;Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop a comprehensive suite of tests from the convenience of your IDE and run them in any IDE, build tool or continuous integration environment.&lt;/p&gt;
      &lt;h3&gt;Release details&lt;/h3&gt;
      &lt;table class=&quot;table table-bordered table-striped&quot;&gt;&lt;tbody&gt;
      &lt;tr&gt;
      &lt;th&gt;Component&lt;/th&gt;
            &lt;td&gt;
              &lt;a href=&quot;http://arquillian.org/modules/spock-test-runner/&quot;&gt;Arquillian TestRunner Spock&lt;/a&gt;
            &lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Version&lt;/th&gt;
            &lt;td&gt;
              1.0.0.Beta1
              &lt;span class=&quot;label tag&quot;&gt;
                &lt;a href=&quot;https://api.github.com/repos/arquillian/arquillian-testrunner-spock/commits/42098dc1535bc8987be4768710ddb666429d2d7e&quot;&gt;view tag&lt;/a&gt;
              &lt;/span&gt;
            &lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Release date&lt;/th&gt;
            &lt;td&gt;2013-06-20&lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Released by&lt;/th&gt;
            &lt;td&gt;Aslak Knutsen&lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Compiled against&lt;/th&gt;
            &lt;td&gt;
              &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;Arquillian Core – 1.0.4.Final&lt;/li&gt;
              &lt;/ul&gt;
      &lt;/td&gt;
          &lt;/tr&gt;
      &lt;/tbody&gt;&lt;/table&gt;&lt;h3&gt;
        Published artifacts
        &lt;small&gt;org.jboss.arquillian.spock&lt;/small&gt;
      &lt;/h3&gt;
      &lt;ul&gt;
      &lt;li&gt;
          org.jboss.arquillian.spock
          »
          arquillian-spock-container
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/spock/arquillian-spock-container/1.0.0.Beta1/arquillian-spock-container-1.0.0.Beta1.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/spock/arquillian-spock-container/1.0.0.Beta1/arquillian-spock-container-1.0.0.Beta1.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.spock
          »
          arquillian-spock-core
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/spock/arquillian-spock-core/1.0.0.Beta1/arquillian-spock-core-1.0.0.Beta1.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/spock/arquillian-spock-core/1.0.0.Beta1/arquillian-spock-core-1.0.0.Beta1.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.spock
          »
          arquillian-spock-standalone
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/spock/arquillian-spock-standalone/1.0.0.Beta1/arquillian-spock-standalone-1.0.0.Beta1.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/spock/arquillian-spock-standalone/1.0.0.Beta1/arquillian-spock-standalone-1.0.0.Beta1.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
      &lt;/ul&gt;&lt;h3&gt;
        Release notes and resolved issues
        &lt;small&gt;4&lt;/small&gt;
      &lt;/h3&gt;
      &lt;p&gt;Annotation Driven Spock extension + Support for Spock 0.7 and Groovy 2.0&lt;/p&gt;
      &lt;dl&gt;
      &lt;dt&gt;Feature Request&lt;/dt&gt;
        &lt;dd&gt;
          &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1143&quot;&gt;ARQ-1143&lt;/a&gt; -         Provide support for Groovy 2.0&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1144&quot;&gt;ARQ-1144&lt;/a&gt; -         Update Spock version to 0.7&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1347&quot;&gt;ARQ-1347&lt;/a&gt; -         Not possible to run a spock test w/o arquillian&lt;/li&gt;
          &lt;/ul&gt;
      &lt;/dd&gt;
      &lt;/dl&gt;&lt;p&gt;
        Thanks to the following list of contributors:
        &lt;a href=&quot;https://community.jboss.org/people/aslak&quot;&gt;Aslak Knutsen&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/bmajsak&quot;&gt;Bartosz Majsak&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/kpiwko&quot;&gt;Karel Piwko&lt;/a&gt;
      &lt;/p&gt;
    </content>
  </entry>
  <entry>
    <id>http://arquillian.org/blog/2013/06/20/arquillian-extension-warp-1-0-0-Alpha3/</id>
    <title>Arquillian Warp 1.0.0.Alpha3 Released</title>
    <updated>2013-06-21T00:00:00+00:00</updated>
    <link href="http://arquillian.org/blog/2013/06/20/arquillian-extension-warp-1-0-0-Alpha3/" rel="alternate" type="text/html" />
    <category scheme="http://arquillian.org/blog/tags" term="release" />
    <category scheme="http://arquillian.org/blog/tags" term="extension" />
    <category scheme="http://arquillian.org/blog/tags" term="warp" />
    <category scheme="http://arquillian.org/blog" term="arquillian" />
    <summary>
      The Arquillian team is proud to announce the 1.0.0.Alpha3 release of the Arquillian Warp component!
      Warp Alpha3 is a last stop to Beta releases which brings mainly enhancements and bug fixes, but also a pretty new documentation:
      Documentation Draft
      Even though a documentation draft isn&#8217;t published yet to the Arquillian site, it is almost completed.
      This documentation describes; where Warp&#8217;s place in a space of integration testing, how to start with Warp in your project, what features are supported by Warp API and few words about debugging tests and an extension architecture.
      Highlighted Enhancements
      
      	 Jacoco Support
      	Thanks to Aris Tzoumas, Warp users can now enjoy coverage......
    </summary>
    <content type="html">
      &lt;p&gt;The Arquillian team is proud to announce the &lt;em&gt;1.0.0.Alpha3&lt;/em&gt; release of the &lt;em&gt;Arquillian Warp&lt;/em&gt; component!&lt;/p&gt;
      &lt;p&gt;Warp Alpha3 is a last stop to Beta releases which brings mainly enhancements and bug fixes, but also a pretty new documentation:&lt;/p&gt;
      &lt;h3&gt;Documentation Draft&lt;/h3&gt;
      &lt;p&gt;Even though a &lt;a href=&quot;https://github.com/lfryc/arquillian.github.com/blob/warp-docs/docs/warp.adoc#architecture&quot;&gt;documentation draft&lt;/a&gt; isn’t published yet to the Arquillian site, it is almost completed.&lt;/p&gt;
      &lt;p&gt;This documentation describes; where &lt;a href=&quot;https://github.com/lfryc/arquillian.github.com/blob/warp-docs/docs/warp.adoc#what-is-warp&quot;&gt;Warp’s place in a space of integration testing&lt;/a&gt;, how to &lt;a href=&quot;https://github.com/lfryc/arquillian.github.com/blob/warp-docs/docs/warp.adoc#how-to-use-warp&quot;&gt;start with Warp in your project&lt;/a&gt;, what features are supported by &lt;a href=&quot;https://github.com/lfryc/arquillian.github.com/blob/warp-docs/docs/warp.adoc#warp-api&quot;&gt;Warp API&lt;/a&gt; and few words about &lt;a href=&quot;https://github.com/lfryc/arquillian.github.com/blob/warp-docs/docs/warp.adoc#debugging-warp&quot;&gt;debugging tests&lt;/a&gt; and an &lt;a href=&quot;https://github.com/lfryc/arquillian.github.com/blob/warp-docs/docs/warp.adoc#architecture&quot;&gt;extension architecture&lt;/a&gt;.&lt;/p&gt;
      &lt;h3&gt;Highlighted Enhancements&lt;/h3&gt;
      &lt;dl&gt;
      &lt;dt&gt;
      &lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; Jacoco Support&lt;/dt&gt;
      	&lt;dd&gt;&lt;p&gt;Thanks to &lt;a href=&quot;https://github.com/atzoum&quot;&gt;Aris Tzoumas&lt;/a&gt;, Warp users can now enjoy coverage reporting using &lt;a href=&quot;http://arquillian.org/modules/jacoco-extension&quot;&gt;&lt;code&gt;arquillian-extension-jacoco&lt;/code&gt;&lt;/a&gt;. But the contribution was bigger than just that since it enabled a lot of other features.&lt;/p&gt;&lt;/dd&gt;
      &lt;/dl&gt;&lt;dl&gt;
      &lt;dt&gt;
      &lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; Meaningful Reporting&lt;/dt&gt;
      	&lt;dd&gt;
      &lt;p&gt;The concepts Warp builds upon aren’t really complex, however the implementation needs to make sure that users can understand when something breaks. Warp tries to add as much contextual information as needed to overcome common issues together with a hint on how to resolve an issue.&lt;/p&gt;
      &lt;p&gt;We hope to improve reporting even more, but here we rely on you – don’t hesitate to report to us when your experience with Warp isn’t as smooth as it should be.&lt;/p&gt;
      &lt;/dd&gt;
      &lt;/dl&gt;&lt;dl&gt;
      &lt;dt&gt;
      &lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; JSF Managed Beans Injection&lt;/dt&gt;
      	&lt;dd&gt;
      &lt;p&gt;You can now inject any managed artifact through EL expressions using standard &lt;code&gt;ManagedProperty&lt;/code&gt; annotation:&lt;/p&gt;
      &lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;@ManagedProperty(“#{facesContext.application}”) Application application;&lt;br&gt;
      @ManagedProperty(“#{myBean}”) SomeFacesBean myBean;&lt;/code&gt;&lt;/pre&gt;
      &lt;/dd&gt;
      &lt;/dl&gt;&lt;h3&gt;SPI enhancements&lt;/h3&gt;
      &lt;dl&gt;
      &lt;dt&gt;
      &lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; Independent Bi-directional Communication&lt;/dt&gt;
      	&lt;dd&gt;
      &lt;p&gt;During the &lt;code&gt;Alpha3&lt;/code&gt; development we have identified many common problems which came down to basics that &lt;code&gt;Alpha2&lt;/code&gt; was built upon: piggy-backing on HTTP request/response and wrapping &lt;code&gt;HttpServletResponse&lt;/code&gt;.&lt;/p&gt;
      &lt;p&gt;In order to overcome those problems, Warp now leverages an internal SPI for bi-directional direct communication between test and server (originally created by Aris as a way to support Jacoco).&lt;/p&gt;
      &lt;p&gt;This is a fundamental change as it changes the way Warp transfers inspections and it also opens up to completely new possibilities by creating a tigher relationship between a test and a server.&lt;/p&gt;
      &lt;/dd&gt;
      &lt;/dl&gt;&lt;h3&gt;Important Bug Fixes&lt;/h3&gt;
      &lt;dl&gt;
      &lt;dt&gt;
      &lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; Do not interfere with non-Warp tests&lt;/dt&gt;
      	&lt;dd&gt;&lt;p&gt;Warp Alpha2 wasn’t really a good citizen and it tried to hook into all tests even though they weren’t annotated with &lt;code&gt;@WarpTest&lt;/code&gt;. Those problems should now be addressed.&lt;/p&gt;&lt;/dd&gt;
      &lt;/dl&gt;&lt;h3&gt;Enjoy the Release&lt;/h3&gt;
      &lt;p&gt;Alpha3 comes with lot of enhancements which improves the user experience, but it also brings some improvements which were needed to support rising &lt;a href=&quot;https://community.jboss.org/thread/213247&quot;&gt;REST&lt;/a&gt; and &lt;a href=&quot;http://docs.jboss.org/seam/2.0.1.GA/reference/en/html/testing.html&quot;&gt;SeamTest&lt;/a&gt; migration layer extensions driven by &lt;a href=&quot;https://github.com/jmnarloch/&quot;&gt;Jakub Narloch&lt;/a&gt; and &lt;a href=&quot;https://github.com/maschmid&quot;&gt;Marek Schmidt&lt;/a&gt;.&lt;/p&gt;
      &lt;p&gt;Let us know if we can smoothly enter a Beta releases train!&lt;/p&gt;
      &lt;h3&gt;What is Arquillian?&lt;/h3&gt;
      &lt;p&gt;Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop a comprehensive suite of tests from the convenience of your IDE and run them in any IDE, build tool or continuous integration environment.&lt;/p&gt;
      &lt;h3&gt;Release details&lt;/h3&gt;
      &lt;table class=&quot;table table-bordered table-striped&quot;&gt;&lt;tbody&gt;
      &lt;tr&gt;
      &lt;th&gt;Component&lt;/th&gt;
            &lt;td&gt;
              &lt;a href=&quot;http://arquillian.org/modules/warp-extension/&quot;&gt;Arquillian Warp&lt;/a&gt;
            &lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Version&lt;/th&gt;
            &lt;td&gt;
              1.0.0.Alpha3
              &lt;span class=&quot;label tag&quot;&gt;
                &lt;a href=&quot;https://api.github.com/repos/arquillian/arquillian-extension-warp/commits/5c6bc69def7328a2366cee9cbca0c1a676aa5245&quot;&gt;view tag&lt;/a&gt;
              &lt;/span&gt;
            &lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Release date&lt;/th&gt;
            &lt;td&gt;2013-06-20&lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Released by&lt;/th&gt;
            &lt;td&gt;Lukas Fryc&lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Compiled against&lt;/th&gt;
            &lt;td&gt;
              &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;Arquillian Core – 1.0.4.Final&lt;/li&gt;
                &lt;li&gt;ShrinkWrap Resolvers – 2.0.0&lt;/li&gt;
              &lt;/ul&gt;
      &lt;/td&gt;
          &lt;/tr&gt;
      &lt;/tbody&gt;&lt;/table&gt;&lt;h3&gt;
        Published artifacts
        &lt;small&gt;org.jboss.arquillian.extension&lt;/small&gt;
      &lt;/h3&gt;
      &lt;ul&gt;
      &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-warp-api
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-warp-api/1.0.0.Alpha3/arquillian-warp-api-1.0.0.Alpha3.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-warp-api/1.0.0.Alpha3/arquillian-warp-api-1.0.0.Alpha3.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-warp-bom
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-warp-bom/1.0.0.Alpha3/arquillian-warp-bom-1.0.0.Alpha3.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-warp-build-resources
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-warp-build-resources/1.0.0.Alpha3/arquillian-warp-build-resources-1.0.0.Alpha3.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-warp-build-resources/1.0.0.Alpha3/arquillian-warp-build-resources-1.0.0.Alpha3.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-warp-ftest
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-warp-ftest/1.0.0.Alpha3/arquillian-warp-ftest-1.0.0.Alpha3.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-warp-ftest/1.0.0.Alpha3/arquillian-warp-ftest-1.0.0.Alpha3.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-warp-impl
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-warp-impl/1.0.0.Alpha3/arquillian-warp-impl-1.0.0.Alpha3.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-warp-impl/1.0.0.Alpha3/arquillian-warp-impl-1.0.0.Alpha3.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-warp-jsf
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-warp-jsf/1.0.0.Alpha3/arquillian-warp-jsf-1.0.0.Alpha3.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-warp-jsf/1.0.0.Alpha3/arquillian-warp-jsf-1.0.0.Alpha3.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-warp-jsf-ftest
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-warp-jsf-ftest/1.0.0.Alpha3/arquillian-warp-jsf-ftest-1.0.0.Alpha3.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-warp-jsf-ftest/1.0.0.Alpha3/arquillian-warp-jsf-ftest-1.0.0.Alpha3.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-warp-spi
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-warp-spi/1.0.0.Alpha3/arquillian-warp-spi-1.0.0.Alpha3.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-warp-spi/1.0.0.Alpha3/arquillian-warp-spi-1.0.0.Alpha3.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
      &lt;/ul&gt;&lt;h3&gt;
        Release notes and resolved issues
        &lt;small&gt;24&lt;/small&gt;
      &lt;/h3&gt;
      &lt;p&gt;Bug fixes + Jacoco support&lt;/p&gt;
      &lt;dl&gt;
      &lt;dt&gt;Bug&lt;/dt&gt;
        &lt;dd&gt;
          &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1027&quot;&gt;ARQ-1027&lt;/a&gt; -         Support CommandService Protocol SPI via Warp Protocol&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1291&quot;&gt;ARQ-1291&lt;/a&gt; -         Warp: single request execution does enrich only first request&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1320&quot;&gt;ARQ-1320&lt;/a&gt; -         Warp - The NonWrittingResponse does not override the flushBuffer() method allowing for committing response.&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1324&quot;&gt;ARQ-1324&lt;/a&gt; -         Warp HTTP request header size beyond reasonable limits&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1326&quot;&gt;ARQ-1326&lt;/a&gt; -         Warp: the @RunAsClient tests uses proxy even in case the test is not @WarpTest&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1365&quot;&gt;ARQ-1365&lt;/a&gt; -         Warp: CommandEventBus doesn't support (port) redirects&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1369&quot;&gt;ARQ-1369&lt;/a&gt; -         Warp: TestContainerToClientChannel sporadically fails&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1395&quot;&gt;ARQ-1395&lt;/a&gt; -         CommandBusService is started even tho the test is not a @WarpTest&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1396&quot;&gt;ARQ-1396&lt;/a&gt; -         CommandEventBusService use wrong metadata to match Request URI&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1397&quot;&gt;ARQ-1397&lt;/a&gt; -         Multiple problems running Warp on WildFly 8.0.0.Alpha1&lt;/li&gt;
          &lt;/ul&gt;
      &lt;/dd&gt;
      &lt;/dl&gt;&lt;dl&gt;
      &lt;dt&gt;Component  Upgrade&lt;/dt&gt;
        &lt;dd&gt;
          &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1140&quot;&gt;ARQ-1140&lt;/a&gt; -         Warp: upgrade LittleProxy to 0.5&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1415&quot;&gt;ARQ-1415&lt;/a&gt; -         Warp: upgrade to Arquillian Core 1.0.4&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1416&quot;&gt;ARQ-1416&lt;/a&gt; -         Warp: upgrade to ShrinkWrap resolver 1.0.0&lt;/li&gt;
          &lt;/ul&gt;
      &lt;/dd&gt;
      &lt;/dl&gt;&lt;dl&gt;
      &lt;dt&gt;Enhancement&lt;/dt&gt;
        &lt;dd&gt;
          &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-934&quot;&gt;ARQ-934&lt;/a&gt; -         Warp: Reuse manager during whole test&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1325&quot;&gt;ARQ-1325&lt;/a&gt; -         Warp: replace piggy-backing on request/response with direct test-&amp;gt;filter communication&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1353&quot;&gt;ARQ-1353&lt;/a&gt; -         Warp: propagate manager's context to proxy correctly&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1361&quot;&gt;ARQ-1361&lt;/a&gt; -         Warp: bring more clarity to ServerResponseTimeoutException failures&lt;/li&gt;
          &lt;/ul&gt;
      &lt;/dd&gt;
      &lt;/dl&gt;&lt;dl&gt;
      &lt;dt&gt;Feature Request&lt;/dt&gt;
        &lt;dd&gt;
          &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1312&quot;&gt;ARQ-1312&lt;/a&gt; -         Warp: introduce RequestProcessingDelegationService&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1319&quot;&gt;ARQ-1319&lt;/a&gt; -         Warp: Jacoco support&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1367&quot;&gt;ARQ-1367&lt;/a&gt; -         Warp: wrapped response causes NPE&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1368&quot;&gt;ARQ-1368&lt;/a&gt; -         Warp: reverse order of chaining of request builder&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1371&quot;&gt;ARQ-1371&lt;/a&gt; -         Warp: enricher allowing to inject JSF managed beans / properties&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1386&quot;&gt;ARQ-1386&lt;/a&gt; -         Warp: provide a meaningful message when test isn't annotated with @WarpTest&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1400&quot;&gt;ARQ-1400&lt;/a&gt; -         Failure to create Enrichment hidden by Client Assertion&lt;/li&gt;
          &lt;/ul&gt;
      &lt;/dd&gt;
      &lt;/dl&gt;&lt;p&gt;
        Thanks to the following list of contributors:
        &lt;a href=&quot;https://community.jboss.org/people/lfryc&quot;&gt;Lukas Fryc&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/atzoum&quot;&gt;Atzoum&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/atzoum&quot;&gt;Atzoum&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/aslak&quot;&gt;Aslak Knutsen&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/jmnarloch&quot;&gt;Jakub Narloch&lt;/a&gt;, atzoum
      &lt;/p&gt;
    </content>
  </entry>
  <entry>
    <id>http://arquillian.org/blog/2013/06/19/arquillian-extension-guice-1-0-0-Alpha1/</id>
    <title>Arquillian Google Guice Extension 1.0.0.Alpha1 Released</title>
    <updated>2013-06-20T00:00:00+00:00</updated>
    <link href="http://arquillian.org/blog/2013/06/19/arquillian-extension-guice-1-0-0-Alpha1/" rel="alternate" type="text/html" />
    <category scheme="http://arquillian.org/blog/tags" term="release" />
    <category scheme="http://arquillian.org/blog/tags" term="extension" />
    <category scheme="http://arquillian.org/blog/tags" term="guice" />
    <category scheme="http://arquillian.org/blog" term="arquillian" />
    <summary>
      The Arquillian team is proud to announce the 1.0.0.Alpha1 release of the Arquillian Google Guice Extension component!
      This is the first release of the Arquillian Guice extension. We&#8217;re bringing the next IOC container into the Arquillian universe.
      Some of the highlights in this release
      
      	 Dependency injection
      	Using this extension setting up a Guice test becomes pretty simple, allowing you to inject all Guice managed dependencies directly into the test case.
      
      
      	 Built in Guice deployer
      	With the help of this extension you don&#8217;t need to add Guice to your deployments manually, the extension will take care of that for you.
      
      There are two ways of enabling......
    </summary>
    <content type="html">
      &lt;p&gt;The Arquillian team is proud to announce the &lt;em&gt;1.0.0.Alpha1&lt;/em&gt; release of the &lt;em&gt;Arquillian Google Guice Extension&lt;/em&gt; component!&lt;/p&gt;
      &lt;p&gt;This is the first release of the Arquillian Guice extension. We’re bringing the next IOC container into the Arquillian universe.&lt;/p&gt;
      &lt;h3 class=&quot;highlights&quot;&gt;Some of the highlights in this release&lt;/h3&gt;
      &lt;dl&gt;
      &lt;dt&gt;
      &lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; Dependency injection&lt;/dt&gt;
      	&lt;dd&gt;&lt;p&gt;Using this extension setting up a Guice test becomes pretty simple, allowing you to inject all Guice managed dependencies directly into the test case.&lt;/p&gt;&lt;/dd&gt;
      &lt;/dl&gt;&lt;dl&gt;
      &lt;dt&gt;
      &lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; Built in Guice deployer&lt;/dt&gt;
      	&lt;dd&gt;&lt;p&gt;With the help of this extension you don’t need to add Guice to your deployments manually, the extension will take care of that for you.&lt;/p&gt;&lt;/dd&gt;
      &lt;/dl&gt;&lt;p&gt;There are two ways of enabling Guice injection in an Arquillian test case:&lt;br&gt;
      The first way is to annotate an Arquillian test case with &lt;code&gt;@GuiceConfiguration&lt;/code&gt;. The annotation values allow you to specify the modules that will be passed to the injector instance on creation.&lt;/p&gt;
      &lt;p&gt;Example test:&lt;/p&gt;
      &lt;div class=&quot;filename&quot;&gt;AppointmentServiceImplTestCase.java&lt;/div&gt;
      &lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;@RunWith(Arquillian.class)
      @GuiceConfiguration(AppointmentModule.class)
      public class AppointmentServiceImplTestCase {&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;   @Deployment
         public static JavaArchive createTestArchive() {
             return ShrinkWrap.create(JavaArchive.class, &quot;guice-test.jar&quot;)
                     .addClasses(Appointment.class,
                             AppointmentRepository.class, AppointmentRepositoryImpl.class,
                             AppointmentService.class, AppointmentServiceImpl.class,
                             AppointmentModule.class);
         }&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;   @Inject
         @Named(&quot;appointmentService&quot;)
         private AppointmentService appointmentService;&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;   @Test
         public void testGetAll() {&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;       Appointment appointment1 = createAppointment(&quot;Important&quot;, &quot;Work&quot;, new Date());
             Appointment appointment2 = createAppointment(&quot;Do not forget&quot;, &quot;Work&quot;, new Date());&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;       appointmentService.add(appointment1);
             appointmentService.add(appointment2);&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;       List&amp;lt;Appointment&amp;gt; result = appointmentService.getAll();
             assertNotNull(&quot;Method returned null.&quot;, result);
             assertEquals(&quot;Invalid element count, 2 appointments were expected.&quot;, 2, result.size());
         }
      }&lt;/code&gt;&lt;/pre&gt;
      &lt;p&gt;Where &lt;code&gt;AppointmentModule&lt;/code&gt; is defined as fallows:&lt;/p&gt;
      &lt;div class=&quot;filename&quot;&gt;AppointmentModule.java&lt;/div&gt;
      &lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;public class AppointmentModule implements Module {&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;    public void configure(Binder binder) {&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;        binder.bind(AppointmentRepository.class)
                      .annotatedWith(Names.named(&quot;appointmentRepository&quot;))
                      .to(AppointmentRepositoryImpl.class);
              binder.bind(AppointmentService.class)
                      .annotatedWith(Names.named(&quot;appointmentService&quot;))
                      .to(AppointmentServiceImpl.class);
          }
      }&lt;/code&gt;&lt;/pre&gt;
      &lt;p&gt;Guice configuration uses module instances instead of static classes known at compile time, which means that modules can have different state at runtime. Taking that into consideration, static annotation could in some cases be limiting. This is way we added a second possibility for enabling Guice. A static factory method could be added in the test case and annotated with &lt;code&gt;@GuiceInjector&lt;/code&gt; that instantiates the Injector directly. The extension will invoke the method prior to test execution and based on the returned injector the dependencies will be available for injection. Is the previous test we would only need to add:&lt;/p&gt;
      &lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;@GuiceInjector
      public static Injector createInjector() {&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;    return Guice.createInjector(new AppointmentModule());
      }&lt;/code&gt;&lt;/pre&gt;
      &lt;p&gt;The extension defines some pretty simple settings to control how the packaging occur;  specify the version of guice to package and if the auto packaging should happen at all.&lt;/p&gt;
      &lt;div class=&quot;filename&quot;&gt;arquillian.xml&lt;/div&gt;
      &lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;&amp;lt;extension qualifier=&quot;guice&quot;&amp;gt;
           &amp;lt;property name=&quot;autoPackage&quot;&amp;gt;false&amp;lt;/property&amp;gt;
           &amp;lt;property name=&quot;guiceVersion&quot;&amp;gt;3.0&amp;lt;/property&amp;gt;
      &amp;lt;/extension&amp;gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;p&gt;We look forward to hearing your feedback about this release in the &lt;a href=&quot;http://community.jboss.org/en/arquillian&quot;&gt;community forums&lt;/a&gt;!&lt;/p&gt;
      &lt;h3&gt;What is Arquillian?&lt;/h3&gt;
      &lt;p&gt;Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop a comprehensive suite of tests from the convenience of your IDE and run them in any IDE, build tool or continuous integration environment.&lt;/p&gt;
      &lt;h3&gt;Release details&lt;/h3&gt;
      &lt;table class=&quot;table table-bordered table-striped&quot;&gt;&lt;tbody&gt;
      &lt;tr&gt;
      &lt;th&gt;Component&lt;/th&gt;
            &lt;td&gt;
              &lt;a href=&quot;http://arquillian.org/modules/guice-extension/&quot;&gt;Arquillian Google Guice Extension&lt;/a&gt;
            &lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Version&lt;/th&gt;
            &lt;td&gt;
              1.0.0.Alpha1
              &lt;span class=&quot;label tag&quot;&gt;
                &lt;a href=&quot;https://api.github.com/repos/arquillian/arquillian-extension-guice/commits/ddb601f5a61a96f8bb6a72ed8a6ab405d7e03496&quot;&gt;view tag&lt;/a&gt;
              &lt;/span&gt;
            &lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Release date&lt;/th&gt;
            &lt;td&gt;2013-06-19&lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Released by&lt;/th&gt;
            &lt;td&gt;Aslak Knutsen&lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Compiled against&lt;/th&gt;
            &lt;td&gt;
              &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;Arquillian Core – 1.0.3.Final&lt;/li&gt;
                &lt;li&gt;ShrinkWrap Resolvers – 2.0.0-alpha-1&lt;/li&gt;
              &lt;/ul&gt;
      &lt;/td&gt;
          &lt;/tr&gt;
      &lt;/tbody&gt;&lt;/table&gt;&lt;h3&gt;
        Published artifacts
        &lt;small&gt;org.jboss.arquillian.extension&lt;/small&gt;
      &lt;/h3&gt;
      &lt;ul&gt;
      &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-guice-api
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-guice-api/1.0.0.Alpha1/arquillian-guice-api-1.0.0.Alpha1.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-guice-api/1.0.0.Alpha1/arquillian-guice-api-1.0.0.Alpha1.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-guice-bom
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-guice-bom/1.0.0.Alpha1/arquillian-guice-bom-1.0.0.Alpha1.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-guice-impl
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-guice-impl/1.0.0.Alpha1/arquillian-guice-impl-1.0.0.Alpha1.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-guice-impl/1.0.0.Alpha1/arquillian-guice-impl-1.0.0.Alpha1.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
      &lt;/ul&gt;&lt;h3&gt;
        Release notes and resolved issues
        &lt;small&gt;1&lt;/small&gt;
      &lt;/h3&gt;
      &lt;p&gt;Initial release of Arquillian Google Guice Extension&lt;/p&gt;
      &lt;p&gt;
        Thanks to the following list of contributors:
        &lt;a href=&quot;https://community.jboss.org/people/aslak&quot;&gt;Aslak Knutsen&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/jmnarloch&quot;&gt;Jakub Narloch&lt;/a&gt;
      &lt;/p&gt;
    </content>
  </entry>
  <entry>
    <id>http://arquillian.org/blog/2013/06/18/arquillian-extension-spring-1-0-0-Beta2/</id>
    <title>Arquillian Spring Framework Extension 1.0.0.Beta2 Released</title>
    <updated>2013-06-19T00:00:00+00:00</updated>
    <link href="http://arquillian.org/blog/2013/06/18/arquillian-extension-spring-1-0-0-Beta2/" rel="alternate" type="text/html" />
    <category scheme="http://arquillian.org/blog/tags" term="release" />
    <category scheme="http://arquillian.org/blog/tags" term="extension" />
    <category scheme="http://arquillian.org/blog/tags" term="spring" />
    <category scheme="http://arquillian.org/blog" term="arquillian" />
    <summary>
      The Arquillian team is proud to announce the 1.0.0.Beta2 release of the Arquillian Spring Framework Extension component!
      It has been a while since that last Arquillian Spring extension release, but it&#8217;s finally here. This release focus more on improving existing features rather then introducing completely new ones.
      I would like to thank Jakub Kurlenda and John Ament for helping with this release.
      Some of the highlights in this release
       Managing the Spring&#8217;s ApplicationContext lifecycle
       New ways of configuring Spring&#8217;s context
       Warp Spring extension
       Deployer new functionality
      Managing the Spring&#8217;s ApplicationContext lifecycle
      Previous versions had one common drawback, each test were running using a separate instance......
    </summary>
    <content type="html">
      &lt;p&gt;The Arquillian team is proud to announce the &lt;em&gt;1.0.0.Beta2&lt;/em&gt; release of the &lt;em&gt;Arquillian Spring Framework Extension&lt;/em&gt; component!&lt;/p&gt;
      &lt;p&gt;It has been a while since that last Arquillian Spring extension release, but it’s finally here. This release focus more on improving existing features rather then introducing completely new ones.&lt;/p&gt;
      &lt;p&gt;I would like to thank Jakub Kurlenda and John Ament for helping with this release.&lt;/p&gt;
      &lt;h3 class=&quot;highlights&quot;&gt;Some of the highlights in this release&lt;/h3&gt;
      &lt;p&gt;&lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; Managing the Spring’s ApplicationContext lifecycle&lt;/p&gt;
      &lt;p&gt;&lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; New ways of configuring Spring’s context&lt;/p&gt;
      &lt;p&gt;&lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; Warp Spring extension&lt;/p&gt;
      &lt;p&gt;&lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; Deployer new functionality&lt;/p&gt;
      &lt;h3&gt;Managing the Spring’s ApplicationContext lifecycle&lt;/h3&gt;
      &lt;p&gt;Previous versions had one common drawback, each test were running using a separate instance of  Spring’s &lt;code&gt;ApplicationContext&lt;/code&gt;. Although the &lt;code&gt;ApplicationContext&lt;/code&gt; were destroyed and all of its resources were freed after the test execution, this brought additional overhead for each test. From now on the developer has the control whether he want to create only a single context per test case or to have each test run with a new “clean” context, which in some situation might be handy. By default the context will be created only once, but it can easly be  changed by adding the &lt;code&gt;@ContextLifeCycle&lt;/code&gt; annotation to the test case.&lt;/p&gt;
      &lt;h3&gt;New ways of configuring Spring’s context&lt;/h3&gt;
      &lt;p&gt;This release also bring a couple of new features to ease the test configuration. First are smart defaults used for configuration. Each &lt;code&gt;@SpringConfiguration&lt;/code&gt; annotated test do not need to explicitly define the location of the XML file anymore. If no file has been defined, by default the extension will look for file in classpath with exactly the same name as the class located in the class package. The same goes for &lt;code&gt;@SpringAnnotationConfiguration&lt;/code&gt;, which now allow to add a static non final internal class which needs to be marked with &lt;code&gt;@Configuration&lt;/code&gt;. The extension will use that class by default when configuring Spring.&lt;/p&gt;
      &lt;p&gt;Example:&lt;/p&gt;
      &lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;@SpringClientAnnotationConfiguration
      public class TestCase {&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;    @Configuration
          public static class ContextConfiguration {&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;        @Bean
              public EmployeeService employeeService() {
                  return new EmployeeServiceImpl();
              }
          }
      }&lt;/code&gt;&lt;/pre&gt;
      &lt;p&gt;The last new feature is programmatic creation of the ApplicationContext from within a test. From now on it is possible to create the instance of the Spring &lt;code&gt;ApplicationContext&lt;/code&gt; for each test via code. This is done by adding a static factory method to the test which needs to be annotated with &lt;code&gt;@SpringContextConfiguration&lt;/code&gt;. The extension will invoke this method prior to test execution (all context lifecycle rules mentioned above also apply here) and use it’s result afterwards.&lt;/p&gt;
      &lt;p&gt;Example:&lt;/p&gt;
      &lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;@SpringContextConfiguration
      public static ApplicationContext contextConfiguration() {&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;   return new ClassPathXmlApplicationContext(
             new String[]{&quot;classpath:service.xml&quot;, &quot;classpath:repository.xml&quot;});
      }&lt;/code&gt;&lt;/pre&gt;
      &lt;p&gt;Why would this be needed? In some cases you needs to have greater control over the context; for instance at the moment this is the only way to pragmatically set the Spring profiles to use for the test. The other possibility could be integration with other frameworks in which the context should not be managed by the test itself.&lt;/p&gt;
      &lt;h3&gt;Warp Spring extension&lt;/h3&gt;
      &lt;p&gt;The Warp Spring extension has been updated to the latest Alpha 2 release. For consistency with other Warp extensions the &lt;code&gt;SpringMvcResult&lt;/code&gt; can be now injected using &lt;code&gt;@ArquillianResource&lt;/code&gt; annotation. The custom &lt;code&gt;@SpringResource&lt;/code&gt; has been deprecated and might be remove in next releases.&lt;/p&gt;
      &lt;h3&gt;Deployer new functionality&lt;/h3&gt;
      &lt;p&gt;The Spring deployer, which is used for automatic packaging the Spring artifacts and enriching the test deployment, has received some updates. It now allows for importing the dependencies directly from the Maven POM file, and could aid with setting up the deployment. The deployer can be configured in the arquillian.xml file through the &lt;code&gt;spring-deployer&lt;/code&gt; section. Additional properties like &lt;code&gt;pomFile&lt;/code&gt; allow you to specify the location of the pom file to load; &lt;code&gt;useMavenOffline&lt;/code&gt; controls the offline mode of the maven resolver in use, and &lt;code&gt;enableCache&lt;/code&gt; controls whether the deployer should cache the artifacts in memory. Finally the &lt;code&gt;excludedArtifacts&lt;/code&gt; allow you to exclude artifacts that are unwanted from the deployment&lt;/p&gt;
      &lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;&amp;lt;extension qualifier=&quot;spring-deployer&quot;&amp;gt;&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;        &amp;lt;property name=&quot;importPomDependencies&quot;&amp;gt;true&amp;lt;/property&amp;gt;&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;        &amp;lt;property name=&quot;pomFile&quot;&amp;gt;src/main/resources/test_pom.xml&amp;lt;/property&amp;gt;&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;        &amp;lt;property name=&quot;useMavenOffline&quot;&amp;gt;false&amp;lt;/property&amp;gt;&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;        &amp;lt;property name=&quot;excludedArtifacts&quot;&amp;gt;org.jboss.arquillian:*&amp;lt;/property&amp;gt;&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;        &amp;lt;property name=&quot;enableCache&quot;&amp;gt;true&amp;lt;/property&amp;gt;
      &amp;lt;/extension&amp;gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;p&gt;We look forward to your feedback on this new release on the &lt;a href=&quot;http://community.jboss.org/en/arquillian&quot;&gt;community forums&lt;/a&gt;!&lt;/p&gt;
      &lt;h3&gt;What is Arquillian?&lt;/h3&gt;
      &lt;p&gt;Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop a comprehensive suite of tests from the convenience of your IDE and run them in any IDE, build tool or continuous integration environment.&lt;/p&gt;
      &lt;h3&gt;Release details&lt;/h3&gt;
      &lt;table class=&quot;table table-bordered table-striped&quot;&gt;&lt;tbody&gt;
      &lt;tr&gt;
      &lt;th&gt;Component&lt;/th&gt;
            &lt;td&gt;
              &lt;a href=&quot;http://arquillian.org/modules/spring-extension/&quot;&gt;Arquillian Spring Framework Extension&lt;/a&gt;
            &lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Version&lt;/th&gt;
            &lt;td&gt;
              1.0.0.Beta2
              &lt;span class=&quot;label tag&quot;&gt;
                &lt;a href=&quot;https://api.github.com/repos/arquillian/arquillian-extension-spring/commits/e61bbd6d447f6d397166149b6311713cb6677bcc&quot;&gt;view tag&lt;/a&gt;
              &lt;/span&gt;
            &lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Release date&lt;/th&gt;
            &lt;td&gt;2013-06-19&lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Released by&lt;/th&gt;
            &lt;td&gt;Aslak Knutsen&lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Compiled against&lt;/th&gt;
            &lt;td&gt;
              &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;Arquillian Core – 1.0.4.Final&lt;/li&gt;
                &lt;li&gt;JUnit – 4.8.1&lt;/li&gt;
              &lt;/ul&gt;
      &lt;/td&gt;
          &lt;/tr&gt;
      &lt;/tbody&gt;&lt;/table&gt;&lt;h3&gt;
        Published artifacts
        &lt;small&gt;org.jboss.arquillian.extension&lt;/small&gt;
      &lt;/h3&gt;
      &lt;ul&gt;
      &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-service-container-spring
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-service-container-spring/1.0.0.Beta2/arquillian-service-container-spring-1.0.0.Beta2.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-service-container-spring/1.0.0.Beta2/arquillian-service-container-spring-1.0.0.Beta2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-service-deployer-spring-2.5
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-service-deployer-spring-2.5/1.0.0.Beta2/arquillian-service-deployer-spring-2.5-1.0.0.Beta2.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-service-deployer-spring-2.5/1.0.0.Beta2/arquillian-service-deployer-spring-2.5-1.0.0.Beta2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-service-deployer-spring-3
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-service-deployer-spring-3/1.0.0.Beta2/arquillian-service-deployer-spring-3-1.0.0.Beta2.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-service-deployer-spring-3/1.0.0.Beta2/arquillian-service-deployer-spring-3-1.0.0.Beta2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-service-deployer-spring-common
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-service-deployer-spring-common/1.0.0.Beta2/arquillian-service-deployer-spring-common-1.0.0.Beta2.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-service-deployer-spring-common/1.0.0.Beta2/arquillian-service-deployer-spring-common-1.0.0.Beta2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-service-integration-spring
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-service-integration-spring/1.0.0.Beta2/arquillian-service-integration-spring-1.0.0.Beta2.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-service-integration-spring/1.0.0.Beta2/arquillian-service-integration-spring-1.0.0.Beta2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-service-integration-spring-inject
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-service-integration-spring-inject/1.0.0.Beta2/arquillian-service-integration-spring-inject-1.0.0.Beta2.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-service-integration-spring-inject/1.0.0.Beta2/arquillian-service-integration-spring-inject-1.0.0.Beta2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-service-integration-spring-javaconfig
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-service-integration-spring-javaconfig/1.0.0.Beta2/arquillian-service-integration-spring-javaconfig-1.0.0.Beta2.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-service-integration-spring-javaconfig/1.0.0.Beta2/arquillian-service-integration-spring-javaconfig-1.0.0.Beta2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-transaction-spring
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-transaction-spring/1.0.0.Beta2/arquillian-transaction-spring-1.0.0.Beta2.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-transaction-spring/1.0.0.Beta2/arquillian-transaction-spring-1.0.0.Beta2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-warp-spring
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-warp-spring/1.0.0.Beta2/arquillian-warp-spring-1.0.0.Beta2.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-warp-spring/1.0.0.Beta2/arquillian-warp-spring-1.0.0.Beta2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-warp-spring-ftest
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-warp-spring-ftest/1.0.0.Beta2/arquillian-warp-spring-ftest-1.0.0.Beta2.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-warp-spring-ftest/1.0.0.Beta2/arquillian-warp-spring-ftest-1.0.0.Beta2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
      &lt;/ul&gt;&lt;h3&gt;
        Release notes and resolved issues
        &lt;small&gt;16&lt;/small&gt;
      &lt;/h3&gt;
      &lt;p&gt;Improvements&lt;/p&gt;
      &lt;dl&gt;
      &lt;dt&gt;Bug&lt;/dt&gt;
        &lt;dd&gt;
          &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1079&quot;&gt;ARQ-1079&lt;/a&gt; -         SpringEmbeddedApplicationContextProducer testApplicationContext is missing the scope definition.&lt;/li&gt;
          &lt;/ul&gt;
      &lt;/dd&gt;
      &lt;/dl&gt;&lt;dl&gt;
      &lt;dt&gt;Feature Request&lt;/dt&gt;
        &lt;dd&gt;
          &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-960&quot;&gt;ARQ-960&lt;/a&gt; -         Provide the way to specify the strategy on instantiting AppllicationContext e.g. each test method  or each test case&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1104&quot;&gt;ARQ-1104&lt;/a&gt; -         Spring deployer should include all spring artifacts&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1105&quot;&gt;ARQ-1105&lt;/a&gt; -         Spring deployer - add maven offline property&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1106&quot;&gt;ARQ-1106&lt;/a&gt; -         Spring deployer - allow caching the resolved libraries between deployments&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1108&quot;&gt;ARQ-1108&lt;/a&gt; -         Register the spring transaction provider on the client side.&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1134&quot;&gt;ARQ-1134&lt;/a&gt; -         Spring deployer - change the implementation of MavenDependencyBuilder.&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1269&quot;&gt;ARQ-1269&lt;/a&gt; -         Upgrade Spring MVC integration to use Warp 1.0.0.Alpha2.&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1270&quot;&gt;ARQ-1270&lt;/a&gt; -         Upgrade Spring extension to Arquillian Core 1.0.3&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1277&quot;&gt;ARQ-1277&lt;/a&gt; -         Allow the SpringMvcResult to be injected through @ArquillianResource.&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1304&quot;&gt;ARQ-1304&lt;/a&gt; -         Create test ApplicationContext through factory method.&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1305&quot;&gt;ARQ-1305&lt;/a&gt; -         Defaults values for @SpringConfiguration and @SpringAnnotationConfiguration&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1317&quot;&gt;ARQ-1317&lt;/a&gt; -         Warp Spring MVC - capture the execution state through HandlerInterceptor&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1358&quot;&gt;ARQ-1358&lt;/a&gt; -         Define ApplicationContext life cycle events.&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1408&quot;&gt;ARQ-1408&lt;/a&gt; -         Upgrade Spring extension to Arquillian 1.0.4.Final.&lt;/li&gt;
          &lt;/ul&gt;
      &lt;/dd&gt;
      &lt;/dl&gt;&lt;p&gt;
        Thanks to the following list of contributors:
        &lt;a href=&quot;https://community.jboss.org/people/jmnarloch&quot;&gt;Jakub Narloch&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/aslak&quot;&gt;Aslak Knutsen&lt;/a&gt;, &lt;a href=&quot;https://github.com/kurlenda&quot;&gt;Jakub Kurlenda&lt;/a&gt;, &lt;a href=&quot;https://github.com/kurlenda&quot;&gt;Jakub Kurlenda&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/meetoblivion&quot;&gt;John D. Ament&lt;/a&gt;
      &lt;/p&gt;
    </content>
  </entry>
  <entry>
    <id>http://arquillian.org/blog/2013/06/10/arquillian-container-osgi-2-0-0-CR4/</id>
    <title>Arquillian OSGi 2.0.0.CR4 Released</title>
    <updated>2013-06-11T00:00:00+00:00</updated>
    <link href="http://arquillian.org/blog/2013/06/10/arquillian-container-osgi-2-0-0-CR4/" rel="alternate" type="text/html" />
    <category scheme="http://arquillian.org/blog/tags" term="release" />
    <category scheme="http://arquillian.org/blog/tags" term="container-adapter" />
    <category scheme="http://arquillian.org/blog/tags" term="osgi" />
    <category scheme="http://arquillian.org/blog" term="arquillian" />
    <summary>
      The Arquillian team is proud to announce the 2.0.0.CR4 release of the Arquillian OSGi component!
      
      What is Arquillian?
      Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop a comprehensive suite of tests from the convenience of your IDE and run them in any IDE, build tool or continuous integration environment.
      Release details
      
        
          
            Component
      ......
    </summary>
    <content type="html">
      &lt;p&gt;The Arquillian team is proud to announce the &lt;em&gt;2.0.0.CR4&lt;/em&gt; release of the &lt;em&gt;Arquillian OSGi&lt;/em&gt; component!&lt;/p&gt;
      
      &lt;h3&gt;What is Arquillian?&lt;/h3&gt;
      &lt;p&gt;Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop a comprehensive suite of tests from the convenience of your IDE and run them in any IDE, build tool or continuous integration environment.&lt;/p&gt;
      &lt;h3&gt;Release details&lt;/h3&gt;
      &lt;table class=&quot;table table-bordered table-striped&quot;&gt;&lt;tbody&gt;
      &lt;tr&gt;
      &lt;th&gt;Component&lt;/th&gt;
            &lt;td&gt;
              &lt;a href=&quot;http://arquillian.org/modules/arquillian-osgi-embedded-container-adapter/&quot;&gt;Arquillian OSGi&lt;/a&gt;
            &lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Version&lt;/th&gt;
            &lt;td&gt;
              2.0.0.CR4
              &lt;span class=&quot;label tag&quot;&gt;
                &lt;a href=&quot;https://api.github.com/repos/arquillian/arquillian-container-osgi/commits/06e0438a3e95863ff8862445cf480972120bdc5f&quot;&gt;view tag&lt;/a&gt;
              &lt;/span&gt;
            &lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Release date&lt;/th&gt;
            &lt;td&gt;2013-06-10&lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Released by&lt;/th&gt;
            &lt;td&gt;Thomas Diesler&lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Compiled against&lt;/th&gt;
            &lt;td&gt;
              &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;Arquillian Core – 1.0.2.Final&lt;/li&gt;
                &lt;li&gt;ShrinkWrap Core – 1.0.0&lt;/li&gt;
              &lt;/ul&gt;
      &lt;/td&gt;
          &lt;/tr&gt;
      &lt;/tbody&gt;&lt;/table&gt;&lt;h3&gt;
        Published artifacts
        &lt;small&gt;org.jboss.arquillian.container&lt;/small&gt;
      &lt;/h3&gt;
      &lt;ul&gt;
      &lt;li&gt;
          org.jboss.arquillian.container
          »
          arquillian-container-osgi
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-osgi/2.0.0.CR4/arquillian-container-osgi-2.0.0.CR4.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-osgi/2.0.0.CR4/arquillian-container-osgi-2.0.0.CR4.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.container
          »
          arquillian-osgi-embedded
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-osgi-embedded/2.0.0.CR4/arquillian-osgi-embedded-2.0.0.CR4.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-osgi-embedded/2.0.0.CR4/arquillian-osgi-embedded-2.0.0.CR4.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.container
          »
          arquillian-osgi-felix
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-osgi-felix/2.0.0.CR4/arquillian-osgi-felix-2.0.0.CR4.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-osgi-felix/2.0.0.CR4/arquillian-osgi-felix-2.0.0.CR4.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.protocol
          »
          arquillian-osgi-protocol
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/protocol/arquillian-osgi-protocol/2.0.0.CR4/arquillian-osgi-protocol-2.0.0.CR4.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/protocol/arquillian-osgi-protocol/2.0.0.CR4/arquillian-osgi-protocol-2.0.0.CR4.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.testenricher
          »
          arquillian-osgi-testenricher
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testenricher/arquillian-osgi-testenricher/2.0.0.CR4/arquillian-osgi-testenricher-2.0.0.CR4.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testenricher/arquillian-osgi-testenricher/2.0.0.CR4/arquillian-osgi-testenricher-2.0.0.CR4.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
      &lt;/ul&gt;&lt;p&gt;
        Thanks to the following list of contributors:
        &lt;a href=&quot;https://community.jboss.org/people/thomas.diesler&quot;&gt;Thomas Diesler&lt;/a&gt;
      &lt;/p&gt;
    </content>
  </entry>
  <entry>
    <id>http://arquillian.org/blog/2013/06/04/arquillian-core-1-0-4-Final/</id>
    <title>Arquillian Core 1.0.4.Final Released</title>
    <updated>2013-06-05T00:00:00+00:00</updated>
    <link href="http://arquillian.org/blog/2013/06/04/arquillian-core-1-0-4-Final/" rel="alternate" type="text/html" />
    <category scheme="http://arquillian.org/blog/tags" term="release" />
    <category scheme="http://arquillian.org/blog/tags" term="platform" />
    <category scheme="http://arquillian.org/blog/tags" term="core" />
    <category scheme="http://arquillian.org/blog/tags" term="jbosscentral" />
    <category scheme="http://arquillian.org/blog" term="arquillian" />
    <summary>
      The Arquillian team is proud to announce the 1.0.4.Final release of the Arquillian Core component!
      
      What is Arquillian?
      Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop a comprehensive suite of tests from the convenience of your IDE and run them in any IDE, build tool or continuous integration environment.
      Release details
      
        
          
            Component
      ......
    </summary>
    <content type="html">
      &lt;p&gt;The Arquillian team is proud to announce the &lt;em&gt;1.0.4.Final&lt;/em&gt; release of the &lt;em&gt;Arquillian Core&lt;/em&gt; component!&lt;/p&gt;
      
      &lt;h3&gt;What is Arquillian?&lt;/h3&gt;
      &lt;p&gt;Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop a comprehensive suite of tests from the convenience of your IDE and run them in any IDE, build tool or continuous integration environment.&lt;/p&gt;
      &lt;h3&gt;Release details&lt;/h3&gt;
      &lt;table class=&quot;table table-bordered table-striped&quot;&gt;&lt;tbody&gt;
      &lt;tr&gt;
      &lt;th&gt;Component&lt;/th&gt;
            &lt;td&gt;
              &lt;a href=&quot;http://arquillian.org/modules/core-platform/&quot;&gt;Arquillian Core&lt;/a&gt;
            &lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Version&lt;/th&gt;
            &lt;td&gt;
              1.0.4.Final
              &lt;span class=&quot;label tag&quot;&gt;
                &lt;a href=&quot;https://api.github.com/repos/arquillian/arquillian-core/commits/cb6f79caf03ed37fc2f43f27332a9ba87ffd69b5&quot;&gt;view tag&lt;/a&gt;
              &lt;/span&gt;
            &lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Release date&lt;/th&gt;
            &lt;td&gt;2013-06-04&lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Released by&lt;/th&gt;
            &lt;td&gt;Aslak Knutsen&lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Compiled against&lt;/th&gt;
            &lt;td&gt;
              &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;ShrinkWrap Core – 1.0.1&lt;/li&gt;
                &lt;li&gt;ShrinkWrap Descriptors – 2.0.0-alpha-3&lt;/li&gt;
                &lt;li&gt;JUnit – 4.8.1&lt;/li&gt;
                &lt;li&gt;TestNG – 5.14.6&lt;/li&gt;
              &lt;/ul&gt;
      &lt;/td&gt;
          &lt;/tr&gt;
      &lt;/tbody&gt;&lt;/table&gt;&lt;h3&gt;
        Published artifacts
        &lt;small&gt;org.jboss.arquillian&lt;/small&gt;
      &lt;/h3&gt;
      &lt;ul&gt;
      &lt;li&gt;
          org.jboss.arquillian
          »
          arquillian-bom
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/arquillian-bom/1.0.4.Final/arquillian-bom-1.0.4.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.config
          »
          arquillian-config-api
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/config/arquillian-config-api/1.0.4.Final/arquillian-config-api-1.0.4.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/config/arquillian-config-api/1.0.4.Final/arquillian-config-api-1.0.4.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.config
          »
          arquillian-config-impl-base
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/config/arquillian-config-impl-base/1.0.4.Final/arquillian-config-impl-base-1.0.4.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/config/arquillian-config-impl-base/1.0.4.Final/arquillian-config-impl-base-1.0.4.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.config
          »
          arquillian-config-spi
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/config/arquillian-config-spi/1.0.4.Final/arquillian-config-spi-1.0.4.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/config/arquillian-config-spi/1.0.4.Final/arquillian-config-spi-1.0.4.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.container
          »
          arquillian-container-impl-base
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-impl-base/1.0.4.Final/arquillian-container-impl-base-1.0.4.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-impl-base/1.0.4.Final/arquillian-container-impl-base-1.0.4.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.container
          »
          arquillian-container-spi
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-spi/1.0.4.Final/arquillian-container-spi-1.0.4.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-spi/1.0.4.Final/arquillian-container-spi-1.0.4.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.container
          »
          arquillian-container-test-api
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-test-api/1.0.4.Final/arquillian-container-test-api-1.0.4.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-test-api/1.0.4.Final/arquillian-container-test-api-1.0.4.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.container
          »
          arquillian-container-test-impl-base
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-test-impl-base/1.0.4.Final/arquillian-container-test-impl-base-1.0.4.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-test-impl-base/1.0.4.Final/arquillian-container-test-impl-base-1.0.4.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.container
          »
          arquillian-container-test-spi
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-test-spi/1.0.4.Final/arquillian-container-test-spi-1.0.4.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-test-spi/1.0.4.Final/arquillian-container-test-spi-1.0.4.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.core
          »
          arquillian-core-api
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/core/arquillian-core-api/1.0.4.Final/arquillian-core-api-1.0.4.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/core/arquillian-core-api/1.0.4.Final/arquillian-core-api-1.0.4.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.core
          »
          arquillian-core-impl-base
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/core/arquillian-core-impl-base/1.0.4.Final/arquillian-core-impl-base-1.0.4.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/core/arquillian-core-impl-base/1.0.4.Final/arquillian-core-impl-base-1.0.4.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.core
          »
          arquillian-core-spi
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/core/arquillian-core-spi/1.0.4.Final/arquillian-core-spi-1.0.4.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/core/arquillian-core-spi/1.0.4.Final/arquillian-core-spi-1.0.4.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.junit
          »
          arquillian-junit-container
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/junit/arquillian-junit-container/1.0.4.Final/arquillian-junit-container-1.0.4.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/junit/arquillian-junit-container/1.0.4.Final/arquillian-junit-container-1.0.4.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.junit
          »
          arquillian-junit-core
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/junit/arquillian-junit-core/1.0.4.Final/arquillian-junit-core-1.0.4.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/junit/arquillian-junit-core/1.0.4.Final/arquillian-junit-core-1.0.4.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.junit
          »
          arquillian-junit-standalone
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/junit/arquillian-junit-standalone/1.0.4.Final/arquillian-junit-standalone-1.0.4.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/junit/arquillian-junit-standalone/1.0.4.Final/arquillian-junit-standalone-1.0.4.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.protocol
          »
          arquillian-protocol-jmx
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/protocol/arquillian-protocol-jmx/1.0.4.Final/arquillian-protocol-jmx-1.0.4.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/protocol/arquillian-protocol-jmx/1.0.4.Final/arquillian-protocol-jmx-1.0.4.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.protocol
          »
          arquillian-protocol-servlet
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/protocol/arquillian-protocol-servlet/1.0.4.Final/arquillian-protocol-servlet-1.0.4.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/protocol/arquillian-protocol-servlet/1.0.4.Final/arquillian-protocol-servlet-1.0.4.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.test
          »
          arquillian-test-api
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/test/arquillian-test-api/1.0.4.Final/arquillian-test-api-1.0.4.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/test/arquillian-test-api/1.0.4.Final/arquillian-test-api-1.0.4.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.test
          »
          arquillian-test-impl-base
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/test/arquillian-test-impl-base/1.0.4.Final/arquillian-test-impl-base-1.0.4.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/test/arquillian-test-impl-base/1.0.4.Final/arquillian-test-impl-base-1.0.4.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.test
          »
          arquillian-test-spi
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/test/arquillian-test-spi/1.0.4.Final/arquillian-test-spi-1.0.4.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/test/arquillian-test-spi/1.0.4.Final/arquillian-test-spi-1.0.4.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.testenricher
          »
          arquillian-testenricher-cdi
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testenricher/arquillian-testenricher-cdi/1.0.4.Final/arquillian-testenricher-cdi-1.0.4.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testenricher/arquillian-testenricher-cdi/1.0.4.Final/arquillian-testenricher-cdi-1.0.4.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.testenricher
          »
          arquillian-testenricher-ejb
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testenricher/arquillian-testenricher-ejb/1.0.4.Final/arquillian-testenricher-ejb-1.0.4.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testenricher/arquillian-testenricher-ejb/1.0.4.Final/arquillian-testenricher-ejb-1.0.4.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.testenricher
          »
          arquillian-testenricher-initialcontext
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testenricher/arquillian-testenricher-initialcontext/1.0.4.Final/arquillian-testenricher-initialcontext-1.0.4.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testenricher/arquillian-testenricher-initialcontext/1.0.4.Final/arquillian-testenricher-initialcontext-1.0.4.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.testenricher
          »
          arquillian-testenricher-resource
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testenricher/arquillian-testenricher-resource/1.0.4.Final/arquillian-testenricher-resource-1.0.4.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testenricher/arquillian-testenricher-resource/1.0.4.Final/arquillian-testenricher-resource-1.0.4.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.testng
          »
          arquillian-testng-container
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testng/arquillian-testng-container/1.0.4.Final/arquillian-testng-container-1.0.4.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testng/arquillian-testng-container/1.0.4.Final/arquillian-testng-container-1.0.4.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.testng
          »
          arquillian-testng-core
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testng/arquillian-testng-core/1.0.4.Final/arquillian-testng-core-1.0.4.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testng/arquillian-testng-core/1.0.4.Final/arquillian-testng-core-1.0.4.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.testng
          »
          arquillian-testng-standalone
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testng/arquillian-testng-standalone/1.0.4.Final/arquillian-testng-standalone-1.0.4.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testng/arquillian-testng-standalone/1.0.4.Final/arquillian-testng-standalone-1.0.4.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
      &lt;/ul&gt;&lt;h3&gt;
        Release notes and resolved issues
        &lt;small&gt;15&lt;/small&gt;
      &lt;/h3&gt;
      &lt;p&gt;&lt;/p&gt;
      &lt;dl&gt;
      &lt;dt&gt;Bug&lt;/dt&gt;
        &lt;dd&gt;
          &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-700&quot;&gt;ARQ-700&lt;/a&gt; -         Properties in arquillian.xml should handle new lines (by trimming them)&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-863&quot;&gt;ARQ-863&lt;/a&gt; -         Poor error message when WebArchive deployed with &quot;.jar&quot; name&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1071&quot;&gt;ARQ-1071&lt;/a&gt; -         NullPointerException when timeout is set in @Test when using JUnit&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1154&quot;&gt;ARQ-1154&lt;/a&gt; -         parameter &quot;servletName&quot; not used&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1287&quot;&gt;ARQ-1287&lt;/a&gt; -         arquillian-testng-standalone does not declare dependency on core impl in compile scope.&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1345&quot;&gt;ARQ-1345&lt;/a&gt; -         maxTestClassesBeforeRestart causes more restarts than it should&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1356&quot;&gt;ARQ-1356&lt;/a&gt; -         TestResult isn't updated correctly when TestNG is used&lt;/li&gt;
          &lt;/ul&gt;
      &lt;/dd&gt;
      &lt;/dl&gt;&lt;dl&gt;
      &lt;dt&gt;Enhancement&lt;/dt&gt;
        &lt;dd&gt;
          &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-941&quot;&gt;ARQ-941&lt;/a&gt; -         Make Exception.class default for value attribute on @ShouldThrowException&lt;/li&gt;
          &lt;/ul&gt;
      &lt;/dd&gt;
      &lt;/dl&gt;&lt;dl&gt;
      &lt;dt&gt;Feature Request&lt;/dt&gt;
        &lt;dd&gt;
          &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-891&quot;&gt;ARQ-891&lt;/a&gt; -         Deployment Manipulators should rely on the Archive name to determine type and not the current ShrinkWrap view&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1249&quot;&gt;ARQ-1249&lt;/a&gt; -         Deployment to GF fails if .war extension is missing&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1274&quot;&gt;ARQ-1274&lt;/a&gt; -         @EJB#lookup() support in EJBInjectionEnricher&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1283&quot;&gt;ARQ-1283&lt;/a&gt; -         Open up EJBInjectionEnricher to easier support custom JNDI names&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1284&quot;&gt;ARQ-1284&lt;/a&gt; -         Open up ServletMethodExecutor for easier extension&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1392&quot;&gt;ARQ-1392&lt;/a&gt; -         Test pinging / pull configuration&lt;/li&gt;
          &lt;/ul&gt;
      &lt;/dd&gt;
      &lt;/dl&gt;&lt;p&gt;
        Thanks to the following list of contributors:
        &lt;a href=&quot;https://community.jboss.org/people/aslak&quot;&gt;Aslak Knutsen&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/tommysdk&quot;&gt;Tommy Tynja&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/dan.j.allen&quot;&gt;Dan Allen&lt;/a&gt;, &lt;a href=&quot;https://github.com/papousek&quot;&gt;Jan Papoušek&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/mkouba&quot;&gt;Martin Kouba&lt;/a&gt;, &lt;a href=&quot;https://github.com/matejonnet&quot;&gt;Matej Lazar&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/gastaldi&quot;&gt;George Gastaldi&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/mmatloka&quot;&gt;Michal Matloka&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/bmajsak&quot;&gt;Bartosz Majsak&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/mvanco&quot;&gt;Michal Vanco&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/sewatech&quot;&gt;Alexis Hassler&lt;/a&gt;
      &lt;/p&gt;
    </content>
  </entry>
  <entry>
    <id>http://arquillian.org/blog/2013/05/27/arquillian-container-weld-1-0-0-CR7/</id>
    <title>Arquillian Container Weld 1.0.0.CR7 Released</title>
    <updated>2013-05-28T00:00:00+00:00</updated>
    <link href="http://arquillian.org/blog/2013/05/27/arquillian-container-weld-1-0-0-CR7/" rel="alternate" type="text/html" />
    <category scheme="http://arquillian.org/blog/tags" term="release" />
    <category scheme="http://arquillian.org/blog/tags" term="container-adapter" />
    <category scheme="http://arquillian.org/blog/tags" term="weld" />
    <category scheme="http://arquillian.org/blog" term="arquillian" />
    <summary>
      The Arquillian team is proud to announce the 1.0.0.CR7 release of the Arquillian Container Weld component!
      
      What is Arquillian?
      Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop a comprehensive suite of tests from the convenience of your IDE and run them in any IDE, build tool or continuous integration environment.
      Release details
      
        
          
           ......
    </summary>
    <content type="html">
      &lt;p&gt;The Arquillian team is proud to announce the &lt;em&gt;1.0.0.CR7&lt;/em&gt; release of the &lt;em&gt;Arquillian Container Weld&lt;/em&gt; component!&lt;/p&gt;
      
      &lt;h3&gt;What is Arquillian?&lt;/h3&gt;
      &lt;p&gt;Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop a comprehensive suite of tests from the convenience of your IDE and run them in any IDE, build tool or continuous integration environment.&lt;/p&gt;
      &lt;h3&gt;Release details&lt;/h3&gt;
      &lt;table class=&quot;table table-bordered table-striped&quot;&gt;&lt;tbody&gt;
      &lt;tr&gt;
      &lt;th&gt;Component&lt;/th&gt;
            &lt;td&gt;Arquillian Container Weld&lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Modules&lt;/th&gt;
            &lt;td&gt;
              &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;
                  &lt;a href=&quot;http://arquillian.org/modules/arquillian-weld-ee-embedded-1.1-container-adapter/&quot;&gt;Arquillian Weld EE Embedded 1.1.x Container Adapter&lt;/a&gt;
                &lt;/li&gt;
                &lt;li&gt;
                  &lt;a href=&quot;http://arquillian.org/modules/arquillian-weld-se-embedded-1-container-adapter/&quot;&gt;Arquillian Weld SE Embedded 1.x Container Adapter&lt;/a&gt;
                &lt;/li&gt;
                &lt;li&gt;
                  &lt;a href=&quot;http://arquillian.org/modules/arquillian-weld-se-embedded-1.1-container-adapter/&quot;&gt;Arquillian Weld SE Embedded 1.1.x Container Adapter&lt;/a&gt;
                &lt;/li&gt;
              &lt;/ul&gt;
      &lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Version&lt;/th&gt;
            &lt;td&gt;
              1.0.0.CR7
              &lt;span class=&quot;label tag&quot;&gt;
                &lt;a href=&quot;https://api.github.com/repos/arquillian/arquillian-container-weld/commits/e462d2fbf4a65c87dcabd529c3d151a1ace3c986&quot;&gt;view tag&lt;/a&gt;
              &lt;/span&gt;
            &lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Release date&lt;/th&gt;
            &lt;td&gt;2013-05-27&lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Released by&lt;/th&gt;
            &lt;td&gt;Aslak Knutsen&lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Compiled against&lt;/th&gt;
            &lt;td&gt;
              &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;Arquillian Core – 1.0.2.Final&lt;/li&gt;
              &lt;/ul&gt;
      &lt;/td&gt;
          &lt;/tr&gt;
      &lt;/tbody&gt;&lt;/table&gt;&lt;h3&gt;
        Published artifacts
        &lt;small&gt;org.jboss.arquillian.container&lt;/small&gt;
      &lt;/h3&gt;
      &lt;ul&gt;
      &lt;li&gt;
          org.jboss.arquillian.container
          »
          arquillian-weld-ee-embedded-1.1
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-weld-ee-embedded-1.1/1.0.0.CR7/arquillian-weld-ee-embedded-1.1-1.0.0.CR7.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-weld-ee-embedded-1.1/1.0.0.CR7/arquillian-weld-ee-embedded-1.1-1.0.0.CR7.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.container
          »
          arquillian-weld-se-embedded-1
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-weld-se-embedded-1/1.0.0.CR7/arquillian-weld-se-embedded-1-1.0.0.CR7.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-weld-se-embedded-1/1.0.0.CR7/arquillian-weld-se-embedded-1-1.0.0.CR7.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.container
          »
          arquillian-weld-se-embedded-1.1
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-weld-se-embedded-1.1/1.0.0.CR7/arquillian-weld-se-embedded-1.1-1.0.0.CR7.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-weld-se-embedded-1.1/1.0.0.CR7/arquillian-weld-se-embedded-1.1-1.0.0.CR7.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
      &lt;/ul&gt;&lt;h3&gt;
        Release notes and resolved issues
        &lt;small&gt;1&lt;/small&gt;
      &lt;/h3&gt;
      &lt;p&gt;Compiletime Weld 2.x&lt;/p&gt;
      &lt;p&gt;
        Thanks to the following list of contributors:
        &lt;a href=&quot;https://community.jboss.org/people/aslak&quot;&gt;Aslak Knutsen&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/jharting&quot;&gt;Jozef Hartinger&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/antoinesabot-durand&quot;&gt;Antoine Sabot-durand&lt;/a&gt;
      &lt;/p&gt;
    </content>
  </entry>
  <entry>
    <id>http://arquillian.org/blog/2013/05/16/arquillian-container-osgi-2-0-0-CR3/</id>
    <title>Arquillian OSGi 2.0.0.CR3 Released</title>
    <updated>2013-05-17T00:00:00+00:00</updated>
    <link href="http://arquillian.org/blog/2013/05/16/arquillian-container-osgi-2-0-0-CR3/" rel="alternate" type="text/html" />
    <category scheme="http://arquillian.org/blog/tags" term="release" />
    <category scheme="http://arquillian.org/blog/tags" term="container-adapter" />
    <category scheme="http://arquillian.org/blog/tags" term="osgi" />
    <category scheme="http://arquillian.org/blog" term="arquillian" />
    <summary>
      The Arquillian team is proud to announce the 2.0.0.CR3 release of the Arquillian OSGi component!
      
      What is Arquillian?
      Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop a comprehensive suite of tests from the convenience of your IDE and run them in any IDE, build tool or continuous integration environment.
      Release details
      
        
          
            Component
      ......
    </summary>
    <content type="html">
      &lt;p&gt;The Arquillian team is proud to announce the &lt;em&gt;2.0.0.CR3&lt;/em&gt; release of the &lt;em&gt;Arquillian OSGi&lt;/em&gt; component!&lt;/p&gt;
      
      &lt;h3&gt;What is Arquillian?&lt;/h3&gt;
      &lt;p&gt;Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop a comprehensive suite of tests from the convenience of your IDE and run them in any IDE, build tool or continuous integration environment.&lt;/p&gt;
      &lt;h3&gt;Release details&lt;/h3&gt;
      &lt;table class=&quot;table table-bordered table-striped&quot;&gt;&lt;tbody&gt;
      &lt;tr&gt;
      &lt;th&gt;Component&lt;/th&gt;
            &lt;td&gt;
              &lt;a href=&quot;http://arquillian.org/modules/arquillian-osgi-embedded-container-adapter/&quot;&gt;Arquillian OSGi&lt;/a&gt;
            &lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Version&lt;/th&gt;
            &lt;td&gt;
              2.0.0.CR3
              &lt;span class=&quot;label tag&quot;&gt;
                &lt;a href=&quot;https://api.github.com/repos/arquillian/arquillian-container-osgi/commits/098fd32b7dbb9097e6c779bac8b0c9f2f92a6fc5&quot;&gt;view tag&lt;/a&gt;
              &lt;/span&gt;
            &lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Release date&lt;/th&gt;
            &lt;td&gt;2013-05-16&lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Released by&lt;/th&gt;
            &lt;td&gt;Thomas Diesler&lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Compiled against&lt;/th&gt;
            &lt;td&gt;
              &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;Arquillian Core – 1.0.2.Final&lt;/li&gt;
                &lt;li&gt;ShrinkWrap Core – 1.0.0&lt;/li&gt;
              &lt;/ul&gt;
      &lt;/td&gt;
          &lt;/tr&gt;
      &lt;/tbody&gt;&lt;/table&gt;&lt;h3&gt;
        Published artifacts
        &lt;small&gt;org.jboss.arquillian.container&lt;/small&gt;
      &lt;/h3&gt;
      &lt;ul&gt;
      &lt;li&gt;
          org.jboss.arquillian.container
          »
          arquillian-container-osgi
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-osgi/2.0.0.CR3/arquillian-container-osgi-2.0.0.CR3.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-osgi/2.0.0.CR3/arquillian-container-osgi-2.0.0.CR3.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.container
          »
          arquillian-container-osgi-embedded
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-osgi-embedded/2.0.0.CR3/arquillian-container-osgi-embedded-2.0.0.CR3.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-osgi-embedded/2.0.0.CR3/arquillian-container-osgi-embedded-2.0.0.CR3.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.protocol
          »
          arquillian-protocol-osgi
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/protocol/arquillian-protocol-osgi/2.0.0.CR3/arquillian-protocol-osgi-2.0.0.CR3.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/protocol/arquillian-protocol-osgi/2.0.0.CR3/arquillian-protocol-osgi-2.0.0.CR3.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.testenricher
          »
          arquillian-testenricher-osgi
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testenricher/arquillian-testenricher-osgi/2.0.0.CR3/arquillian-testenricher-osgi-2.0.0.CR3.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testenricher/arquillian-testenricher-osgi/2.0.0.CR3/arquillian-testenricher-osgi-2.0.0.CR3.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
      &lt;/ul&gt;&lt;p&gt;
        Thanks to the following list of contributors:
        &lt;a href=&quot;https://community.jboss.org/people/thomas.diesler&quot;&gt;Thomas Diesler&lt;/a&gt;
      &lt;/p&gt;
    </content>
  </entry>
  <entry>
    <id>http://arquillian.org/blog/2013/05/03/arquillian-extension-drone-1-2-0-Alpha2/</id>
    <title>Arquillian Drone Extension 1.2.0.Alpha2 Released</title>
    <updated>2013-05-04T00:00:00+00:00</updated>
    <link href="http://arquillian.org/blog/2013/05/03/arquillian-extension-drone-1-2-0-Alpha2/" rel="alternate" type="text/html" />
    <category scheme="http://arquillian.org/blog/tags" term="release" />
    <category scheme="http://arquillian.org/blog/tags" term="extension" />
    <category scheme="http://arquillian.org/blog/tags" term="drone" />
    <category scheme="http://arquillian.org/blog" term="arquillian" />
    <summary>
      The Arquillian team is proud to announce the 1.2.0.Alpha2 release of the Arquillian Drone Extension component!
       We&#8217;ve please to announce Drone 1.2.0.Alpha2. This release brings you PhantomJS support and an easier model for future extensions.
      
      Significant changes since 1.2.0.Alpha1
      
      	 Support for PhantomJS
      	PhantomJS allow you to run headless tests on a real browser. And Drone supports it out of the box.
      arquillian.xml
      &lt;extension qualifier=&#8220;webdriver&#8221;&gt;&#x000A;    &lt;property name=&#8220;browserCapabilities&#8221;&gt;phantomjs&lt;/property&gt;&#x000A;    &lt;property name=&#8220;phantomjs.binary.path&#8221;&gt;/path/to/phantomjs.binary&lt;/property&gt;&#x000A;&lt;/extension&gt;
      
      
      	 Automatic Augmentation
      	RemoteWebDriver instances are now automatically augmented.
      
      
      	 Discarding cookies for reusable browsers
      	You can now use reusable browser while ensuring cooking from previous test runs do not affect current test run.......
    </summary>
    <content type="html">
      &lt;p&gt;The Arquillian team is proud to announce the &lt;em&gt;1.2.0.Alpha2&lt;/em&gt; release of the &lt;em&gt;Arquillian Drone Extension&lt;/em&gt; component!&lt;/p&gt;
      &lt;p&gt;&lt;img src=&quot;http://arquillian.org/images/blog/drone_400.png&quot; class=&quot;graphic pull-right&quot; alt=&quot;&quot;&gt; We’ve please to announce Drone 1.2.0.Alpha2. This release brings you PhantomJS support and an easier model for future extensions.&lt;/p&gt;
      &lt;p&gt;&lt;br&gt;&lt;/p&gt;
      &lt;h3 class=&quot;highlights&quot;&gt;Significant changes since 1.2.0.Alpha1&lt;/h3&gt;
      &lt;dl&gt;
      &lt;dt&gt;
      &lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; Support for PhantomJS&lt;/dt&gt;
      	&lt;dd&gt;
      &lt;p&gt;PhantomJS allow you to run headless tests on a real browser. And Drone supports it out of the box.&lt;/p&gt;
      &lt;div class=&quot;filename&quot;&gt;arquillian.xml&lt;/div&gt;
      &lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;&amp;lt;extension qualifier=“webdriver”&amp;gt;&lt;br&gt;
          &amp;lt;property name=“browserCapabilities”&amp;gt;phantomjs&amp;lt;/property&amp;gt;&lt;br&gt;
          &amp;lt;property name=“phantomjs.binary.path”&amp;gt;/path/to/phantomjs.binary&amp;lt;/property&amp;gt;&lt;br&gt;
      &amp;lt;/extension&amp;gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;/dd&gt;
      &lt;/dl&gt;&lt;dl&gt;
      &lt;dt&gt;
      &lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; Automatic Augmentation&lt;/dt&gt;
      	&lt;dd&gt;&lt;p&gt;RemoteWebDriver instances are now automatically augmented.&lt;/p&gt;&lt;/dd&gt;
      &lt;/dl&gt;&lt;dl&gt;
      &lt;dt&gt;
      &lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; Discarding cookies for reusable browsers&lt;/dt&gt;
      	&lt;dd&gt;
      &lt;p&gt;You can now use reusable browser while ensuring cooking from previous test runs do not affect current test run. The default behavior is to delete the cookies. If you want to preserve previous behavior, you can use the &lt;code&gt;reuseCookies&lt;/code&gt; configuration option.&lt;/p&gt;
      &lt;div class=&quot;filename&quot;&gt;arquillian.xml&lt;/div&gt;
      &lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;&amp;lt;extension qualifier=“webdriver”&amp;gt;&lt;br&gt;
          &amp;lt;property name=“reuseCookies”&amp;gt;true&amp;lt;/property&amp;gt;&lt;br&gt;
      &amp;lt;/extension&amp;gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;/dd&gt;
      &lt;/dl&gt;&lt;p&gt;This release breaks implementation compatibility with previous Drone releases. You should not be affected by this unless you use Drone combined with other projects that depend on more then just SPI, such as Graphene 2. We are releasing new compatible versions of these projects; such as Graphene 2.0.0.Alpha4.&lt;br&gt;
      These changes were done in order to make Drone more reusable by third party projects to avoid similar problems in future.&lt;/p&gt;
      &lt;p&gt;I’d like to thank everybody involved in this release. &lt;em&gt;You guys make testing a breeze!&lt;/em&gt;&lt;/p&gt;
      &lt;p&gt;We hope that you’ll enjoy the improvements and look forward to hear your feedback in the &lt;a href=&quot;http://community.jboss.org/en/arquillian&quot;&gt;community forums&lt;/a&gt;.&lt;/p&gt;
      &lt;h3&gt;What is Arquillian?&lt;/h3&gt;
      &lt;p&gt;Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop a comprehensive suite of tests from the convenience of your IDE and run them in any IDE, build tool or continuous integration environment.&lt;/p&gt;
      &lt;h3&gt;Release details&lt;/h3&gt;
      &lt;table class=&quot;table table-bordered table-striped&quot;&gt;&lt;tbody&gt;
      &lt;tr&gt;
      &lt;th&gt;Component&lt;/th&gt;
            &lt;td&gt;
              &lt;a href=&quot;http://arquillian.org/modules/drone-extension/&quot;&gt;Arquillian Drone Extension&lt;/a&gt;
            &lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Version&lt;/th&gt;
            &lt;td&gt;
              1.2.0.Alpha2
              &lt;span class=&quot;label tag&quot;&gt;
                &lt;a href=&quot;https://api.github.com/repos/arquillian/arquillian-extension-drone/commits/94be39a86e704416ed1935b927be6973ebc0606a&quot;&gt;view tag&lt;/a&gt;
              &lt;/span&gt;
            &lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Release date&lt;/th&gt;
            &lt;td&gt;2013-04-12&lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Released by&lt;/th&gt;
            &lt;td&gt;Lukas Fryc&lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Compiled against&lt;/th&gt;
            &lt;td&gt;
              &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;Arquillian Core – 1.0.3.Final&lt;/li&gt;
              &lt;/ul&gt;
      &lt;/td&gt;
          &lt;/tr&gt;
      &lt;/tbody&gt;&lt;/table&gt;&lt;h3&gt;
        Published artifacts
        &lt;small&gt;org.jboss.arquillian.extension&lt;/small&gt;
      &lt;/h3&gt;
      &lt;ul&gt;
      &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-drone-api
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-api/1.2.0.Alpha2/arquillian-drone-api-1.2.0.Alpha2.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-api/1.2.0.Alpha2/arquillian-drone-api-1.2.0.Alpha2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-drone-bom
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-bom/1.2.0.Alpha2/arquillian-drone-bom-1.2.0.Alpha2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-drone-configuration
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-configuration/1.2.0.Alpha2/arquillian-drone-configuration-1.2.0.Alpha2.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-configuration/1.2.0.Alpha2/arquillian-drone-configuration-1.2.0.Alpha2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-drone-impl
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-impl/1.2.0.Alpha2/arquillian-drone-impl-1.2.0.Alpha2.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-impl/1.2.0.Alpha2/arquillian-drone-impl-1.2.0.Alpha2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-drone-selenium
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-selenium/1.2.0.Alpha2/arquillian-drone-selenium-1.2.0.Alpha2.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-selenium/1.2.0.Alpha2/arquillian-drone-selenium-1.2.0.Alpha2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-drone-selenium-depchain
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-selenium-depchain/1.2.0.Alpha2/arquillian-drone-selenium-depchain-1.2.0.Alpha2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-drone-selenium-server
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-selenium-server/1.2.0.Alpha2/arquillian-drone-selenium-server-1.2.0.Alpha2.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-selenium-server/1.2.0.Alpha2/arquillian-drone-selenium-server-1.2.0.Alpha2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-drone-spi
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-spi/1.2.0.Alpha2/arquillian-drone-spi-1.2.0.Alpha2.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-spi/1.2.0.Alpha2/arquillian-drone-spi-1.2.0.Alpha2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-drone-webdriver
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-webdriver/1.2.0.Alpha2/arquillian-drone-webdriver-1.2.0.Alpha2.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-webdriver/1.2.0.Alpha2/arquillian-drone-webdriver-1.2.0.Alpha2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-drone-webdriver-depchain
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-webdriver-depchain/1.2.0.Alpha2/arquillian-drone-webdriver-depchain-1.2.0.Alpha2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
      &lt;/ul&gt;&lt;h3&gt;
        Release notes and resolved issues
        &lt;small&gt;11&lt;/small&gt;
      &lt;/h3&gt;
      &lt;p&gt;PhantomJS; Automatic Augmentation; Discarding cookies for reusable browsers&lt;/p&gt;
      &lt;dl&gt;
      &lt;dt&gt;Component  Upgrade&lt;/dt&gt;
        &lt;dd&gt;
          &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1308&quot;&gt;ARQ-1308&lt;/a&gt; -         Update Selenium to 2.30.0&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1310&quot;&gt;ARQ-1310&lt;/a&gt; -         Update Arquillian Core in Drone to 1.0.3.Final&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1349&quot;&gt;ARQ-1349&lt;/a&gt; -         Drone: upgrade Selenium to 2.31.0 and phantomjsdriver to 1.0.3&lt;/li&gt;
          &lt;/ul&gt;
      &lt;/dd&gt;
      &lt;/dl&gt;&lt;dl&gt;
      &lt;dt&gt;Enhancement&lt;/dt&gt;
        &lt;dd&gt;
          &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1314&quot;&gt;ARQ-1314&lt;/a&gt; -         Better exception message when creating a new instance fails&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1350&quot;&gt;ARQ-1350&lt;/a&gt; -         Drone: allow reuse of session even though all capabilities are not serializable&lt;/li&gt;
          &lt;/ul&gt;
      &lt;/dd&gt;
      &lt;/dl&gt;&lt;dl&gt;
      &lt;dt&gt;Feature Request&lt;/dt&gt;
        &lt;dd&gt;
          &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1177&quot;&gt;ARQ-1177&lt;/a&gt; -         Allow browser capabilities to be extensible&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1206&quot;&gt;ARQ-1206&lt;/a&gt; -         Add configuration option to delete all cookies on reusable browser instance&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1307&quot;&gt;ARQ-1307&lt;/a&gt; -         Support for GhostDriver / PhantomJS&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1351&quot;&gt;ARQ-1351&lt;/a&gt; -         Drone: augment RemoteWebDriver instances automatically&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1363&quot;&gt;ARQ-1363&lt;/a&gt; -         Drone SPI - provide service type for enhancing a instances instantiated by Drone&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1364&quot;&gt;ARQ-1364&lt;/a&gt; -         Drone SPI - add DroneReady event fired when either class or method-level instance is created&lt;/li&gt;
          &lt;/ul&gt;
      &lt;/dd&gt;
      &lt;/dl&gt;&lt;p&gt;
        Thanks to the following list of contributors:
        &lt;a href=&quot;https://community.jboss.org/people/lfryc&quot;&gt;Lukas Fryc&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/kpiwko&quot;&gt;Karel Piwko&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/trepel&quot;&gt;Tomas Repel&lt;/a&gt;, &lt;a href=&quot;https://github.com/yurloc&quot;&gt;Jiří Locker&lt;/a&gt;, &lt;a href=&quot;https://github.com/papousek&quot;&gt;Jan Papoušek&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/aslak&quot;&gt;Aslak Knutsen&lt;/a&gt;
      &lt;/p&gt;
    </content>
  </entry>
  <entry>
    <id>http://arquillian.org/blog/2013/05/02/arquillian-container-glassfish-1-0-0-CR4/</id>
    <title>Arquillian Container GlassFish 1.0.0.CR4 Released</title>
    <updated>2013-05-03T00:00:00+00:00</updated>
    <link href="http://arquillian.org/blog/2013/05/02/arquillian-container-glassfish-1-0-0-CR4/" rel="alternate" type="text/html" />
    <category scheme="http://arquillian.org/blog/tags" term="release" />
    <category scheme="http://arquillian.org/blog/tags" term="container-adapter" />
    <category scheme="http://arquillian.org/blog/tags" term="glassfish" />
    <category scheme="http://arquillian.org/blog" term="arquillian" />
    <summary>
      The Arquillian team is proud to announce the 1.0.0.CR4 release of the Arquillian Container GlassFish component!
      
      What is Arquillian?
      Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop a comprehensive suite of tests from the convenience of your IDE and run them in any IDE, build tool or continuous integration environment.
      Release details
      
        
          
           ......
    </summary>
    <content type="html">
      &lt;p&gt;The Arquillian team is proud to announce the &lt;em&gt;1.0.0.CR4&lt;/em&gt; release of the &lt;em&gt;Arquillian Container GlassFish&lt;/em&gt; component!&lt;/p&gt;
      
      &lt;h3&gt;What is Arquillian?&lt;/h3&gt;
      &lt;p&gt;Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop a comprehensive suite of tests from the convenience of your IDE and run them in any IDE, build tool or continuous integration environment.&lt;/p&gt;
      &lt;h3&gt;Release details&lt;/h3&gt;
      &lt;table class=&quot;table table-bordered table-striped&quot;&gt;&lt;tbody&gt;
      &lt;tr&gt;
      &lt;th&gt;Component&lt;/th&gt;
            &lt;td&gt;Arquillian Container GlassFish&lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Modules&lt;/th&gt;
            &lt;td&gt;
              &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;
                  &lt;a href=&quot;http://arquillian.org/modules/arquillian-glassfish-managed-3.1-container-adapter/&quot;&gt;Arquillian GlassFish Managed 3.1 Container Adapter&lt;/a&gt;
                &lt;/li&gt;
                &lt;li&gt;
                  &lt;a href=&quot;http://arquillian.org/modules/arquillian-glassfish-remote-3.1-container-adapter/&quot;&gt;Arquillian GlassFish Remote 3.1 Container Adapter&lt;/a&gt;
                &lt;/li&gt;
                &lt;li&gt;
                  &lt;a href=&quot;http://arquillian.org/modules/arquillian-glassfish-embedded-3.1-container-adapter/&quot;&gt;Arquillian GlassFish Embedded 3.1 Container Adapter&lt;/a&gt;
                &lt;/li&gt;
              &lt;/ul&gt;
      &lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Version&lt;/th&gt;
            &lt;td&gt;
              1.0.0.CR4
              &lt;span class=&quot;label tag&quot;&gt;
                &lt;a href=&quot;https://api.github.com/repos/arquillian/arquillian-container-glassfish/commits/b4ea80787cd071650e7737fe8c69f97744c83633&quot;&gt;view tag&lt;/a&gt;
              &lt;/span&gt;
            &lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Release date&lt;/th&gt;
            &lt;td&gt;2013-04-29&lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Released by&lt;/th&gt;
            &lt;td&gt;Aslak Knutsen&lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Compiled against&lt;/th&gt;
            &lt;td&gt;
              &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;Arquillian Core – 1.0.0.Final&lt;/li&gt;
              &lt;/ul&gt;
      &lt;/td&gt;
          &lt;/tr&gt;
      &lt;/tbody&gt;&lt;/table&gt;&lt;h3&gt;
        Published artifacts
        &lt;small&gt;org.jboss.arquillian.container&lt;/small&gt;
      &lt;/h3&gt;
      &lt;ul&gt;
      &lt;li&gt;
          org.jboss.arquillian.container
          »
          arquillian-glassfish-common
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-glassfish-common/1.0.0.CR4/arquillian-glassfish-common-1.0.0.CR4.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-glassfish-common/1.0.0.CR4/arquillian-glassfish-common-1.0.0.CR4.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.container
          »
          arquillian-glassfish-embedded-3.1
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-glassfish-embedded-3.1/1.0.0.CR4/arquillian-glassfish-embedded-3.1-1.0.0.CR4.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-glassfish-embedded-3.1/1.0.0.CR4/arquillian-glassfish-embedded-3.1-1.0.0.CR4.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.container
          »
          arquillian-glassfish-managed-3.1
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-glassfish-managed-3.1/1.0.0.CR4/arquillian-glassfish-managed-3.1-1.0.0.CR4.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-glassfish-managed-3.1/1.0.0.CR4/arquillian-glassfish-managed-3.1-1.0.0.CR4.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.container
          »
          arquillian-glassfish-remote-3.1
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-glassfish-remote-3.1/1.0.0.CR4/arquillian-glassfish-remote-3.1-1.0.0.CR4.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-glassfish-remote-3.1/1.0.0.CR4/arquillian-glassfish-remote-3.1-1.0.0.CR4.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
      &lt;/ul&gt;&lt;h3&gt;
        Release notes and resolved issues
        &lt;small&gt;8&lt;/small&gt;
      &lt;/h3&gt;
      &lt;p&gt;GlassFish 4&lt;/p&gt;
      &lt;dl&gt;
      &lt;dt&gt;Bug&lt;/dt&gt;
        &lt;dd&gt;
          &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-837&quot;&gt;ARQ-837&lt;/a&gt; -         Managed GlassFish container does not shutdown correctly in a Maven build&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-856&quot;&gt;ARQ-856&lt;/a&gt; -         Embedded GlassFish adapter may use an incorrect HTTP port when a custom domain configuration XML file is used&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1232&quot;&gt;ARQ-1232&lt;/a&gt; -         Random &quot;contextRoot must not be null&quot; failures thrown by Arquillian on deployment to GlassFish&lt;/li&gt;
          &lt;/ul&gt;
      &lt;/dd&gt;
      &lt;/dl&gt;&lt;dl&gt;
      &lt;dt&gt;Enhancement&lt;/dt&gt;
        &lt;dd&gt;
          &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-796&quot;&gt;ARQ-796&lt;/a&gt; -         Remove the GlassFishRestDeploymentAppender from the GlassFish container adapter&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-923&quot;&gt;ARQ-923&lt;/a&gt; -         Delete temporary instance root for Embedded GlassFish on exit&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1211&quot;&gt;ARQ-1211&lt;/a&gt; -         Revisit the allowConnectToRunningServer flag for managed containers&lt;/li&gt;
          &lt;/ul&gt;
      &lt;/dd&gt;
      &lt;/dl&gt;&lt;dl&gt;
      &lt;dt&gt;Feature Request&lt;/dt&gt;
        &lt;dd&gt;
          &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1293&quot;&gt;ARQ-1293&lt;/a&gt; -         Add Support for GlassFish 4.x series&lt;/li&gt;
          &lt;/ul&gt;
      &lt;/dd&gt;
      &lt;/dl&gt;&lt;p&gt;
        Thanks to the following list of contributors:
        &lt;a href=&quot;https://community.jboss.org/people/vineet.reynolds&quot;&gt;Vineet Reynolds&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/dan.j.allen&quot;&gt;Dan Allen&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/aslak&quot;&gt;Aslak Knutsen&lt;/a&gt;, JJ Snyder
      &lt;/p&gt;
    </content>
  </entry>
  <entry>
    <id>http://arquillian.org/blog/2013/04/24/arquillian-graphene-2-0-0-Alpha4/</id>
    <title>Graphene 2.0.0.Alpha4 Released</title>
    <updated>2013-04-25T00:00:00+00:00</updated>
    <link href="http://arquillian.org/blog/2013/04/24/arquillian-graphene-2-0-0-Alpha4/" rel="alternate" type="text/html" />
    <category scheme="http://arquillian.org/blog/tags" term="release" />
    <category scheme="http://arquillian.org/blog/tags" term="extension" />
    <category scheme="http://arquillian.org/blog/tags" term="graphene" />
    <category scheme="http://arquillian.org/blog" term="arquillian" />
    <summary>
      The Arquillian team is proud to announce the 2.0.0.Alpha4 release of the Graphene component!
      As we are on the way to a first Beta release, we identified a need for sharing some of the recent Graphene improvements:
      Highlighted Changes
      
      	 Guard Improvements and Fixes
      	Request Guards were polished, extended and hardened. (read more)
      
      
      	 Creating Page Fragments Programatically
      	Page Fragments can now be instantiated not only using dependency injection, but also programatically. (read more)
      
      
      	 PhantomJS Support
      	You can now fully leverage awesomness of headless testing with PhantomJS.
      
      
      	 Guarding Programatically Retrieved Elements
      	Elements retrieved programatically using WebElement#findElement(...) or WebElement#findElements(...) are now guarded against StaleElementReferenceException.
      
      
      	 Automatic Inference of Locators
      	You no......
    </summary>
    <content type="html">
      &lt;p&gt;The Arquillian team is proud to announce the &lt;em&gt;2.0.0.Alpha4&lt;/em&gt; release of the &lt;em&gt;Graphene&lt;/em&gt; component!&lt;/p&gt;
      &lt;p&gt;As we are on the way to a first Beta release, we identified a need for sharing some of the recent Graphene improvements:&lt;/p&gt;
      &lt;h3&gt;Highlighted Changes&lt;/h3&gt;
      &lt;dl&gt;
      &lt;dt&gt;
      &lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; Guard Improvements and Fixes&lt;/dt&gt;
      	&lt;dd&gt;&lt;p&gt;Request Guards were polished, extended and hardened. (&lt;a href=&quot;#guard-improvements-and-fixes&quot;&gt;read more&lt;/a&gt;)&lt;/p&gt;&lt;/dd&gt;
      &lt;/dl&gt;&lt;dl&gt;
      &lt;dt&gt;
      &lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; Creating Page Fragments Programatically&lt;/dt&gt;
      	&lt;dd&gt;&lt;p&gt;Page Fragments can now be instantiated not only using dependency injection, but also programatically. (&lt;a href=&quot;#creating-page-fragments-programatically&quot;&gt;read more&lt;/a&gt;)&lt;/p&gt;&lt;/dd&gt;
      &lt;/dl&gt;&lt;dl&gt;
      &lt;dt&gt;
      &lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; PhantomJS Support&lt;/dt&gt;
      	&lt;dd&gt;&lt;p&gt;You can now fully leverage awesomness of headless testing with PhantomJS.&lt;/p&gt;&lt;/dd&gt;
      &lt;/dl&gt;&lt;dl&gt;
      &lt;dt&gt;
      &lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; Guarding Programatically Retrieved Elements&lt;/dt&gt;
      	&lt;dd&gt;&lt;p&gt;Elements retrieved programatically using &lt;code&gt;WebElement#findElement(...)&lt;/code&gt; or &lt;code&gt;WebElement#findElements(...)&lt;/code&gt; are now guarded against &lt;code&gt;StaleElementReferenceException&lt;/code&gt;.&lt;/p&gt;&lt;/dd&gt;
      &lt;/dl&gt;&lt;dl&gt;
      &lt;dt&gt;
      &lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; Automatic Inference of Locators&lt;/dt&gt;
      	&lt;dd&gt;&lt;p&gt;You no longer need to define a locator in simple forms – you can leverage their automatic inference from a injection point name. (&lt;a href=&quot;#automatic-inference-of-locators&quot;&gt;read more&lt;/a&gt;)&lt;/p&gt;&lt;/dd&gt;
      &lt;/dl&gt;&lt;dl&gt;
      &lt;dt&gt;
      &lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; Dependency Injection of &lt;code&gt;SessionStorage&lt;/code&gt; and &lt;code&gt;LocalStorage&lt;/code&gt;
      &lt;/dt&gt;
      	&lt;dd&gt;&lt;p&gt;These resources are now exposed directly via &lt;code&gt;@ArquillianResource&lt;/code&gt;.&lt;/p&gt;&lt;/dd&gt;
      &lt;/dl&gt;&lt;dl&gt;
      &lt;dt&gt;
      &lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; Dependency Injection of Selenium Resource Parametrized by &lt;code&gt;WebElement&lt;/code&gt;
      &lt;/dt&gt;
      	&lt;dd&gt;&lt;p&gt;Selenium resources which takes &lt;code&gt;WebElement&lt;/code&gt; as an argument in a constructor (e.g. &lt;a href=&quot;http://selenium.googlecode.com/git/docs/api/java/org/openqa/selenium/support/ui/Select.html&quot;&gt;&lt;code&gt;Select&lt;/code&gt;&lt;/a&gt;) can be injected using &lt;code&gt;FindBy&lt;/code&gt;.&lt;/p&gt;&lt;/dd&gt;
      &lt;/dl&gt;&lt;dl&gt;
      &lt;dt&gt;
      &lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; Support for &lt;code&gt;FindBys&lt;/code&gt; and &lt;code&gt;FindBy(How, String)&lt;/code&gt;
      &lt;/dt&gt;
      	&lt;dd&gt; &lt;/dd&gt;
      &lt;/dl&gt;&lt;dl&gt;
      &lt;dt&gt;
      &lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; Improved Integration with Drone&lt;/dt&gt;
      	&lt;dd&gt;&lt;p&gt;Drone &lt;code&gt;1.2.0.Alpha2&lt;/code&gt;’s new &lt;a href=&quot;https://github.com/arquillian/arquillian-extension-drone/blob/master/drone-spi/src/main/java/org/jboss/arquillian/drone/spi/Enhancer.java&quot;&gt;&lt;code&gt;Enhancer&lt;/code&gt;&lt;/a&gt; API allow us to integrate with Drone seamlessly.&lt;/p&gt;&lt;/dd&gt;
      &lt;/dl&gt;&lt;h4&gt;Deprecations&lt;/h4&gt;
      &lt;dl&gt;
      &lt;dt&gt;
      &lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; Deprecation of Old Variant of Waiting Fluent API&lt;/dt&gt;
      	&lt;dd&gt;&lt;p&gt;&lt;code&gt;Graphene.element(...)&lt;/code&gt; and &lt;code&gt;Graphene.attribute(...)&lt;/code&gt; are now deprecated and they will be removed in an upcoming releases.&lt;/p&gt;&lt;/dd&gt;
      &lt;/dl&gt;&lt;dl&gt;
      &lt;dt&gt;
      &lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; Deprecated &lt;code&gt;guardXhr&lt;/code&gt; replaced by &lt;code&gt;guardAjax&lt;/code&gt;
      &lt;/dt&gt;
      	&lt;dd&gt;&lt;p&gt;Not all of us are familiar with abbreviation XHR (XMLHttpRequest). In order to make the API more clear for most of Graphene users, we have deprecated &lt;code&gt;guardXhr&lt;/code&gt; and replaced it with &lt;code&gt;guardAjax&lt;/code&gt;. &lt;code&gt;guardXhr&lt;/code&gt; will be removed in upcoming releases.&lt;/p&gt;&lt;/dd&gt;
      &lt;/dl&gt;&lt;h3 id=&quot;guard-improvements-and-fixes&quot;&gt;Guard Improvements and Fixes&lt;/h3&gt;
      &lt;dl&gt;
      &lt;dt&gt;
      &lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; &lt;code&gt;waitForHttp&lt;/code&gt;
      &lt;/dt&gt;
      	&lt;dd&gt;&lt;p&gt;When an Ajax request is followed by a relocation (HTTP request), &lt;code&gt;guardXhr&lt;/code&gt; or &lt;code&gt;guardHttp&lt;/code&gt; can’t deterministically wait for an end of a request – in these situations you can use &lt;code&gt;waitForHttp&lt;/code&gt; instead.&lt;/p&gt;&lt;/dd&gt;
      &lt;/dl&gt;&lt;dl&gt;
      &lt;dt&gt;
      &lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; Testing delayed requests&lt;/dt&gt;
      	&lt;dd&gt;&lt;p&gt;Guards now waits for a given time interval for a request to start and once the request is started, they wait the another interval for the request to finish.&lt;/p&gt;&lt;/dd&gt;
      &lt;/dl&gt;&lt;dl&gt;
      &lt;dt&gt;
      &lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; Bug Fixes&lt;/dt&gt;
      	&lt;dd&gt;&lt;p&gt;Guards had problems on Android with deterministic waiting for HTTP requests.&lt;/p&gt;&lt;/dd&gt;
      &lt;/dl&gt;&lt;h3 id=&quot;creating-page-fragments-programatically&quot;&gt;Creating Page Fragments Programatically&lt;/h3&gt;
      &lt;p&gt;Till this release, the only option to create a page fragment was injecting it:&lt;/p&gt;
      &lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;@FindBy(...)
      MyComponent component;&lt;/code&gt;&lt;/pre&gt;
      &lt;p&gt;With Alpha4 we have added the possibility to create a page fragment programatically:&lt;/p&gt;
      &lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;public &amp;lt;T&amp;gt; T getContent(Class&amp;lt;T&amp;gt; clazz) {
          return PageFragmentEnricher.createPageFragment(clazz, root);
      }&lt;/code&gt;&lt;/pre&gt;
      &lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;@Test
      public void testTabPanelSwitching() {
          Panel tab3 = tabPanel.switchTo(2);
          ContentOfTab content = tab3.getContent(ContentOfTab.class);
          assertEquals(&quot;The tab panel was not switched to third tab correctly!&quot;, &quot;Content of the tab 3&quot;, content.text.getText());&lt;/code&gt;
          
      &lt;code class=&quot;prettify&quot;&gt;    Panel tab1 = tabPanel.switchTo(0);
          content = tab1.getContent(ContentOfTab.class);
          assertEquals(&quot;The tab panel was not switched to first tab correctly!&quot;, &quot;Content of the tab 1&quot;, content.text.getText());
      }&lt;/code&gt;&lt;/pre&gt;
      &lt;p&gt;You can find reference usage in this &lt;a href=&quot;https://github.com/arquillian/arquillian-graphene/blob/7637bfd0d92fa78b75caa54bbf41bb393868d62a/graphene-webdriver/graphene-webdriver-ftest/src/test/java/org/jboss/arquillian/graphene/enricher/TestEnrichingContainerElement.java#L61&quot;&gt;functional test&lt;/a&gt; together with an implementation of &lt;a href=&quot;https://github.com/arquillian/arquillian-graphene/blob/7637bfd0d92fa78b75caa54bbf41bb393868d62a/graphene-webdriver/graphene-webdriver-ftest/src/test/java/org/jboss/arquillian/graphene/enricher/page/fragment/Panel.java#L39&quot;&gt;&lt;code&gt;#getContent(Class&amp;lt;T&amp;gt;)&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
      &lt;h3 id=&quot;automatic-inference-of-locators&quot;&gt;Automatic Inference of Locators&lt;/h3&gt;
      &lt;p&gt;How many times you have written:&lt;/p&gt;
      &lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;// look for input with a name 'firstname'
      @FindBy(name = &quot;firstname&quot;)
      private WebElement firstname;&lt;/code&gt;&lt;/pre&gt;
      &lt;p&gt;You can now simplify your tests to just&lt;/p&gt;
      &lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;@FindBy
      private WebElement firstname;&lt;/code&gt;&lt;/pre&gt;
      &lt;p&gt;Graphene will automatically use the strategy &lt;a href=&quot;http://selenium.googlecode.com/git/docs/api/java/org/openqa/selenium/support/How.html#ID_OR_NAME&quot;&gt;&lt;code&gt;How.ID_OR_NAME&lt;/code&gt;&lt;/a&gt; to locate the element by its ID or name.&lt;/p&gt;
      &lt;p&gt;Since this mechanism uses the strategy pattern, you can overwrite the default strategy for your test suite and therefore find elements by e.g. their class names or even JSF component IDs.&lt;/p&gt;
      &lt;h3&gt;Roadmap&lt;/h3&gt;
      &lt;p&gt;This release is a maintanance release &lt;a href=&quot;https://community.jboss.org/message/777443#777443&quot;&gt;on the way to Beta1&lt;/a&gt;.&lt;/p&gt;
      &lt;h3&gt;What is Arquillian?&lt;/h3&gt;
      &lt;p&gt;Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop a comprehensive suite of tests from the convenience of your IDE and run them in any IDE, build tool or continuous integration environment.&lt;/p&gt;
      &lt;h3&gt;Release details&lt;/h3&gt;
      &lt;table class=&quot;table table-bordered table-striped&quot;&gt;&lt;tbody&gt;
      &lt;tr&gt;
      &lt;th&gt;Component&lt;/th&gt;
            &lt;td&gt;
              &lt;a href=&quot;http://arquillian.org/modules/graphene-extension/&quot;&gt;Graphene&lt;/a&gt;
            &lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Version&lt;/th&gt;
            &lt;td&gt;
              2.0.0.Alpha4
              &lt;span class=&quot;label tag&quot;&gt;
                &lt;a href=&quot;https://api.github.com/repos/arquillian/arquillian-graphene/commits/2992120309fd9fb3927a4261a9ada01a4df735b4&quot;&gt;view tag&lt;/a&gt;
              &lt;/span&gt;
            &lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Release date&lt;/th&gt;
            &lt;td&gt;2013-04-12&lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Released by&lt;/th&gt;
            &lt;td&gt;Lukas Fryc&lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Compiled against&lt;/th&gt;
            &lt;td&gt;
              &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;Arquillian Core – 1.0.3.Final&lt;/li&gt;
              &lt;/ul&gt;
      &lt;/td&gt;
          &lt;/tr&gt;
      &lt;/tbody&gt;&lt;/table&gt;&lt;h3&gt;
        Published artifacts
        &lt;small&gt;org.jboss.arquillian.graphene&lt;/small&gt;
      &lt;/h3&gt;
      &lt;ul&gt;
      &lt;li&gt;
          org.jboss.arquillian.graphene
          »
          graphene-build-resources
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-build-resources/2.0.0.Alpha4/graphene-build-resources-2.0.0.Alpha4.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-build-resources/2.0.0.Alpha4/graphene-build-resources-2.0.0.Alpha4.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.graphene
          »
          graphene-component-api
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-component-api/2.0.0.Alpha4/graphene-component-api-2.0.0.Alpha4.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-component-api/2.0.0.Alpha4/graphene-component-api-2.0.0.Alpha4.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.graphene
          »
          graphene-selenium-api
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-selenium-api/2.0.0.Alpha4/graphene-selenium-api-2.0.0.Alpha4.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-selenium-api/2.0.0.Alpha4/graphene-selenium-api-2.0.0.Alpha4.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.graphene
          »
          graphene-selenium-drone
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-selenium-drone/2.0.0.Alpha4/graphene-selenium-drone-2.0.0.Alpha4.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-selenium-drone/2.0.0.Alpha4/graphene-selenium-drone-2.0.0.Alpha4.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.graphene
          »
          graphene-selenium-ftest-junit-container
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-selenium-ftest-junit-container/2.0.0.Alpha4/graphene-selenium-ftest-junit-container-2.0.0.Alpha4.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-selenium-ftest-junit-container/2.0.0.Alpha4/graphene-selenium-ftest-junit-container-2.0.0.Alpha4.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.graphene
          »
          graphene-selenium-ftest-junit-standalone
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-selenium-ftest-junit-standalone/2.0.0.Alpha4/graphene-selenium-ftest-junit-standalone-2.0.0.Alpha4.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-selenium-ftest-junit-standalone/2.0.0.Alpha4/graphene-selenium-ftest-junit-standalone-2.0.0.Alpha4.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.graphene
          »
          graphene-selenium-ftest-testng-container
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-selenium-ftest-testng-container/2.0.0.Alpha4/graphene-selenium-ftest-testng-container-2.0.0.Alpha4.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-selenium-ftest-testng-container/2.0.0.Alpha4/graphene-selenium-ftest-testng-container-2.0.0.Alpha4.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.graphene
          »
          graphene-selenium-ftest-testng-standalone
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-selenium-ftest-testng-standalone/2.0.0.Alpha4/graphene-selenium-ftest-testng-standalone-2.0.0.Alpha4.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-selenium-ftest-testng-standalone/2.0.0.Alpha4/graphene-selenium-ftest-testng-standalone-2.0.0.Alpha4.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.graphene
          »
          graphene-selenium-impl
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-selenium-impl/2.0.0.Alpha4/graphene-selenium-impl-2.0.0.Alpha4.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-selenium-impl/2.0.0.Alpha4/graphene-selenium-impl-2.0.0.Alpha4.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.graphene
          »
          graphene-webdriver-ftest
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-webdriver-ftest/2.0.0.Alpha4/graphene-webdriver-ftest-2.0.0.Alpha4.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-webdriver-ftest/2.0.0.Alpha4/graphene-webdriver-ftest-2.0.0.Alpha4.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.graphene
          »
          graphene-webdriver-impl
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-webdriver-impl/2.0.0.Alpha4/graphene-webdriver-impl-2.0.0.Alpha4.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-webdriver-impl/2.0.0.Alpha4/graphene-webdriver-impl-2.0.0.Alpha4.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.graphene
          »
          graphene-webdriver-spi
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-webdriver-spi/2.0.0.Alpha4/graphene-webdriver-spi-2.0.0.Alpha4.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-webdriver-spi/2.0.0.Alpha4/graphene-webdriver-spi-2.0.0.Alpha4.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
      &lt;/ul&gt;&lt;h3&gt;
        Release notes and resolved issues
        &lt;small&gt;20&lt;/small&gt;
      &lt;/h3&gt;
      &lt;p&gt;Q1/13: PhantomJS&lt;/p&gt;
      &lt;dl&gt;
      &lt;dt&gt;Bug&lt;/dt&gt;
        &lt;dd&gt;
          &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-257&quot;&gt;ARQGRA-257&lt;/a&gt; -         Guards are not working with AndroidDriver&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-262&quot;&gt;ARQGRA-262&lt;/a&gt; -         Element click with HTTP guard causes WebDriverException: ReferenceError: Graphene is not defined&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-266&quot;&gt;ARQGRA-266&lt;/a&gt; -         Waiting for presence of element defined by jQuery selector sometimes causes &quot;IllegalStateException: JQueryPageExtension can't be installed&quot;&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-272&quot;&gt;ARQGRA-272&lt;/a&gt; -         Introduced waitForHttp (guardXhr does not work for redirected pages)&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-274&quot;&gt;ARQGRA-274&lt;/a&gt; -         The request guard does timeout for delayed requests&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-289&quot;&gt;ARQGRA-289&lt;/a&gt; -         JavaScript interfaces fails on Chrome and PhantomJS&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-290&quot;&gt;ARQGRA-290&lt;/a&gt; -         testAttributeIsPresent fails on Chrome and PhantomJS&lt;/li&gt;
          &lt;/ul&gt;
      &lt;/dd&gt;
      &lt;/dl&gt;&lt;dl&gt;
      &lt;dt&gt;Enhancement&lt;/dt&gt;
        &lt;dd&gt;
          &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-199&quot;&gt;ARQGRA-199&lt;/a&gt; -         Provide a way to create Page Fragments dynamically&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-235&quot;&gt;ARQGRA-235&lt;/a&gt; -         Automatically infer ID locator from field name annotated just by @FindBy&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-250&quot;&gt;ARQGRA-250&lt;/a&gt; -         Shortcut for waiting on element's attribute value&lt;/li&gt;
          &lt;/ul&gt;
      &lt;/dd&gt;
      &lt;/dl&gt;&lt;dl&gt;
      &lt;dt&gt;Feature Request&lt;/dt&gt;
        &lt;dd&gt;
          &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-220&quot;&gt;ARQGRA-220&lt;/a&gt; -         Locating elements with @FindBy(how = How.ID, using = &quot;foobar&quot;) not working&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-247&quot;&gt;ARQGRA-247&lt;/a&gt; -         Add support for enriching @FindBys annotations&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-254&quot;&gt;ARQGRA-254&lt;/a&gt; -         Expose LocalStorage and SessionStorage enrichments directly&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-258&quot;&gt;ARQGRA-258&lt;/a&gt; -         Provide injecting classes requiring WebElement in their constructors via @FindBy annotation&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-259&quot;&gt;ARQGRA-259&lt;/a&gt; -         Provide timeout setting in fluent API&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-273&quot;&gt;ARQGRA-273&lt;/a&gt; -         Intercept WebDriver to return proxies in findElement()/findElements() methods&lt;/li&gt;
          &lt;/ul&gt;
      &lt;/dd&gt;
      &lt;/dl&gt;&lt;dl&gt;
      &lt;dt&gt;Story&lt;/dt&gt;
        &lt;dd&gt;
          &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-286&quot;&gt;ARQGRA-286&lt;/a&gt; -         Support PhantomJSDriver in Graphene&lt;/li&gt;
          &lt;/ul&gt;
      &lt;/dd&gt;
      &lt;/dl&gt;&lt;dl&gt;
      &lt;dt&gt;Task&lt;/dt&gt;
        &lt;dd&gt;
          &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-168&quot;&gt;ARQGRA-168&lt;/a&gt; -         Create QUnit tests for Graphene.Page.RequestGuard.js&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-284&quot;&gt;ARQGRA-284&lt;/a&gt; -         Rename guardXhr to guardAjax&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-287&quot;&gt;ARQGRA-287&lt;/a&gt; -         Deprecate Graphene.element and attribute methods&lt;/li&gt;
          &lt;/ul&gt;
      &lt;/dd&gt;
      &lt;/dl&gt;&lt;p&gt;
        Thanks to the following list of contributors:
        &lt;a href=&quot;https://github.com/papousek&quot;&gt;Jan Papoušek&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/lfryc&quot;&gt;Lukas Fryc&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/jhuska&quot;&gt;Juraj Huska&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/jstefek&quot;&gt;Jiri Stefek&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/avallen&quot;&gt;Andreas Vallen&lt;/a&gt;
      &lt;/p&gt;
    </content>
  </entry>
  <entry>
    <id>http://arquillian.org/blog/2013/04/19/arquillian-extension-screenrecorder-1-0-0-Alpha1/</id>
    <title>screenRecorder 1.0.0.Alpha1 Released</title>
    <updated>2013-04-20T00:00:00+00:00</updated>
    <link href="http://arquillian.org/blog/2013/04/19/arquillian-extension-screenrecorder-1-0-0-Alpha1/" rel="alternate" type="text/html" />
    <category scheme="http://arquillian.org/blog/tags" term="release" />
    <category scheme="http://arquillian.org/blog/tags" term="extension" />
    <category scheme="http://arquillian.org/blog/tags" term="screenrecorder" />
    <category scheme="http://arquillian.org/blog" term="arquillian" />
    <summary>
      The Arquillian team is proud to announce the 1.0.0.Alpha1 release of the screenRecorder component!
      
      What is Arquillian?
      Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop a comprehensive suite of tests from the convenience of your IDE and run them in any IDE, build tool or continuous integration environment.
      Release details
      
        
          
            Component
       ......
    </summary>
    <content type="html">
      &lt;p&gt;The Arquillian team is proud to announce the &lt;em&gt;1.0.0.Alpha1&lt;/em&gt; release of the &lt;em&gt;screenRecorder&lt;/em&gt; component!&lt;/p&gt;
      
      &lt;h3&gt;What is Arquillian?&lt;/h3&gt;
      &lt;p&gt;Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop a comprehensive suite of tests from the convenience of your IDE and run them in any IDE, build tool or continuous integration environment.&lt;/p&gt;
      &lt;h3&gt;Release details&lt;/h3&gt;
      &lt;table class=&quot;table table-bordered table-striped&quot;&gt;&lt;tbody&gt;
      &lt;tr&gt;
      &lt;th&gt;Component&lt;/th&gt;
            &lt;td&gt;
              &lt;a href=&quot;http://arquillian.org/modules/screenrecorder-extension/&quot;&gt;screenRecorder&lt;/a&gt;
            &lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Version&lt;/th&gt;
            &lt;td&gt;
              1.0.0.Alpha1
              &lt;span class=&quot;label tag&quot;&gt;
                &lt;a href=&quot;https://api.github.com/repos/arquillian/arquillian-extension-screenrecorder/commits/09ac44a7e18793c40c2d1d5a3c3d66216bcb1b78&quot;&gt;view tag&lt;/a&gt;
              &lt;/span&gt;
            &lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Release date&lt;/th&gt;
            &lt;td&gt;2013-04-19&lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Released by&lt;/th&gt;
            &lt;td&gt;Petr Mensik&lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Compiled against&lt;/th&gt;
            &lt;td&gt;
              &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;Arquillian Core – 1.0.3.Final&lt;/li&gt;
              &lt;/ul&gt;
      &lt;/td&gt;
          &lt;/tr&gt;
      &lt;/tbody&gt;&lt;/table&gt;&lt;h3&gt;
        Published artifacts
        &lt;small&gt;org.jboss.arquillian.extension&lt;/small&gt;
      &lt;/h3&gt;
      &lt;ul&gt;
      &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-screen-recorder
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-screen-recorder/1.0.0.Alpha1/arquillian-screen-recorder-1.0.0.Alpha1.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-screen-recorder/1.0.0.Alpha1/arquillian-screen-recorder-1.0.0.Alpha1.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
      &lt;/ul&gt;&lt;p&gt;
        Thanks to the following list of contributors:
        &lt;a href=&quot;https://community.jboss.org/people/pmensik&quot;&gt;Petr Mensik&lt;/a&gt;, &lt;a href=&quot;https://github.com/papousek&quot;&gt;Jan Papoušek&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/pmensik&quot;&gt;Petr Mensik&lt;/a&gt;
      &lt;/p&gt;
    </content>
  </entry>
  <entry>
    <id>http://arquillian.org/blog/2013/04/16/arquillian-extension-gwt-1-0-0-Alpha2/</id>
    <title>Arquillian GWT Testing extension 1.0.0.Alpha2 Released</title>
    <updated>2013-04-17T00:00:00+00:00</updated>
    <link href="http://arquillian.org/blog/2013/04/16/arquillian-extension-gwt-1-0-0-Alpha2/" rel="alternate" type="text/html" />
    <category scheme="http://arquillian.org/blog/tags" term="release" />
    <category scheme="http://arquillian.org/blog/tags" term="extension" />
    <category scheme="http://arquillian.org/blog/tags" term="gwt" />
    <category scheme="http://arquillian.org/blog" term="arquillian" />
    <summary>
      The Arquillian team is proud to announce the 1.0.0.Alpha2 release of the Arquillian GWT Testing extension component!
      This is an update of the Arquillian GWT extension to remove the need for the custom GwtArchive class. Arquillian GWT tests can now leverage the standard ShrinkWrap API for specifiying their deployments. The WebArchive is automatically enhanced to include all dependencies and configurations relevant to the GWT deployment.
      Here&#8217;s an updated example of a complete test class:
      GreeterRpcTest.java
      &#x000A;@RunWith(Arquillian.class)&#x000A;public class GreeterRpcTest extends ArquillianGwtTestCase {&#x000A;&#x000A;  @Deployment&#x000A;  public static WebArchive createDeployment() {&#x000A;    return ShrinkWrap.create(WebArchive.class, "test.war")&#x000A;      .addClass(Greeter.class)&#x000A;   ......
    </summary>
    <content type="html">
      &lt;p&gt;The Arquillian team is proud to announce the &lt;em&gt;1.0.0.Alpha2&lt;/em&gt; release of the &lt;em&gt;Arquillian GWT Testing extension&lt;/em&gt; component!&lt;/p&gt;
      &lt;p&gt;This is an update of the Arquillian GWT extension to remove the need for the custom &lt;code&gt;GwtArchive&lt;/code&gt; class. Arquillian GWT tests can now leverage the standard ShrinkWrap API for specifiying their deployments. The &lt;code&gt;WebArchive&lt;/code&gt; is automatically enhanced to include all dependencies and configurations relevant to the GWT deployment.&lt;/p&gt;
      &lt;p&gt;Here’s an updated example of a complete test class:&lt;/p&gt;
      &lt;div class=&quot;filename&quot;&gt;GreeterRpcTest.java&lt;/div&gt;
      &lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;
      @RunWith(Arquillian.class)
      public class GreeterRpcTest extends ArquillianGwtTestCase {&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;  @Deployment
        public static WebArchive createDeployment() {
          return ShrinkWrap.create(WebArchive.class, &quot;test.war&quot;)
            .addClass(Greeter.class)
            .addClass(GreetingService.class)
            .addClass(GreetingServiceImpl.class)
            .addAsWebInfResource(new File(&quot;src/main/webapp/WEB-INF/web.xml&quot;));
        }&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;  @Test
        @RunAsGwtClient(moduleName = &quot;org.myapp.MyGwtModule&quot;)
        public void testGreetingService() {
          GreetingServiceAsync greetingService = GWT.create(GreetingService.class);
          greetingService.greetServer(&quot;Hello!&quot;, new AsyncCallback&amp;lt;String&amp;gt;() {
            @Override
            public void onFailure(Throwable caught) {
              Assert.fail(&quot;Request failure: &quot; + caught.getMessage());
            }&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;      @Override
            public void onSuccess(String result) {
              assertEquals(&quot;Received invalid response from Server&quot;, &quot;Welcome!&quot;, result);
              finishTest();
            }
          });
          delayTestFinish(5000);
        }
      }&lt;/code&gt;&lt;/pre&gt;
      &lt;p&gt;Note that you will only need to extend &lt;code&gt;ArquillianGwtTestCase&lt;/code&gt; if you want to inherit GWT’s asynchronous testing methods (&lt;code&gt;finishTest&lt;/code&gt; and &lt;code&gt;delayTestFinish&lt;/code&gt;).&lt;/p&gt;
      &lt;p&gt;We look forward to your feedback on this release in the &lt;a href=&quot;http://community.jboss.org/en/arquillian&quot;&gt;community forums&lt;/a&gt;!&lt;/p&gt;
      &lt;h3&gt;What is Arquillian?&lt;/h3&gt;
      &lt;p&gt;Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop a comprehensive suite of tests from the convenience of your IDE and run them in any IDE, build tool or continuous integration environment.&lt;/p&gt;
      &lt;h3&gt;Release details&lt;/h3&gt;
      &lt;table class=&quot;table table-bordered table-striped&quot;&gt;&lt;tbody&gt;
      &lt;tr&gt;
      &lt;th&gt;Component&lt;/th&gt;
            &lt;td&gt;
              &lt;a href=&quot;http://arquillian.org/modules/gwt-extension/&quot;&gt;Arquillian GWT Testing extension&lt;/a&gt;
            &lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Version&lt;/th&gt;
            &lt;td&gt;
              1.0.0.Alpha2
              &lt;span class=&quot;label tag&quot;&gt;
                &lt;a href=&quot;https://api.github.com/repos/arquillian/arquillian-extension-gwt/commits/a3aaf5e18eb724e43eed67f01d4444f2006865be&quot;&gt;view tag&lt;/a&gt;
              &lt;/span&gt;
            &lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Release date&lt;/th&gt;
            &lt;td&gt;2013-04-15&lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Released by&lt;/th&gt;
            &lt;td&gt;Christian Sadilek&lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Compiled against&lt;/th&gt;
            &lt;td&gt;
              &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;Arquillian Core – 1.0.2.Final&lt;/li&gt;
              &lt;/ul&gt;
      &lt;/td&gt;
          &lt;/tr&gt;
      &lt;/tbody&gt;&lt;/table&gt;&lt;h3&gt;
        Published artifacts
        &lt;small&gt;org.jboss.arquillian.extension&lt;/small&gt;
      &lt;/h3&gt;
      &lt;ul&gt;
      &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-gwt
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-gwt/1.0.0.Alpha2/arquillian-gwt-1.0.0.Alpha2.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-gwt/1.0.0.Alpha2/arquillian-gwt-1.0.0.Alpha2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
      &lt;/ul&gt;&lt;h3&gt;
        Release notes and resolved issues
        &lt;small&gt;2&lt;/small&gt;
      &lt;/h3&gt;
      &lt;p&gt;Automatic deployment archive enhancement for GWT&lt;/p&gt;
      &lt;dl&gt;
      &lt;dt&gt;Feature Request&lt;/dt&gt;
        &lt;dd&gt;
          &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1354&quot;&gt;ARQ-1354&lt;/a&gt; -         Automatically enhance the deployment archive to include all dependencies and configurations relevant to the GWT deployment&lt;/li&gt;
          &lt;/ul&gt;
      &lt;/dd&gt;
      &lt;/dl&gt;&lt;p&gt;
        Thanks to the following list of contributors:
        &lt;a href=&quot;https://community.jboss.org/people/csa&quot;&gt;Christian Sadilek&lt;/a&gt;
      &lt;/p&gt;
    </content>
  </entry>
  <entry>
    <id>http://arquillian.org/blog/2013/04/12/arquillian-container-osgi-2-0-0-CR2/</id>
    <title>Arquillian OSGi 2.0.0.CR2 Released</title>
    <updated>2013-04-13T00:00:00+00:00</updated>
    <link href="http://arquillian.org/blog/2013/04/12/arquillian-container-osgi-2-0-0-CR2/" rel="alternate" type="text/html" />
    <category scheme="http://arquillian.org/blog/tags" term="release" />
    <category scheme="http://arquillian.org/blog/tags" term="container-adapter" />
    <category scheme="http://arquillian.org/blog/tags" term="osgi" />
    <category scheme="http://arquillian.org/blog" term="arquillian" />
    <summary>
      The Arquillian team is proud to announce the 2.0.0.CR2 release of the Arquillian OSGi component!
      
      What is Arquillian?
      Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop a comprehensive suite of tests from the convenience of your IDE and run them in any IDE, build tool or continuous integration environment.
      Release details
      
        
          
            Component
      ......
    </summary>
    <content type="html">
      &lt;p&gt;The Arquillian team is proud to announce the &lt;em&gt;2.0.0.CR2&lt;/em&gt; release of the &lt;em&gt;Arquillian OSGi&lt;/em&gt; component!&lt;/p&gt;
      
      &lt;h3&gt;What is Arquillian?&lt;/h3&gt;
      &lt;p&gt;Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop a comprehensive suite of tests from the convenience of your IDE and run them in any IDE, build tool or continuous integration environment.&lt;/p&gt;
      &lt;h3&gt;Release details&lt;/h3&gt;
      &lt;table class=&quot;table table-bordered table-striped&quot;&gt;&lt;tbody&gt;
      &lt;tr&gt;
      &lt;th&gt;Component&lt;/th&gt;
            &lt;td&gt;
              &lt;a href=&quot;http://arquillian.org/modules/arquillian-osgi-embedded-container-adapter/&quot;&gt;Arquillian OSGi&lt;/a&gt;
            &lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Version&lt;/th&gt;
            &lt;td&gt;
              2.0.0.CR2
              &lt;span class=&quot;label tag&quot;&gt;
                &lt;a href=&quot;https://api.github.com/repos/arquillian/arquillian-container-osgi/commits/5db4a4a8ee14952a401982847158435919f92a59&quot;&gt;view tag&lt;/a&gt;
              &lt;/span&gt;
            &lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Release date&lt;/th&gt;
            &lt;td&gt;2013-04-12&lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Released by&lt;/th&gt;
            &lt;td&gt;Thomas Diesler&lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Compiled against&lt;/th&gt;
            &lt;td&gt;
              &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;Arquillian Core – 1.0.2.Final&lt;/li&gt;
                &lt;li&gt;ShrinkWrap Core – 1.0.0&lt;/li&gt;
              &lt;/ul&gt;
      &lt;/td&gt;
          &lt;/tr&gt;
      &lt;/tbody&gt;&lt;/table&gt;&lt;h3&gt;
        Published artifacts
        &lt;small&gt;org.jboss.arquillian.container&lt;/small&gt;
      &lt;/h3&gt;
      &lt;ul&gt;
      &lt;li&gt;
          org.jboss.arquillian.container
          »
          arquillian-container-osgi
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-osgi/2.0.0.CR2/arquillian-container-osgi-2.0.0.CR2.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-osgi/2.0.0.CR2/arquillian-container-osgi-2.0.0.CR2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.container
          »
          arquillian-container-osgi-embedded
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-osgi-embedded/2.0.0.CR2/arquillian-container-osgi-embedded-2.0.0.CR2.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-osgi-embedded/2.0.0.CR2/arquillian-container-osgi-embedded-2.0.0.CR2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.protocol
          »
          arquillian-protocol-osgi
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/protocol/arquillian-protocol-osgi/2.0.0.CR2/arquillian-protocol-osgi-2.0.0.CR2.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/protocol/arquillian-protocol-osgi/2.0.0.CR2/arquillian-protocol-osgi-2.0.0.CR2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.testenricher
          »
          arquillian-testenricher-osgi
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testenricher/arquillian-testenricher-osgi/2.0.0.CR2/arquillian-testenricher-osgi-2.0.0.CR2.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testenricher/arquillian-testenricher-osgi/2.0.0.CR2/arquillian-testenricher-osgi-2.0.0.CR2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
      &lt;/ul&gt;&lt;p&gt;
        Thanks to the following list of contributors:
        &lt;a href=&quot;https://community.jboss.org/people/thomas.diesler&quot;&gt;Thomas Diesler&lt;/a&gt;
      &lt;/p&gt;
    </content>
  </entry>
  <entry>
    <id>http://arquillian.org/blog/2013/03/13/arquillian-container-osgi-2-0-0-CR1/</id>
    <title>Arquillian OSGi 2.0.0.CR1 Released</title>
    <updated>2013-03-14T00:00:00+00:00</updated>
    <link href="http://arquillian.org/blog/2013/03/13/arquillian-container-osgi-2-0-0-CR1/" rel="alternate" type="text/html" />
    <category scheme="http://arquillian.org/blog/tags" term="release" />
    <category scheme="http://arquillian.org/blog/tags" term="container-adapter" />
    <category scheme="http://arquillian.org/blog/tags" term="osgi" />
    <category scheme="http://arquillian.org/blog" term="arquillian" />
    <summary>
      The Arquillian team is proud to announce the 2.0.0.CR1 release of the Arquillian OSGi component!
      
      What is Arquillian?
      Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop a comprehensive suite of tests from the convenience of your IDE and run them in any IDE, build tool or continuous integration environment.
      Release details
      
        
          
            Component
      ......
    </summary>
    <content type="html">
      &lt;p&gt;The Arquillian team is proud to announce the &lt;em&gt;2.0.0.CR1&lt;/em&gt; release of the &lt;em&gt;Arquillian OSGi&lt;/em&gt; component!&lt;/p&gt;
      
      &lt;h3&gt;What is Arquillian?&lt;/h3&gt;
      &lt;p&gt;Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop a comprehensive suite of tests from the convenience of your IDE and run them in any IDE, build tool or continuous integration environment.&lt;/p&gt;
      &lt;h3&gt;Release details&lt;/h3&gt;
      &lt;table class=&quot;table table-bordered table-striped&quot;&gt;&lt;tbody&gt;
      &lt;tr&gt;
      &lt;th&gt;Component&lt;/th&gt;
            &lt;td&gt;
              &lt;a href=&quot;http://arquillian.org/modules/arquillian-osgi-embedded-container-adapter/&quot;&gt;Arquillian OSGi&lt;/a&gt;
            &lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Version&lt;/th&gt;
            &lt;td&gt;
              2.0.0.CR1
              &lt;span class=&quot;label tag&quot;&gt;
                &lt;a href=&quot;https://api.github.com/repos/arquillian/arquillian-container-osgi/commits/f5b0bf59676875b5b3282e603238eea3880b95a2&quot;&gt;view tag&lt;/a&gt;
              &lt;/span&gt;
            &lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Release date&lt;/th&gt;
            &lt;td&gt;2013-03-13&lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Released by&lt;/th&gt;
            &lt;td&gt;Thomas Diesler&lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Compiled against&lt;/th&gt;
            &lt;td&gt;
              &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;Arquillian Core – 1.0.2.Final&lt;/li&gt;
                &lt;li&gt;ShrinkWrap Core – 1.0.0&lt;/li&gt;
              &lt;/ul&gt;
      &lt;/td&gt;
          &lt;/tr&gt;
      &lt;/tbody&gt;&lt;/table&gt;&lt;h3&gt;
        Published artifacts
        &lt;small&gt;org.jboss.arquillian.container&lt;/small&gt;
      &lt;/h3&gt;
      &lt;ul&gt;
      &lt;li&gt;
          org.jboss.arquillian.container
          »
          arquillian-container-osgi
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-osgi/2.0.0.CR1/arquillian-container-osgi-2.0.0.CR1.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-osgi/2.0.0.CR1/arquillian-container-osgi-2.0.0.CR1.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.container
          »
          arquillian-container-osgi-embedded
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-osgi-embedded/2.0.0.CR1/arquillian-container-osgi-embedded-2.0.0.CR1.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-osgi-embedded/2.0.0.CR1/arquillian-container-osgi-embedded-2.0.0.CR1.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.protocol
          »
          arquillian-protocol-osgi
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/protocol/arquillian-protocol-osgi/2.0.0.CR1/arquillian-protocol-osgi-2.0.0.CR1.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/protocol/arquillian-protocol-osgi/2.0.0.CR1/arquillian-protocol-osgi-2.0.0.CR1.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.testenricher
          »
          arquillian-testenricher-osgi
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testenricher/arquillian-testenricher-osgi/2.0.0.CR1/arquillian-testenricher-osgi-2.0.0.CR1.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testenricher/arquillian-testenricher-osgi/2.0.0.CR1/arquillian-testenricher-osgi-2.0.0.CR1.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
      &lt;/ul&gt;&lt;p&gt;
        Thanks to the following list of contributors:
        &lt;a href=&quot;https://community.jboss.org/people/thomas.diesler&quot;&gt;Thomas Diesler&lt;/a&gt;
      &lt;/p&gt;
    </content>
  </entry>
  <entry>
    <id>http://arquillian.org/blog/2013/03/08/arquillian-container-weld-1-0-0-CR6/</id>
    <title>Arquillian Container Weld 1.0.0.CR6 Released</title>
    <updated>2013-03-09T00:00:00+00:00</updated>
    <link href="http://arquillian.org/blog/2013/03/08/arquillian-container-weld-1-0-0-CR6/" rel="alternate" type="text/html" />
    <category scheme="http://arquillian.org/blog/tags" term="release" />
    <category scheme="http://arquillian.org/blog/tags" term="container-adapter" />
    <category scheme="http://arquillian.org/blog/tags" term="weld" />
    <category scheme="http://arquillian.org/blog" term="arquillian" />
    <summary>
      The Arquillian team is proud to announce the 1.0.0.CR6 release of the Arquillian Container Weld component!
      
      What is Arquillian?
      Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop a comprehensive suite of tests from the convenience of your IDE and run them in any IDE, build tool or continuous integration environment.
      Release details
      
        
          
           ......
    </summary>
    <content type="html">
      &lt;p&gt;The Arquillian team is proud to announce the &lt;em&gt;1.0.0.CR6&lt;/em&gt; release of the &lt;em&gt;Arquillian Container Weld&lt;/em&gt; component!&lt;/p&gt;
      
      &lt;h3&gt;What is Arquillian?&lt;/h3&gt;
      &lt;p&gt;Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop a comprehensive suite of tests from the convenience of your IDE and run them in any IDE, build tool or continuous integration environment.&lt;/p&gt;
      &lt;h3&gt;Release details&lt;/h3&gt;
      &lt;table class=&quot;table table-bordered table-striped&quot;&gt;&lt;tbody&gt;
      &lt;tr&gt;
      &lt;th&gt;Component&lt;/th&gt;
            &lt;td&gt;Arquillian Container Weld&lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Modules&lt;/th&gt;
            &lt;td&gt;
              &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;
                  &lt;a href=&quot;http://arquillian.org/modules/arquillian-weld-ee-embedded-1.1-container-adapter/&quot;&gt;Arquillian Weld EE Embedded 1.1.x Container Adapter&lt;/a&gt;
                &lt;/li&gt;
                &lt;li&gt;
                  &lt;a href=&quot;http://arquillian.org/modules/arquillian-weld-se-embedded-1-container-adapter/&quot;&gt;Arquillian Weld SE Embedded 1.x Container Adapter&lt;/a&gt;
                &lt;/li&gt;
                &lt;li&gt;
                  &lt;a href=&quot;http://arquillian.org/modules/arquillian-weld-se-embedded-1.1-container-adapter/&quot;&gt;Arquillian Weld SE Embedded 1.1.x Container Adapter&lt;/a&gt;
                &lt;/li&gt;
              &lt;/ul&gt;
      &lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Version&lt;/th&gt;
            &lt;td&gt;
              1.0.0.CR6
              &lt;span class=&quot;label tag&quot;&gt;
                &lt;a href=&quot;https://api.github.com/repos/arquillian/arquillian-container-weld/commits/0783342608dd166b696c106133738eef82b954a6&quot;&gt;view tag&lt;/a&gt;
              &lt;/span&gt;
            &lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Release date&lt;/th&gt;
            &lt;td&gt;2013-03-08&lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Released by&lt;/th&gt;
            &lt;td&gt;Aslak Knutsen&lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Compiled against&lt;/th&gt;
            &lt;td&gt;
              &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;Arquillian Core – 1.0.2.Final&lt;/li&gt;
              &lt;/ul&gt;
      &lt;/td&gt;
          &lt;/tr&gt;
      &lt;/tbody&gt;&lt;/table&gt;&lt;h3&gt;
        Published artifacts
        &lt;small&gt;org.jboss.arquillian.container&lt;/small&gt;
      &lt;/h3&gt;
      &lt;ul&gt;
      &lt;li&gt;
          org.jboss.arquillian.container
          »
          arquillian-weld-ee-embedded-1.1
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-weld-ee-embedded-1.1/1.0.0.CR6/arquillian-weld-ee-embedded-1.1-1.0.0.CR6.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-weld-ee-embedded-1.1/1.0.0.CR6/arquillian-weld-ee-embedded-1.1-1.0.0.CR6.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.container
          »
          arquillian-weld-se-embedded-1
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-weld-se-embedded-1/1.0.0.CR6/arquillian-weld-se-embedded-1-1.0.0.CR6.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-weld-se-embedded-1/1.0.0.CR6/arquillian-weld-se-embedded-1-1.0.0.CR6.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.container
          »
          arquillian-weld-se-embedded-1.1
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-weld-se-embedded-1.1/1.0.0.CR6/arquillian-weld-se-embedded-1.1-1.0.0.CR6.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-weld-se-embedded-1.1/1.0.0.CR6/arquillian-weld-se-embedded-1.1-1.0.0.CR6.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
      &lt;/ul&gt;&lt;h3&gt;
        Release notes and resolved issues
        &lt;small&gt;3&lt;/small&gt;
      &lt;/h3&gt;
      &lt;p&gt;Support for Weld 2.0&lt;/p&gt;
      &lt;dl&gt;
      &lt;dt&gt;Bug&lt;/dt&gt;
        &lt;dd&gt;
          &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-841&quot;&gt;ARQ-841&lt;/a&gt; -         Should not scan for classes in Archive if it contains no beans.xml&lt;/li&gt;
          &lt;/ul&gt;
      &lt;/dd&gt;
      &lt;/dl&gt;&lt;dl&gt;
      &lt;dt&gt;Feature Request&lt;/dt&gt;
        &lt;dd&gt;
          &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1302&quot;&gt;ARQ-1302&lt;/a&gt; -         Support Weld 2.x&lt;/li&gt;
          &lt;/ul&gt;
      &lt;/dd&gt;
      &lt;/dl&gt;&lt;p&gt;
        Thanks to the following list of contributors:
        &lt;a href=&quot;https://community.jboss.org/people/aslak&quot;&gt;Aslak Knutsen&lt;/a&gt;, &lt;a href=&quot;https://github.com/mbenson&quot;&gt;Matt Benson&lt;/a&gt;
      &lt;/p&gt;
    </content>
  </entry>
  <entry>
    <id>http://arquillian.org/blog/2013/03/07/arquillian-extension-persistence-1-0-0-Alpha6/</id>
    <title>Arquillian Persistence Extension 1.0.0.Alpha6 Released</title>
    <updated>2013-03-08T00:00:00+00:00</updated>
    <link href="http://arquillian.org/blog/2013/03/07/arquillian-extension-persistence-1-0-0-Alpha6/" rel="alternate" type="text/html" />
    <category scheme="http://arquillian.org/blog/tags" term="release" />
    <category scheme="http://arquillian.org/blog/tags" term="extension" />
    <category scheme="http://arquillian.org/blog/tags" term="persistence" />
    <category scheme="http://arquillian.org/blog" term="arquillian" />
    <summary>
      The Arquillian team is proud to announce the 1.0.0.Alpha6 release of the Arquillian Persistence Extension component!
      Arquillian Persistence Extension is back on the release train and the future plan is stronger than ever. The Alpha6 release brings a lot of improvements and fixes thanks to invaluable feedback from the community.
      Big thanks go to Marco Cella, Matti Linnanvuori, Bernard Łabno, Tiago Wanke Marques, Karsten Ohme, Vineet Reynolds, Cyrill Ruettimann, Bryan Saunders, Anton Shaykin, Nicolas-Xavier Vanderlinden and Noah White for their feedback which led us to fix some minor annoyances and shortcomings of APE. We are proud of the vibrant and active community......
    </summary>
    <content type="html">
      &lt;p&gt;The Arquillian team is proud to announce the &lt;em&gt;1.0.0.Alpha6&lt;/em&gt; release of the &lt;em&gt;Arquillian Persistence Extension&lt;/em&gt; component!&lt;/p&gt;
      &lt;p&gt;Arquillian Persistence Extension is back on the release train and the future plan is stronger than ever. The Alpha6 release brings a lot of improvements and fixes thanks to invaluable feedback from the community.&lt;/p&gt;
      &lt;p&gt;Big thanks go to Marco Cella, Matti Linnanvuori, Bernard Łabno, Tiago Wanke Marques, Karsten Ohme, Vineet Reynolds, Cyrill Ruettimann, Bryan Saunders, Anton Shaykin, Nicolas-Xavier Vanderlinden and Noah White for their feedback which led us to fix some minor annoyances and shortcomings of APE. We are proud of the vibrant and active community around Arquillian!&lt;/p&gt;
      &lt;h3 class=&quot;highlights&quot;&gt;Some of the highlights in this release&lt;/h3&gt;
      &lt;p&gt;&lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; Transaction support has been replaced with &lt;a href=&quot;http://arquillian.org/modules/transaction-extension/&quot;&gt;Transaction Extension&lt;/a&gt;. By default the JTA implementation is included. The only thing you will need to change in your tests is the import sttement for the &lt;code&gt;@Transactional&lt;/code&gt; annotation. From now on it’s under &lt;code&gt;org.jboss.arquillian.transaction.api.annotation&lt;/code&gt;.&lt;/p&gt;
      &lt;p&gt;&lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; Support for row ordering when comparing datasets. When using Generated ID’s for instance, such as UUID’s, the rows need to be sorted in order for the DbUnit comparison to pass. If they are not ordered, then the assertion is unreliable.&lt;/p&gt;
      &lt;p&gt;&lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; Improved error reporting, including rows comparision and misconfigured entries.&lt;/p&gt;
      &lt;p&gt;&lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; DTD support for flat XML data sets (DBUnit feature).&lt;/p&gt;
      &lt;p&gt;&lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; Proper support for multiple line SQL scripts with comments (ANSI SQL compliant)&lt;/p&gt;
      &lt;p&gt;We’ve also extended our test suite by adding Apache Derby to our continuous integration pipeline.&lt;/p&gt;
      &lt;p class=&quot;important&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;em&gt;Important change&lt;/em&gt;&lt;/strong&gt;: We re-groupped configuration entries &lt;code&gt;arquillian.xml&lt;/code&gt; giving them more qualifiers:&lt;br&gt;&lt;em&gt;persistence&lt;/em&gt; – for all basic settings &lt;br&gt;&lt;em&gt;persistence-dbunit&lt;/em&gt; – for DBUnit specific configuration&lt;br&gt;&lt;em&gt;persistence-script&lt;/em&gt; – for SQL related things&lt;br&gt;
      Please refer to our &lt;a href=&quot;https://docs.jboss.org/author/display/ARQ/Persistence#Persistence-Additionalconfiguration&quot;&gt;confluence documentation&lt;/a&gt; for detailed description.&lt;/span&gt;&lt;/p&gt;
      &lt;p&gt;We look forward to hearing your feedback about this release in the &lt;a href=&quot;http://community.jboss.org/en/arquillian&quot;&gt;community forums&lt;/a&gt;!&lt;/p&gt;
      &lt;h3&gt;What is Arquillian?&lt;/h3&gt;
      &lt;p&gt;Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop a comprehensive suite of tests from the convenience of your IDE and run them in any IDE, build tool or continuous integration environment.&lt;/p&gt;
      &lt;h3&gt;Release details&lt;/h3&gt;
      &lt;table class=&quot;table table-bordered table-striped&quot;&gt;&lt;tbody&gt;
      &lt;tr&gt;
      &lt;th&gt;Component&lt;/th&gt;
            &lt;td&gt;
              &lt;a href=&quot;http://arquillian.org/modules/persistence-extension/&quot;&gt;Arquillian Persistence Extension&lt;/a&gt;
            &lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Version&lt;/th&gt;
            &lt;td&gt;
              1.0.0.Alpha6
              &lt;span class=&quot;label tag&quot;&gt;
                &lt;a href=&quot;https://api.github.com/repos/arquillian/arquillian-extension-persistence/commits/9d8cfc76d8bb0d4604cccec61f02ccc71448b5e3&quot;&gt;view tag&lt;/a&gt;
              &lt;/span&gt;
            &lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Release date&lt;/th&gt;
            &lt;td&gt;2013-03-07&lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Released by&lt;/th&gt;
            &lt;td&gt;Aslak Knutsen&lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Compiled against&lt;/th&gt;
            &lt;td&gt;
              &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;Arquillian Core – 1.0.3.Final&lt;/li&gt;
              &lt;/ul&gt;
      &lt;/td&gt;
          &lt;/tr&gt;
      &lt;/tbody&gt;&lt;/table&gt;&lt;h3&gt;
        Published artifacts
        &lt;small&gt;org.jboss.arquillian.extension&lt;/small&gt;
      &lt;/h3&gt;
      &lt;ul&gt;
      &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-persistence-api
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-persistence-api/1.0.0.Alpha6/arquillian-persistence-api-1.0.0.Alpha6.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-persistence-api/1.0.0.Alpha6/arquillian-persistence-api-1.0.0.Alpha6.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-persistence-impl
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-persistence-impl/1.0.0.Alpha6/arquillian-persistence-impl-1.0.0.Alpha6.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-persistence-impl/1.0.0.Alpha6/arquillian-persistence-impl-1.0.0.Alpha6.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-persistence-integration-tests-testng
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-persistence-integration-tests-testng/1.0.0.Alpha6/arquillian-persistence-integration-tests-testng-1.0.0.Alpha6.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-persistence-integration-tests-testng/1.0.0.Alpha6/arquillian-persistence-integration-tests-testng-1.0.0.Alpha6.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
      &lt;/ul&gt;&lt;h3&gt;
        Release notes and resolved issues
        &lt;small&gt;25&lt;/small&gt;
      &lt;/h3&gt;
      &lt;p&gt;&lt;/p&gt;
      &lt;dl&gt;
      &lt;dt&gt;Bug&lt;/dt&gt;
        &lt;dd&gt;
          &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1028&quot;&gt;ARQ-1028&lt;/a&gt; -         @ShouldMatchDataSet before persist&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1081&quot;&gt;ARQ-1081&lt;/a&gt; -         DTD not supported by APE&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1086&quot;&gt;ARQ-1086&lt;/a&gt; -         @CleanuUsingScript with phase NONE&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1087&quot;&gt;ARQ-1087&lt;/a&gt; -         Wrong dump directory path&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1094&quot;&gt;ARQ-1094&lt;/a&gt; -         @ShouldMatchDataSet Not Properly Comparing Datasets&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1100&quot;&gt;ARQ-1100&lt;/a&gt; -         Datetime conversion does not work as expected for YAML data sets&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1101&quot;&gt;ARQ-1101&lt;/a&gt; -         Exception with nested transaction with MySQL&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1127&quot;&gt;ARQ-1127&lt;/a&gt; -         Order of scripts and data sets should be preserved when defined on class level&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1146&quot;&gt;ARQ-1146&lt;/a&gt; -         Single statement which spans multiple lines is not handled properly&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1167&quot;&gt;ARQ-1167&lt;/a&gt; -         Transactional support from Seam 3 interfere Persistence Extension resulting in ExclusiveTransactionException&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1208&quot;&gt;ARQ-1208&lt;/a&gt; -         Multiple line statements are not handled properly&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1300&quot;&gt;ARQ-1300&lt;/a&gt; -         Execute script handler does not properly ignore /* */ and {} ANSI compliant SQL comments&lt;/li&gt;
          &lt;/ul&gt;
      &lt;/dd&gt;
      &lt;/dl&gt;&lt;dl&gt;
      &lt;dt&gt;Enhancement&lt;/dt&gt;
        &lt;dd&gt;
          &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1085&quot;&gt;ARQ-1085&lt;/a&gt; -         Unify JPA Cache eviction events with APE&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1215&quot;&gt;ARQ-1215&lt;/a&gt; -         Clean slf4j dependency&lt;/li&gt;
          &lt;/ul&gt;
      &lt;/dd&gt;
      &lt;/dl&gt;&lt;dl&gt;
      &lt;dt&gt;Feature Request&lt;/dt&gt;
        &lt;dd&gt;
          &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1093&quot;&gt;ARQ-1093&lt;/a&gt; -         Support for Row Ordering when Comparing Datasets&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1149&quot;&gt;ARQ-1149&lt;/a&gt; -         Dataset comparision should collect all differences in the rows instead of failing on the first column&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1157&quot;&gt;ARQ-1157&lt;/a&gt; -         Replace Persistence internal Transaction management with Transaction Extension&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1231&quot;&gt;ARQ-1231&lt;/a&gt; -         Should observe required object ArquillianDescriptor instead of assuming Lifecycle&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1248&quot;&gt;ARQ-1248&lt;/a&gt; -         Add Derby to the testing matrix&lt;/li&gt;
          &lt;/ul&gt;
      &lt;/dd&gt;
      &lt;/dl&gt;&lt;dl&gt;
      &lt;dt&gt;Task&lt;/dt&gt;
        &lt;dd&gt;
          &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1342&quot;&gt;ARQ-1342&lt;/a&gt; -         Clean up POM&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1343&quot;&gt;ARQ-1343&lt;/a&gt; -         Schema creation scripts should be repeatable&lt;/li&gt;
          &lt;/ul&gt;
      &lt;/dd&gt;
      &lt;/dl&gt;&lt;dl&gt;
      &lt;dt&gt;Sub-task&lt;/dt&gt;
        &lt;dd&gt;
          &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1158&quot;&gt;ARQ-1158&lt;/a&gt; -         Extract JTA from APE and replace with Transaction Extension dependency&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1334&quot;&gt;ARQ-1334&lt;/a&gt; -         Should inform if table defined for exclusion is not defined in the schema&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1335&quot;&gt;ARQ-1335&lt;/a&gt; -         Should inform when non-defined configuration key encountered in arquillian.xml&lt;/li&gt;
          &lt;/ul&gt;
      &lt;/dd&gt;
      &lt;/dl&gt;&lt;p&gt;
        Thanks to the following list of contributors:
        &lt;a href=&quot;https://community.jboss.org/people/bmajsak&quot;&gt;Bartosz Majsak&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/aslak&quot;&gt;Aslak Knutsen&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/vineet.reynolds&quot;&gt;Vineet Reynolds&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/jmnarloch&quot;&gt;Jakub Narloch&lt;/a&gt;, &lt;a href=&quot;https://github.com/ming13&quot;&gt;Artur Dryomov&lt;/a&gt;
      &lt;/p&gt;
    </content>
  </entry>
  <entry>
    <id>http://arquillian.org/blog/2013/02/26/arquillian-extension-gwt-1-0-0-Alpha1/</id>
    <title>Arquillian GWT Testing extension 1.0.0.Alpha1 Released</title>
    <updated>2013-02-27T00:00:00+00:00</updated>
    <link href="http://arquillian.org/blog/2013/02/26/arquillian-extension-gwt-1-0-0-Alpha1/" rel="alternate" type="text/html" />
    <category scheme="http://arquillian.org/blog/tags" term="release" />
    <category scheme="http://arquillian.org/blog/tags" term="extension" />
    <category scheme="http://arquillian.org/blog/tags" term="gwt" />
    <category scheme="http://arquillian.org/blog" term="arquillian" />
    <summary>
      The Arquillian team is proud to announce the 1.0.0.Alpha1 release of the Arquillian GWT Testing extension component!
      This is the first release of the Arquillian GWT extension which aims to bring true integration testing to GWT.
      Highlighted Features
      
      	 Run GWT integration tests in Arquillian containers
      	This means that GWT integration tests can break free and execute in the actual runtime container instead of being tied to GWT’s embedded Jetty server.
      
      
      	 Combining client-side and in-container tests
      	It is possible to combine GWT client-side and standard in-container tests in the same test class. This allows to test features without having to worry about the client-server bridge......
    </summary>
    <content type="html">
      &lt;p&gt;The Arquillian team is proud to announce the &lt;em&gt;1.0.0.Alpha1&lt;/em&gt; release of the &lt;em&gt;Arquillian GWT Testing extension&lt;/em&gt; component!&lt;/p&gt;
      &lt;p&gt;This is the first release of the Arquillian GWT extension which aims to bring true integration testing to GWT.&lt;/p&gt;
      &lt;h3&gt;Highlighted Features&lt;/h3&gt;
      &lt;dl&gt;
      &lt;dt&gt;
      &lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; Run GWT integration tests in Arquillian containers&lt;/dt&gt;
      	&lt;dd&gt;&lt;p&gt;This means that GWT integration tests can break free and execute in the actual runtime container instead of being tied to GWT’s embedded Jetty server.&lt;/p&gt;&lt;/dd&gt;
      &lt;/dl&gt;&lt;dl&gt;
      &lt;dt&gt;
      &lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; Combining client-side and in-container tests&lt;/dt&gt;
      	&lt;dd&gt;&lt;p&gt;It is possible to combine GWT client-side and standard in-container tests in the same test class. This allows to test features without having to worry about the client-server bridge and should pave the way for future support of Arquillian Warp and Drone in GWT integration tests.&lt;/p&gt;&lt;/dd&gt;
      &lt;/dl&gt;&lt;h3&gt;Getting Started&lt;/h3&gt;
      &lt;p&gt;To start using the Arquillian GWT extension just add the following dependency to your project:&lt;/p&gt;
      &lt;div class=&quot;filename&quot;&gt;pom.xml&lt;/div&gt;
      &lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;&amp;lt;dependency&amp;gt;
          &amp;lt;groupId&amp;gt;org.jboss.arquillian.extension&amp;lt;/groupId&amp;gt;
          &amp;lt;artifactId&amp;gt;arquillian-gwt&amp;lt;/artifactId&amp;gt;
          &amp;lt;version&amp;gt;1.0.0.Alpha1&amp;lt;/version&amp;gt;
      &amp;lt;/dependency&amp;gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;h3&gt;Writing Arquillian GWT tests&lt;/h3&gt;
      &lt;p&gt;To run a test method as a GWT integration test either annotate the test class or test method with &lt;code&gt;@RunAsGwtClient&lt;/code&gt; and specifiy the GWT module. If you annotate the test class all test methods in that class will run as GWT integration tests.&lt;/p&gt;
      &lt;div class=&quot;filename&quot;&gt;MyTestClass.java&lt;/div&gt;
      &lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;
      @RunWith(Arquillian.class)
      public class MyTestClass {&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;  @Test 
        @RunAsGwtClient(moduleName = &quot;org.myapp.MyGwtModule&quot;)
        public void myGwtTest() {&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;  }
      }&lt;/code&gt;&lt;/pre&gt;
      &lt;p&gt;To help packaging your app for the test deployment Arquillian GWT provides a simple utility called &lt;code&gt;GwtArchive&lt;/code&gt;. The next version of Arquillian GWT will automatically enhance the used &lt;code&gt;WebArchive&lt;/code&gt;. So, you won’t need to use this utility in the future. Here’s a complete example:&lt;/p&gt;
      &lt;div class=&quot;filename&quot;&gt;GreeterRpcTest.java&lt;/div&gt;
      &lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;
      @RunWith(Arquillian.class)
      public class GreeterRpcTest extends ArquillianGwtTestCase {&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;  @Deployment
        public static WebArchive createDeployment() {
          return GwtArchive.get()
            .addClass(Greeter.class)
            .addClass(GreetingService.class)
            .addClass(GreetingServiceImpl.class);
        }&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;  @Test
        @RunAsGwtClient(moduleName = &quot;org.myapp.MyGwtModule&quot;)
        public void testGreetingService() {
          GreetingServiceAsync greetingService = GWT.create(GreetingService.class);
          greetingService.greetServer(&quot;Hello!&quot;, new AsyncCallback&amp;lt;String&amp;gt;() {
            @Override
            public void onFailure(Throwable caught) {
              Assert.fail(&quot;Request failure: &quot; + caught.getMessage());
            }&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;      @Override
            public void onSuccess(String result) {
              assertEquals(&quot;Received invalid response from Server&quot;, &quot;Welcome!&quot;, result);
              finishTest();
            }
          });
          delayTestFinish(5000);
        }
      }&lt;/code&gt;&lt;/pre&gt;
      &lt;p&gt;Note that you will only need to extend &lt;code&gt;ArquillianGwtTestCase&lt;/code&gt; if you want to inherit GWT’s asynchronous testing methods (&lt;code&gt;finishTest&lt;/code&gt; and &lt;code&gt;delayTestFinish&lt;/code&gt;).&lt;/p&gt;
      &lt;p&gt;We look forward to your feedback on this release in the &lt;a href=&quot;http://community.jboss.org/en/arquillian&quot;&gt;community forums&lt;/a&gt;!&lt;/p&gt;
      &lt;h3&gt;What is Arquillian?&lt;/h3&gt;
      &lt;p&gt;Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop a comprehensive suite of tests from the convenience of your IDE and run them in any IDE, build tool or continuous integration environment.&lt;/p&gt;
      &lt;h3&gt;Release details&lt;/h3&gt;
      &lt;table class=&quot;table table-bordered table-striped&quot;&gt;&lt;tbody&gt;
      &lt;tr&gt;
      &lt;th&gt;Component&lt;/th&gt;
            &lt;td&gt;
              &lt;a href=&quot;http://arquillian.org/modules/gwt-extension/&quot;&gt;Arquillian GWT Testing extension&lt;/a&gt;
            &lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Version&lt;/th&gt;
            &lt;td&gt;
              1.0.0.Alpha1
              &lt;span class=&quot;label tag&quot;&gt;
                &lt;a href=&quot;https://api.github.com/repos/arquillian/arquillian-extension-gwt/commits/91f792066d3d9660ec8f66864241a7d5cac2cfcd&quot;&gt;view tag&lt;/a&gt;
              &lt;/span&gt;
            &lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Release date&lt;/th&gt;
            &lt;td&gt;2013-02-23&lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Released by&lt;/th&gt;
            &lt;td&gt;Christian Sadilek&lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Compiled against&lt;/th&gt;
            &lt;td&gt;
              &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;Arquillian Core – 1.0.2.Final&lt;/li&gt;
              &lt;/ul&gt;
      &lt;/td&gt;
          &lt;/tr&gt;
      &lt;/tbody&gt;&lt;/table&gt;&lt;h3&gt;
        Published artifacts
        &lt;small&gt;org.jboss.arquillian.extension&lt;/small&gt;
      &lt;/h3&gt;
      &lt;ul&gt;
      &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-gwt
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-gwt/1.0.0.Alpha1/arquillian-gwt-1.0.0.Alpha1.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-gwt/1.0.0.Alpha1/arquillian-gwt-1.0.0.Alpha1.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
      &lt;/ul&gt;&lt;h3&gt;
        Release notes and resolved issues
        &lt;small&gt;1&lt;/small&gt;
      &lt;/h3&gt;
      &lt;p&gt;Initial prototype release&lt;/p&gt;
      &lt;p&gt;
        Thanks to the following list of contributors:
        &lt;a href=&quot;https://community.jboss.org/people/csa&quot;&gt;Christian Sadilek&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/kpiwko&quot;&gt;Karel Piwko&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/aslak&quot;&gt;Aslak Knutsen&lt;/a&gt;
      &lt;/p&gt;
    </content>
  </entry>
  <entry>
    <id>http://arquillian.org/blog/2013/02/16/devconf-hackfest/</id>
    <title>Hackfest: DevConf 2013, Czech Republic, Brno</title>
    <updated>2013-02-17T00:00:00+00:00</updated>
    <link href="http://arquillian.org/blog/2013/02/16/devconf-hackfest/" rel="alternate" type="text/html" />
    <category scheme="http://arquillian.org/blog/tags" term="hack-idea" />
    <category scheme="http://arquillian.org/blog/tags" term="2013" />
    <category scheme="http://arquillian.org/blog/tags" term="nonrelease" />
    <category scheme="http://arquillian.org/blog" term="arquillian" />
    <summary>
      In about a weeks time DevConf 2013 in Brno, Czech Republic will kick of for the 5. year in a row.
      This year, as last, we will take part in the HackFest spanning from Saturday 23. to Sunday 24. of February. And for the eager hackers even Monday 25. February.
      Introducing the candidates
      Without any more fuzz, let&#8217;s jump straight into some of the ideas we have for this hackfest. Of course, you&#8217;re free to bring your own as well!
      Gradle Container Controller
      One of the hacks that was started during the Devoxx 2012 Hackergarten: was the Arquillian Gradle integration. The basic idea is to......
    </summary>
    <content type="html">
      &lt;p&gt;In about a weeks time DevConf 2013 in Brno, Czech Republic will kick of for the 5. year in a row.&lt;br&gt;
      This year, as last, we will take part in the HackFest spanning from Saturday 23. to Sunday 24. of February. And for the eager hackers even Monday 25. February.&lt;/p&gt;
      &lt;h3&gt;Introducing the candidates&lt;/h3&gt;
      &lt;p&gt;Without any more fuzz, let’s jump straight into some of the ideas we have for this hackfest. Of course, you’re free to bring your own as well!&lt;/p&gt;
      &lt;h4&gt;Gradle Container Controller&lt;/h4&gt;
      &lt;p&gt;One of the hacks that was started during the &lt;a href=&quot;http://arquillian.org/blog/2012/11/15/devoxx-2012-hackergarten-overdrive/&quot;&gt;Devoxx 2012 Hackergarten&lt;/a&gt;: was the Arquillian Gradle integration. The basic idea is to leverage Arquillian’s Container support to control Containers and Deployments within the Gradle build system, much like we do for Maven via the Arquillian Maven Plugin. This in particular is a very interesting integration since it opens up Arquillian to a new type of usage, as a pure Container Controller.&lt;/p&gt;
      &lt;p&gt;Why would Gradle use Arquillian for this? It’s a simple matter of focus. Gradle care about build systems and don’t have the resources to implement support for all the Containers. Arquillian on the other hand care very much of the Containers and already support much more than Gradle currently do in this area. Perfect combination of two tools with different capabilities.&lt;/p&gt;
      &lt;p&gt;You can read up on some of the &lt;a href=&quot;https://community.jboss.org/thread/213638&quot;&gt;discussions&lt;/a&gt; and see look at the early &lt;a href=&quot;https://github.com/aslakknutsen/arquillian-gradle-plugin&quot;&gt;prototype&lt;/a&gt;.&lt;/p&gt;
      &lt;p&gt;The end goal would be to match as much as possible of the &lt;a href=&quot;https://github.com/gradle/gradle/blob/master/design-docs/deploying-applications-for-testing.md&quot;&gt;Gradle Design docs&lt;/a&gt; and have Arquillian be the internal runner.&lt;/p&gt;
      &lt;h4&gt;Arquillian Forge Plugin – Extensions&lt;/h4&gt;
      &lt;p&gt;&lt;a href=&quot;http://forge.jboss.org/&quot;&gt;JBoss Forge&lt;/a&gt; is best described by them selves.&lt;/p&gt;
      &lt;blockquote&gt;
      &lt;p&gt;A core framework and next-generation shell for tooling and automation at a command line level; with APIs for integration in IDEs, extending built in functionality with plugins, and scripting for automating repetitive tasks, Forge is a tool every open-source developer should be looking at.&lt;/p&gt;
      &lt;/blockquote&gt;
      &lt;blockquote&gt;
      &lt;p&gt;A core framework for rapid-application development in a standards-based environment. Plugins / incremental project enhancement for Java EE, and more.&lt;/p&gt;
      &lt;/blockquote&gt;
      &lt;p&gt;There exists already an &lt;a href=&quot;https://github.com/forge/plugin-arquillian&quot;&gt;Arquillian Plugin&lt;/a&gt; for Forge which handles setup of Arquillian Core and Container dependencies, Container configuration and simple TestClass generation.&lt;/p&gt;
      &lt;p&gt;But the missing bit is set up and support for the Arquillian Extensions. This hack should be able to answer, by using Forge, questions like:&lt;/p&gt;
      &lt;ul&gt;
      &lt;li&gt;How do I setup Drone, Persistence, Transactions?&lt;/li&gt;
      	&lt;li&gt;How do I configure Drone?&lt;/li&gt;
      	&lt;li&gt;Which configuration options does Persistence support?&lt;/li&gt;
      &lt;/ul&gt;&lt;h4&gt;Arquillian Warp&lt;/h4&gt;
      &lt;p&gt;&lt;a href=&quot;https://github.com/arquillian/arquillian-extension-warp&quot;&gt;Arquillian Warp&lt;/a&gt; fills the void between client-side and server-side testing. Using Warp, you can initiate an HTTP request using a client-side testing tool such as WebDriver and, in the same request cycle, execute in-container server-side tests. This powerful combination lets you cover integration across client and server.&lt;/p&gt;
      &lt;h5&gt;SeamTest&lt;/h5&gt;
      &lt;p&gt;Warp leverages any HTTP client (such as httpclient or WebDriver), to produce testable requests and provides server-side hooks which allows you to execute arbitrary logic in any part of the request lifecycle. However the fact that developer needs to provide HTTP request in order to test is limiting – sometimes you need to test using any request type: such as conversations. The goal is designing an API and implementation for testing sequence of requests without providing an HTTP client logic. (This extension should provide a migration layer for &lt;a href=&quot;http://docs.jboss.org/seam/2.0.1.GA/reference/en/html/testing.html&quot;&gt;SeamTest&lt;/a&gt; )&lt;/p&gt;
      &lt;h5&gt;CDI events&lt;/h5&gt;
      &lt;p&gt;Warp plays nicely with IoC principles – your test does not need to tightly couple with container, it will bring all the necessary dependencies to the test. In Java EE, Warp leverages CDI to inject user-defined beans into the test. Warp has the potential to use much more from the concepts brought by CDI: observe CDI events, produce beans or intercept calls to existing beans. The idea is to provide hooks which would make testing of client request interaction with CDI beans as easy as defining Warp’s lifecycle hooks.&lt;/p&gt;
      &lt;h4&gt;Arquillian Google Web Toolkit&lt;/h4&gt;
      &lt;p&gt;The &lt;a href=&quot;https://developers.google.com/web-toolkit/&quot; title=&quot;GWT&quot;&gt;Google Web Toolkit&lt;/a&gt; is a development tool for building complex browser-based applications written in pure Java. The new Arquillian GWT extension brings true integration testing to GWT. This means that GWT integration tests can break free and execute in the actual runtime container instead of being tied to GWT’s embedded Jetty server. Further it is now possible to combine GWT client-side and standard in-container tests in the same test class. This allows to test features without having to worry about the client-server bridge and should pave the way for future support of Arquillian Warp and Drone in GWT integration tests.&lt;/p&gt;
      &lt;h5&gt;Remove the need for GwtArchive&lt;/h5&gt;
      &lt;p&gt;Currently the Arquillian GWT extension uses a custom utility (GwtArchive) to enrich WebArchives for GWT deployments. This causes the API for Arquillian GWT tests to deviate from standard Arquillian tests. It should be possible to automatically enhance the deployment archive to include all dependencies and configurations that are relevant to the GWT deployment, possibly by leveraging an Arquillian packaging SPI’s. As a result of this, GWT integration tests will use the same API as all other Arquillian tests.&lt;/p&gt;
      &lt;h5&gt;Leverage Arquillian Warp in GWT integration tests&lt;/h5&gt;
      &lt;p&gt;Warp enables tests to assert on both client-side and server-side logic and is an extremely useful tool for writing compact integration tests. The focus will be on brainstorming to come up with a battle plan for how Warp could be integrated with Arquillian GWT.&lt;/p&gt;
      &lt;h4&gt;Arquillian Distribution Extension&lt;/h4&gt;
      &lt;p&gt;This is probably the hardest and largest of them all. But even more interesting, right?. As Arquillian work today it will allow you to interact with local and remote Containers. But the big assumption with Remote Containers is that the Container is already up and running and we only need to connect to it. As we’re growing out to support more and more advanced use cases we’re starting to see the need for the ability to control and distribute infrastructure. Infrastructure being servers, containers or clouds.&lt;/p&gt;
      &lt;p&gt;A very brief description of what this extension should do:&lt;/p&gt;
      &lt;ul&gt;
      &lt;li&gt;Install Container A on Server B (copy source and configure)&lt;/li&gt;
      	&lt;li&gt;Install Container X on Server Y (copy source and configure)&lt;/li&gt;
      	&lt;li&gt;Configure Arquillian to use Container A on Server B&lt;/li&gt;
      	&lt;li&gt;Configure Arquillian to use Container X on Server Y&lt;/li&gt;
      &lt;/ul&gt;&lt;p&gt;From here on Arquillian Test takes over and run tests as described by the Test Suite. Next steps would be:&lt;/p&gt;
      &lt;ul&gt;
      &lt;li&gt;Uninstall Container X on Server Y&lt;/li&gt;
      	&lt;li&gt;Uninstall Container A on Server B&lt;/li&gt;
      &lt;/ul&gt;&lt;p&gt;This is particularly useful for the upcoming Performance Extension to allow it to install a full environment, including clients and targets, for performance testing.&lt;/p&gt;
      &lt;h3&gt;What is Arquillian?&lt;/h3&gt;
      &lt;p&gt;Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application’s behavior rather than managing the runtime. Using Arquillian, you can develop a comprehensive suite of tests from the convenience of your IDE and run them in any IDE, build tool or continuous integration environment.&lt;/p&gt;
      &lt;h4&gt;When and where are we hacking?&lt;/h4&gt;
      &lt;p&gt;We are going to use the free Hackfest at DevConf 2013 as an opportunity to put our heads together to make progress on these ideas. Here are the details:&lt;/p&gt;
      &lt;ul&gt;
      &lt;li&gt;When: Saturday February 23 12:30 – 18:30 CET, Sunday February 24 09:00 – 18:30 CET, Monday February 25 09:00 – 17:00 CET&lt;/li&gt;
      	&lt;li&gt;Where: Hackfest at DevConf 2013 (Masaryk University, Faculty of Informatics, Brno, Czech Republic)&lt;/li&gt;
      	&lt;li&gt;Conference URL: &lt;a href=&quot;http://devconf.cz/&quot;&gt;http://devconf.cz/&lt;/a&gt;
      &lt;/li&gt;
      	&lt;li&gt;Hashtag: &lt;a href=&quot;https://twitter.com/search/%23hackdevconf&quot;&gt;#hackdevconf&lt;/a&gt; and &lt;a href=&quot;https://twitter.com/search/%23arquillian&quot;&gt;#arquillian&lt;/a&gt;
      &lt;/li&gt;
      	&lt;li&gt;Lanyrd: &lt;a href=&quot;http://lanyrd.com/2013/hackdevconf/&quot;&gt;http://lanyrd.com/2013/hackdevconf/&lt;/a&gt;
      &lt;/li&gt;
      	&lt;li&gt;IRC: #arquillian on Freenode&lt;/li&gt;
      &lt;/ul&gt;&lt;p&gt;Of course, anyone is welcome to hack on these ideas at anytime from anywhere. This is open source!&lt;/p&gt;
      &lt;h4&gt;Who will be there hacking?&lt;/h4&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;a href=&quot;https://github.com/kpiwko&quot;&gt;Karel Piwko&lt;/a&gt; (Arquillian Drone Lead)&lt;/li&gt;
      	&lt;li&gt;
      &lt;a href=&quot;https://github.com/lfryc&quot;&gt;Lukáš Fryč&lt;/a&gt; (Arquillian Warp &amp;amp; Graphene Lead)&lt;/li&gt;
      	&lt;li&gt;
      &lt;a href=&quot;https://github.com/mojavelinux&quot;&gt;Dan Allen&lt;/a&gt; (Arquillian team member)&lt;/li&gt;
      	&lt;li&gt;
      &lt;a href=&quot;http://github.com/aslakknutsen&quot;&gt;Aslak Knutsen&lt;/a&gt; (Arquillian Lead)&lt;/li&gt;
      	&lt;li&gt;&lt;strong&gt;You&lt;/strong&gt;&lt;/li&gt;
      &lt;/ul&gt;&lt;p&gt;&lt;strong&gt;Happy hacking!&lt;/strong&gt;&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <id>http://arquillian.org/blog/2013/01/31/arquillian-extension-portal-1-0-0-Beta1/</id>
    <title>Arquillian Portal Extension 1.0.0.Beta1 Released</title>
    <updated>2013-02-01T00:00:00+00:00</updated>
    <link href="http://arquillian.org/blog/2013/01/31/arquillian-extension-portal-1-0-0-Beta1/" rel="alternate" type="text/html" />
    <category scheme="http://arquillian.org/blog/tags" term="release" />
    <category scheme="http://arquillian.org/blog/tags" term="extension" />
    <category scheme="http://arquillian.org/blog/tags" term="portal" />
    <category scheme="http://arquillian.org/blog" term="arquillian" />
    <summary>
      The Arquillian team is proud to announce the 1.0.0.Beta1 release of the Arquillian Portal Extension component!
      Highlighted Features
      
      	 Shrinkwrap Archive type for portlets
      	We now have PortletArchive for creating Shrinkwrap archives for portlets. (read more)
      
      
      	 Helpers for creating portlet.xml
      	Within PortletArchive there are some simple helpers for creating the contents of portlet.xml. (read more)
      
      Shrinkwrap Archive type for portlets
      We can now use PortletArchive instead of WebArchive when we&#8217;re creating micro deployments for testing a portlet. In it includes methods for setting the content of portlet.xml without needing to specify the path, in a similar manner that WebArchive provides setWebXML() methods.
      Helpers for creating portlet.xml
      PortletArchive also......
    </summary>
    <content type="html">
      &lt;p&gt;The Arquillian team is proud to announce the &lt;em&gt;1.0.0.Beta1&lt;/em&gt; release of the &lt;em&gt;Arquillian Portal Extension&lt;/em&gt; component!&lt;/p&gt;
      &lt;h3&gt;Highlighted Features&lt;/h3&gt;
      &lt;dl&gt;
      &lt;dt&gt;
      &lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; Shrinkwrap Archive type for portlets&lt;/dt&gt;
      	&lt;dd&gt;&lt;p&gt;We now have &lt;code&gt;PortletArchive&lt;/code&gt; for creating Shrinkwrap archives for portlets. (&lt;a href=&quot;#portlet-archive&quot;&gt;read more&lt;/a&gt;)&lt;/p&gt;&lt;/dd&gt;
      &lt;/dl&gt;&lt;dl&gt;
      &lt;dt&gt;
      &lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; Helpers for creating portlet.xml&lt;/dt&gt;
      	&lt;dd&gt;&lt;p&gt;Within &lt;code&gt;PortletArchive&lt;/code&gt; there are some simple helpers for creating the contents of portlet.xml. (&lt;a href=&quot;#portlet-descriptor-helper&quot;&gt;read more&lt;/a&gt;)&lt;/p&gt;&lt;/dd&gt;
      &lt;/dl&gt;&lt;h3 id=&quot;portlet-archive&quot;&gt;Shrinkwrap Archive type for portlets&lt;/h3&gt;
      &lt;p&gt;We can now use &lt;code&gt;PortletArchive&lt;/code&gt; instead of &lt;code&gt;WebArchive&lt;/code&gt; when we’re creating micro deployments for testing a portlet. In it includes methods for setting the content of portlet.xml without needing to specify the path, in a similar manner that &lt;code&gt;WebArchive&lt;/code&gt; provides setWebXML() methods.&lt;/p&gt;
      &lt;h3 id=&quot;portlet-descriptor-helper&quot;&gt;Helpers for creating portlet.xml&lt;/h3&gt;
      &lt;p&gt;&lt;code&gt;PortletArchive&lt;/code&gt; also adds some nice helpers for creating &lt;code&gt;GenericPortlet&lt;/code&gt; or &lt;code&gt;GenericFacesPortlet&lt;/code&gt; portlet definitions within portlet.xml. A &lt;code&gt;GenericPortlet&lt;/code&gt; can be added to portlet.xml by:&lt;/p&gt;
      &lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;Shrinkwrap.create(PortletArchive.class)
      	.createSimplePortlet(MyPortletClass.class);&lt;/code&gt;&lt;/pre&gt;
      &lt;p&gt;And adding a portlet for JSF is:&lt;/p&gt;
      &lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;Shrinkwrap.create(PortletArchive.class)
      	.createFacesPortlet(&quot;portletName&quot;, &quot;Portlet Title&quot;, &quot;index.xhtml&quot;);&lt;/code&gt;&lt;/pre&gt;
      &lt;p&gt;For examples on how to use these extensions with their respective portal containers, you can take a look at the &lt;a href=&quot;https://github.com/portletbridge/portletbridge/tree/master/testsuites&quot;&gt;testsuite&lt;/a&gt; of Portlet Bridge.&lt;/p&gt;
      &lt;p&gt;We look forward to hearing your feedback about this release in the &lt;a href=&quot;http://community.jboss.org/en/arquillian&quot;&gt;community forums&lt;/a&gt;!&lt;/p&gt;
      &lt;h3&gt;What is Arquillian?&lt;/h3&gt;
      &lt;p&gt;Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop a comprehensive suite of tests from the convenience of your IDE and run them in any IDE, build tool or continuous integration environment.&lt;/p&gt;
      &lt;h3&gt;Release details&lt;/h3&gt;
      &lt;table class=&quot;table table-bordered table-striped&quot;&gt;&lt;tbody&gt;
      &lt;tr&gt;
      &lt;th&gt;Component&lt;/th&gt;
            &lt;td&gt;
              &lt;a href=&quot;http://arquillian.org/modules/portal-extension/&quot;&gt;Arquillian Portal Extension&lt;/a&gt;
            &lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Version&lt;/th&gt;
            &lt;td&gt;
              1.0.0.Beta1
              &lt;span class=&quot;label tag&quot;&gt;
                &lt;a href=&quot;https://api.github.com/repos/arquillian/arquillian-extension-portal/commits/2ae05012ae25887d4369e0f27263438a03c57df1&quot;&gt;view tag&lt;/a&gt;
              &lt;/span&gt;
            &lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Release date&lt;/th&gt;
            &lt;td&gt;2013-01-31&lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Released by&lt;/th&gt;
            &lt;td&gt;Ken Finnigan&lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Compiled against&lt;/th&gt;
            &lt;td&gt;
              &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;Arquillian Core – 1.0.3.Final&lt;/li&gt;
              &lt;/ul&gt;
      &lt;/td&gt;
          &lt;/tr&gt;
      &lt;/tbody&gt;&lt;/table&gt;&lt;h3&gt;
        Published artifacts
        &lt;small&gt;org.jboss.arquillian.extension&lt;/small&gt;
      &lt;/h3&gt;
      &lt;ul&gt;
      &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-portal
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-portal/1.0.0.Beta1/arquillian-portal-1.0.0.Beta1.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-portal/1.0.0.Beta1/arquillian-portal-1.0.0.Beta1.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-portal-api
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-portal-api/1.0.0.Beta1/arquillian-portal-api-1.0.0.Beta1.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-portal-api/1.0.0.Beta1/arquillian-portal-api-1.0.0.Beta1.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-portal-impl
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-portal-impl/1.0.0.Beta1/arquillian-portal-impl-1.0.0.Beta1.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-portal-impl/1.0.0.Beta1/arquillian-portal-impl-1.0.0.Beta1.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-portal-shrinkwrap-api
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-portal-shrinkwrap-api/1.0.0.Beta1/arquillian-portal-shrinkwrap-api-1.0.0.Beta1.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-portal-shrinkwrap-api/1.0.0.Beta1/arquillian-portal-shrinkwrap-api-1.0.0.Beta1.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-portal-shrinkwrap-impl
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-portal-shrinkwrap-impl/1.0.0.Beta1/arquillian-portal-shrinkwrap-impl-1.0.0.Beta1.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-portal-shrinkwrap-impl/1.0.0.Beta1/arquillian-portal-shrinkwrap-impl-1.0.0.Beta1.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-portal-spi
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-portal-spi/1.0.0.Beta1/arquillian-portal-spi-1.0.0.Beta1.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-portal-spi/1.0.0.Beta1/arquillian-portal-spi-1.0.0.Beta1.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
      &lt;/ul&gt;&lt;h3&gt;
        Release notes and resolved issues
        &lt;small&gt;2&lt;/small&gt;
      &lt;/h3&gt;
      &lt;p&gt;&lt;/p&gt;
      &lt;dl&gt;
      &lt;dt&gt;Feature Request&lt;/dt&gt;
        &lt;dd&gt;
          &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1279&quot;&gt;ARQ-1279&lt;/a&gt; -         Create PortletArchive as Shrinkwrap archive type for portlets&lt;/li&gt;
          &lt;/ul&gt;
      &lt;/dd&gt;
      &lt;/dl&gt;&lt;p&gt;
        Thanks to the following list of contributors:
        &lt;a href=&quot;https://community.jboss.org/people/kenfinni&quot;&gt;Ken Finnigan&lt;/a&gt;
      &lt;/p&gt;
    </content>
  </entry>
  <entry>
    <id>http://arquillian.org/blog/2013/01/24/arquillian-extension-drone-1-1-1-Final/</id>
    <title>Arquillian Drone Extension 1.1.1.Final Released</title>
    <updated>2013-01-25T00:00:00+00:00</updated>
    <link href="http://arquillian.org/blog/2013/01/24/arquillian-extension-drone-1-1-1-Final/" rel="alternate" type="text/html" />
    <category scheme="http://arquillian.org/blog/tags" term="release" />
    <category scheme="http://arquillian.org/blog/tags" term="extension" />
    <category scheme="http://arquillian.org/blog/tags" term="drone" />
    <category scheme="http://arquillian.org/blog/tags" term="jbosscentral" />
    <category scheme="http://arquillian.org/blog" term="arquillian" />
    <summary>
      The Arquillian team is proud to announce the 1.1.1.Final release of the Arquillian Drone Extension component!
      
      What is Arquillian?
      Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop a comprehensive suite of tests from the convenience of your IDE and run them in any IDE, build tool or continuous integration environment.
      Release details
      
        
          
           ......
    </summary>
    <content type="html">
      &lt;p&gt;The Arquillian team is proud to announce the &lt;em&gt;1.1.1.Final&lt;/em&gt; release of the &lt;em&gt;Arquillian Drone Extension&lt;/em&gt; component!&lt;/p&gt;
      
      &lt;h3&gt;What is Arquillian?&lt;/h3&gt;
      &lt;p&gt;Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop a comprehensive suite of tests from the convenience of your IDE and run them in any IDE, build tool or continuous integration environment.&lt;/p&gt;
      &lt;h3&gt;Release details&lt;/h3&gt;
      &lt;table class=&quot;table table-bordered table-striped&quot;&gt;&lt;tbody&gt;
      &lt;tr&gt;
      &lt;th&gt;Component&lt;/th&gt;
            &lt;td&gt;
              &lt;a href=&quot;http://arquillian.org/modules/drone-extension/&quot;&gt;Arquillian Drone Extension&lt;/a&gt;
            &lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Version&lt;/th&gt;
            &lt;td&gt;
              1.1.1.Final
              &lt;span class=&quot;label tag&quot;&gt;
                &lt;a href=&quot;https://api.github.com/repos/arquillian/arquillian-extension-drone/commits/338c33cb570e2011c6f617e12978fe998e712fe7&quot;&gt;view tag&lt;/a&gt;
              &lt;/span&gt;
            &lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Release date&lt;/th&gt;
            &lt;td&gt;2013-01-24&lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Released by&lt;/th&gt;
            &lt;td&gt;Lukas Fryc&lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Compiled against&lt;/th&gt;
            &lt;td&gt;
              &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;Arquillian Core – 1.0.3.Final&lt;/li&gt;
              &lt;/ul&gt;
      &lt;/td&gt;
          &lt;/tr&gt;
      &lt;/tbody&gt;&lt;/table&gt;&lt;h3&gt;
        Published artifacts
        &lt;small&gt;org.jboss.arquillian.extension&lt;/small&gt;
      &lt;/h3&gt;
      &lt;ul&gt;
      &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-drone-api
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-api/1.1.1.Final/arquillian-drone-api-1.1.1.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-api/1.1.1.Final/arquillian-drone-api-1.1.1.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-drone-bom
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-bom/1.1.1.Final/arquillian-drone-bom-1.1.1.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-drone-configuration
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-configuration/1.1.1.Final/arquillian-drone-configuration-1.1.1.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-configuration/1.1.1.Final/arquillian-drone-configuration-1.1.1.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-drone-impl
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-impl/1.1.1.Final/arquillian-drone-impl-1.1.1.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-impl/1.1.1.Final/arquillian-drone-impl-1.1.1.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-drone-selenium
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-selenium/1.1.1.Final/arquillian-drone-selenium-1.1.1.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-selenium/1.1.1.Final/arquillian-drone-selenium-1.1.1.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-drone-selenium-depchain
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-selenium-depchain/1.1.1.Final/arquillian-drone-selenium-depchain-1.1.1.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-drone-selenium-server
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-selenium-server/1.1.1.Final/arquillian-drone-selenium-server-1.1.1.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-selenium-server/1.1.1.Final/arquillian-drone-selenium-server-1.1.1.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-drone-spi
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-spi/1.1.1.Final/arquillian-drone-spi-1.1.1.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-spi/1.1.1.Final/arquillian-drone-spi-1.1.1.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-drone-webdriver
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-webdriver/1.1.1.Final/arquillian-drone-webdriver-1.1.1.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-webdriver/1.1.1.Final/arquillian-drone-webdriver-1.1.1.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-drone-webdriver-depchain
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-webdriver-depchain/1.1.1.Final/arquillian-drone-webdriver-depchain-1.1.1.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
      &lt;/ul&gt;&lt;h3&gt;
        Release notes and resolved issues
        &lt;small&gt;7&lt;/small&gt;
      &lt;/h3&gt;
      &lt;p&gt;Bug fix release for Arquillian Drone 1.1.0.Final&lt;/p&gt;
      &lt;dl&gt;
      &lt;dt&gt;Bug&lt;/dt&gt;
        &lt;dd&gt;
          &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1251&quot;&gt;ARQ-1251&lt;/a&gt; -         Arquillian Drone is unable to instantiate Firefox driver if acceptSslCerts, webStorageEnabled, loggingPrefs properties are used in arquillian.xml&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1258&quot;&gt;ARQ-1258&lt;/a&gt; -         Allow Chrome switches to contain spaces&lt;/li&gt;
          &lt;/ul&gt;
      &lt;/dd&gt;
      &lt;/dl&gt;&lt;dl&gt;
      &lt;dt&gt;Component  Upgrade&lt;/dt&gt;
        &lt;dd&gt;
          &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1252&quot;&gt;ARQ-1252&lt;/a&gt; -         Upgrade to Selenium 2.28.0 and use Selenium BOM&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1280&quot;&gt;ARQ-1280&lt;/a&gt; -         Update selenium to 2.29.0&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1281&quot;&gt;ARQ-1281&lt;/a&gt; -         Update Arquillian Core in Drone to 1.0.3.Final&lt;/li&gt;
          &lt;/ul&gt;
      &lt;/dd&gt;
      &lt;/dl&gt;&lt;dl&gt;
      &lt;dt&gt;Task&lt;/dt&gt;
        &lt;dd&gt;
          &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-952&quot;&gt;ARQ-952&lt;/a&gt; -         Avoid heavy-weight tests for Drone functional testing&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1268&quot;&gt;ARQ-1268&lt;/a&gt; -         Prepare Drone 1.1.1.Final release&lt;/li&gt;
          &lt;/ul&gt;
      &lt;/dd&gt;
      &lt;/dl&gt;&lt;p&gt;
        Thanks to the following list of contributors:
        &lt;a href=&quot;https://community.jboss.org/people/kpiwko&quot;&gt;Karel Piwko&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/trepel&quot;&gt;Tomas Repel&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/lfryc&quot;&gt;Lukas Fryc&lt;/a&gt;
      &lt;/p&gt;
    </content>
  </entry>
  <entry>
    <id>http://arquillian.org/blog/2013/01/15/arquillian-graphene-2-0-0-Alpha3/</id>
    <title>Graphene 2.0.0.Alpha3 Released</title>
    <updated>2013-01-16T00:00:00+00:00</updated>
    <link href="http://arquillian.org/blog/2013/01/15/arquillian-graphene-2-0-0-Alpha3/" rel="alternate" type="text/html" />
    <category scheme="http://arquillian.org/blog/tags" term="release" />
    <category scheme="http://arquillian.org/blog/tags" term="extension" />
    <category scheme="http://arquillian.org/blog/tags" term="graphene" />
    <category scheme="http://arquillian.org/blog" term="arquillian" />
    <summary>
      The Arquillian team is proud to announce the 2.0.0.Alpha3 release of the Graphene component!
      Highlighted Features
      
      	 jQuery Selectors
      	Graphene gets its own @FindBy annotation and ByJQuery selector in order to fully support jQuery selectors. (read more)
      
      
      	 Injecting Selenium Resources
      	The interesting Selenium APIs (HTML5, Mobile, etc.) can be injected to the test or page fragments directly. (read more)
      
      
      	 Fluent API for Waiting
      	Waiting conditions can now be defined in a nice fluent API. (read more)
      
      
      	 Injecting List of Page Fragments
      	It&#8217;s possible to inject a list of page fragments with @FindBy List&lt;PageFragment&gt;.
      
      
      	 Page Fragment Enrichment
      	Any Arquillian resource available through @ArquillianResource can be injected into page......
    </summary>
    <content type="html">
      &lt;p&gt;The Arquillian team is proud to announce the &lt;em&gt;2.0.0.Alpha3&lt;/em&gt; release of the &lt;em&gt;Graphene&lt;/em&gt; component!&lt;/p&gt;
      &lt;h3&gt;Highlighted Features&lt;/h3&gt;
      &lt;dl&gt;
      &lt;dt&gt;
      &lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; jQuery Selectors&lt;/dt&gt;
      	&lt;dd&gt;&lt;p&gt;Graphene gets its own &lt;code&gt;@FindBy&lt;/code&gt; annotation and &lt;code&gt;ByJQuery&lt;/code&gt; selector in order to fully support &lt;em&gt;jQuery&lt;/em&gt; selectors. (&lt;a href=&quot;#jquery-selectors&quot;&gt;read more&lt;/a&gt;)&lt;/p&gt;&lt;/dd&gt;
      &lt;/dl&gt;&lt;dl&gt;
      &lt;dt&gt;
      &lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; Injecting Selenium Resources&lt;/dt&gt;
      	&lt;dd&gt;&lt;p&gt;The interesting Selenium APIs (HTML5, Mobile, etc.) can be injected to the test or page fragments directly. (&lt;a href=&quot;#injecting-selenium-resources&quot;&gt;read more&lt;/a&gt;)&lt;/p&gt;&lt;/dd&gt;
      &lt;/dl&gt;&lt;dl&gt;
      &lt;dt&gt;
      &lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; Fluent API for Waiting&lt;/dt&gt;
      	&lt;dd&gt;&lt;p&gt;Waiting conditions can now be defined in a nice fluent API. (&lt;a href=&quot;#waiting-fluent-api&quot;&gt;read more&lt;/a&gt;)&lt;/p&gt;&lt;/dd&gt;
      &lt;/dl&gt;&lt;dl&gt;
      &lt;dt&gt;
      &lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; Injecting List of Page Fragments&lt;/dt&gt;
      	&lt;dd&gt;&lt;p&gt;It’s possible to inject a list of page fragments with &lt;code&gt;@FindBy List&amp;lt;PageFragment&amp;gt;&lt;/code&gt;.&lt;/p&gt;&lt;/dd&gt;
      &lt;/dl&gt;&lt;dl&gt;
      &lt;dt&gt;
      &lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; Page Fragment Enrichment&lt;/dt&gt;
      	&lt;dd&gt;&lt;p&gt;Any Arquillian resource available through &lt;code&gt;@ArquillianResource&lt;/code&gt; can be injected into page fragments.&lt;/p&gt;&lt;/dd&gt;
      &lt;/dl&gt;&lt;h3&gt;Important Bug Fixes&lt;/h3&gt;
      &lt;dl&gt;
      &lt;dt&gt;
      &lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; XHR Request Guards&lt;/dt&gt;
      	&lt;dd&gt;&lt;p&gt;&lt;code&gt;guardXhr&lt;/code&gt; wasn’t waiting for the XHR request to fully complete. So we have improved it and now it not only waits for AJAX callback to completely finish, but it will wait for any asynchronous processing caused by that callback to finish.&lt;/p&gt;&lt;/dd&gt;
      &lt;/dl&gt;&lt;dl&gt;
      &lt;dt&gt;
      &lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; Protecting against Stale Elements&lt;/dt&gt;
      	&lt;dd&gt;&lt;p&gt;You are now completely protected against &lt;code&gt;StaleElementReferenceException&lt;/code&gt; when using page fragments and elements injected by &lt;code&gt;@FindBy&lt;/code&gt;, because operations on those elements are evaluated lazily (at the time of usage) and they are re-evaluated when they get stale.&lt;/p&gt;&lt;/dd&gt;
      &lt;/dl&gt;&lt;dl&gt;
      &lt;dt&gt;
      &lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; Refined Page Fragments&lt;/dt&gt;
      	&lt;dd&gt;&lt;p&gt;Page Fragments have received a lot of bug fixes and improvements.&lt;/p&gt;&lt;/dd&gt;
      &lt;/dl&gt;&lt;h3 id=&quot;jquery-selectors&quot;&gt;jQuery Selectors&lt;/h3&gt;
      &lt;p&gt;This feature injects a &lt;tt&gt;&lt;a href=&quot;http://jquery.com/&quot;&gt;jQuery&lt;/a&gt;&lt;/tt&gt; script to a tested page and allows Graphene to find elements using the &lt;a href=&quot;http://api.jquery.com/category/selectors/?rdfrom=http%3A%2F%2Fdocs.jquery.com%2Fmw%2Findex.php%3Ftitle%3DSelectors%26redirect%3Dno&quot;&gt;jQuery Selectors syntax&lt;/a&gt;:&lt;/p&gt;
      &lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;@FindBy(jquery = &quot;:button:visible&quot;)
      WebElement firstVisibleButton;&lt;/code&gt;&lt;/pre&gt;
      &lt;p class=&quot;info&quot;&gt;&lt;span&gt;Note that Graphene injects jQuery in &lt;a href=&quot;http://api.jquery.com/jQuery.noConflict/&quot;&gt;non-conflict way&lt;/a&gt;, so it does not affect your tested application.&lt;/span&gt;&lt;/p&gt;
      &lt;h3 id=&quot;injecting-selenium-resources&quot;&gt;Injecting Selenium Resources&lt;/h3&gt;
      &lt;p&gt;Graphene leverages a long list of advanced Selenium features and their APIs to take full control of your browser:&lt;/p&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;strong&gt;HTML5&lt;/strong&gt;
      	&lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;http://selenium.googlecode.com/svn/trunk/docs/api/java/org/openqa/selenium/html5/WebStorage.html&quot;&gt;&lt;code&gt;WebStorage&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
      		&lt;li&gt;&lt;a href=&quot;http://selenium.googlecode.com/svn/trunk/docs/api/java/org/openqa/selenium/html5/DatabaseStorage.html&quot;&gt;&lt;code&gt;DatabaseStorage&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
      		&lt;li&gt;&lt;a href=&quot;http://selenium.googlecode.com/svn/trunk/docs/api/java/org/openqa/selenium/html5/ApplicationCache.html&quot;&gt;&lt;code&gt;ApplicationCache&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
      	&lt;/ul&gt;
      &lt;/li&gt;
      	&lt;li&gt;
      &lt;strong&gt;Mobile-specific&lt;/strong&gt;
      	&lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;http://selenium.googlecode.com/svn/trunk/docs/api/java/org/openqa/selenium/TouchScreen.html&quot;&gt;&lt;code&gt;TouchScreen&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
      		&lt;li&gt;&lt;a href=&quot;http://selenium.googlecode.com/svn/trunk/docs/api/java/org/openqa/selenium/Rotatable.html&quot;&gt;&lt;code&gt;Rotatable&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
      		&lt;li&gt;&lt;a href=&quot;http://selenium.googlecode.com/svn/trunk/docs/api/java/org/openqa/selenium/html5/BrowserConnection.html&quot;&gt;&lt;code&gt;BrowserConnection&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
      		&lt;li&gt;&lt;a href=&quot;http://selenium.googlecode.com/svn/trunk/docs/api/java/org/openqa/selenium/html5/LocationContext.html&quot;&gt;&lt;code&gt;LocationContext&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
      	&lt;/ul&gt;
      &lt;/li&gt;
      	&lt;li&gt;
      &lt;strong&gt;Advanced Browser Control&lt;/strong&gt;
      	&lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;http://selenium.googlecode.com/svn/trunk/docs/api/java/org/openqa/selenium/interactions/Actions.html&quot;&gt;&lt;code&gt;Actions&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
      		&lt;li&gt;&lt;a href=&quot;http://selenium.googlecode.com/svn/trunk/docs/api/java/org/openqa/selenium/Keyboard.html&quot;&gt;&lt;code&gt;Keyboard&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
      		&lt;li&gt;&lt;a href=&quot;http://selenium.googlecode.com/svn/trunk/docs/api/java/org/openqa/selenium/Mouse.html&quot;&gt;&lt;code&gt;Mouse&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
      		&lt;li&gt;&lt;a href=&quot;http://selenium.googlecode.com/svn/trunk/docs/api/java/org/openqa/selenium/JavascriptExecutor.html&quot;&gt;&lt;code&gt;JavascriptExecutor&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
      		&lt;li&gt;&lt;a href=&quot;http://selenium.googlecode.com/svn/trunk/docs/api/java/org/openqa/selenium/TakesScreenshot.html&quot;&gt;&lt;code&gt;TakesScreenshot&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
      		&lt;li&gt;&lt;a href=&quot;http://selenium.googlecode.com/svn/trunk/docs/api/java/org/openqa/selenium/Capabilities.html&quot;&gt;&lt;code&gt;Capabilities&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
      	&lt;/ul&gt;
      &lt;/li&gt;
      &lt;/ul&gt;&lt;p&gt;You can inject those using &lt;code&gt;@ArquillianResource&lt;/code&gt; annotation:&lt;/p&gt;
      &lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;@ArquillianResource
      BrowserConnection connection;&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;@Test
      public void test() {
          connection.setOnline(false);
      }&lt;/code&gt;&lt;/pre&gt;
      &lt;h3 id=&quot;waiting-fluent-api&quot;&gt;Fluent API for Waiting&lt;/h3&gt;
      &lt;p&gt;The Alpha2 API allowed you to define a wait like this:&lt;/p&gt;
      &lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;waitAjax().until(element(button).isVisible());&lt;/code&gt;&lt;/pre&gt;
      &lt;p&gt;In order to fully support code-completion, we have decided to deprecate this API in favor of a fluent API:&lt;/p&gt;
      &lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;waitAjax().until().element(button).is().visible();&lt;/code&gt;&lt;/pre&gt;
      &lt;h3&gt;Roadmap&lt;/h3&gt;
      &lt;p&gt;This release is a significant milestone &lt;a href=&quot;https://community.jboss.org/message/777443#777443&quot;&gt;on the way to Beta1&lt;/a&gt;.&lt;/p&gt;
      &lt;h3&gt;What is Arquillian?&lt;/h3&gt;
      &lt;p&gt;Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop a comprehensive suite of tests from the convenience of your IDE and run them in any IDE, build tool or continuous integration environment.&lt;/p&gt;
      &lt;h3&gt;Release details&lt;/h3&gt;
      &lt;table class=&quot;table table-bordered table-striped&quot;&gt;&lt;tbody&gt;
      &lt;tr&gt;
      &lt;th&gt;Component&lt;/th&gt;
            &lt;td&gt;
              &lt;a href=&quot;http://arquillian.org/modules/graphene-extension/&quot;&gt;Graphene&lt;/a&gt;
            &lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Version&lt;/th&gt;
            &lt;td&gt;
              2.0.0.Alpha3
              &lt;span class=&quot;label tag&quot;&gt;
                &lt;a href=&quot;https://api.github.com/repos/arquillian/arquillian-graphene/commits/2acb19018b766656aa5afc745f2071e44448ca5d&quot;&gt;view tag&lt;/a&gt;
              &lt;/span&gt;
            &lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Release date&lt;/th&gt;
            &lt;td&gt;2013-01-08&lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Released by&lt;/th&gt;
            &lt;td&gt;Lukas Fryc&lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Compiled against&lt;/th&gt;
            &lt;td&gt;
              &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;Arquillian Core – 1.0.3.Final&lt;/li&gt;
              &lt;/ul&gt;
      &lt;/td&gt;
          &lt;/tr&gt;
      &lt;/tbody&gt;&lt;/table&gt;&lt;h3&gt;
        Published artifacts
        &lt;small&gt;org.jboss.arquillian.graphene&lt;/small&gt;
      &lt;/h3&gt;
      &lt;ul&gt;
      &lt;li&gt;
          org.jboss.arquillian.graphene
          »
          graphene-build-resources
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-build-resources/2.0.0.Alpha3/graphene-build-resources-2.0.0.Alpha3.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-build-resources/2.0.0.Alpha3/graphene-build-resources-2.0.0.Alpha3.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.graphene
          »
          graphene-component-api
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-component-api/2.0.0.Alpha3/graphene-component-api-2.0.0.Alpha3.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-component-api/2.0.0.Alpha3/graphene-component-api-2.0.0.Alpha3.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.graphene
          »
          graphene-selenium-api
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-selenium-api/2.0.0.Alpha3/graphene-selenium-api-2.0.0.Alpha3.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-selenium-api/2.0.0.Alpha3/graphene-selenium-api-2.0.0.Alpha3.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.graphene
          »
          graphene-selenium-drone
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-selenium-drone/2.0.0.Alpha3/graphene-selenium-drone-2.0.0.Alpha3.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-selenium-drone/2.0.0.Alpha3/graphene-selenium-drone-2.0.0.Alpha3.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.graphene
          »
          graphene-selenium-ftest-junit-container
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-selenium-ftest-junit-container/2.0.0.Alpha3/graphene-selenium-ftest-junit-container-2.0.0.Alpha3.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-selenium-ftest-junit-container/2.0.0.Alpha3/graphene-selenium-ftest-junit-container-2.0.0.Alpha3.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.graphene
          »
          graphene-selenium-ftest-junit-standalone
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-selenium-ftest-junit-standalone/2.0.0.Alpha3/graphene-selenium-ftest-junit-standalone-2.0.0.Alpha3.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-selenium-ftest-junit-standalone/2.0.0.Alpha3/graphene-selenium-ftest-junit-standalone-2.0.0.Alpha3.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.graphene
          »
          graphene-selenium-ftest-testng-container
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-selenium-ftest-testng-container/2.0.0.Alpha3/graphene-selenium-ftest-testng-container-2.0.0.Alpha3.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-selenium-ftest-testng-container/2.0.0.Alpha3/graphene-selenium-ftest-testng-container-2.0.0.Alpha3.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.graphene
          »
          graphene-selenium-ftest-testng-standalone
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-selenium-ftest-testng-standalone/2.0.0.Alpha3/graphene-selenium-ftest-testng-standalone-2.0.0.Alpha3.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-selenium-ftest-testng-standalone/2.0.0.Alpha3/graphene-selenium-ftest-testng-standalone-2.0.0.Alpha3.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.graphene
          »
          graphene-selenium-impl
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-selenium-impl/2.0.0.Alpha3/graphene-selenium-impl-2.0.0.Alpha3.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-selenium-impl/2.0.0.Alpha3/graphene-selenium-impl-2.0.0.Alpha3.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.graphene
          »
          graphene-webdriver-drone
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-webdriver-drone/2.0.0.Alpha3/graphene-webdriver-drone-2.0.0.Alpha3.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-webdriver-drone/2.0.0.Alpha3/graphene-webdriver-drone-2.0.0.Alpha3.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.graphene
          »
          graphene-webdriver-ftest
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-webdriver-ftest/2.0.0.Alpha3/graphene-webdriver-ftest-2.0.0.Alpha3.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-webdriver-ftest/2.0.0.Alpha3/graphene-webdriver-ftest-2.0.0.Alpha3.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.graphene
          »
          graphene-webdriver-impl
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-webdriver-impl/2.0.0.Alpha3/graphene-webdriver-impl-2.0.0.Alpha3.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-webdriver-impl/2.0.0.Alpha3/graphene-webdriver-impl-2.0.0.Alpha3.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.graphene
          »
          graphene-webdriver-spi
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-webdriver-spi/2.0.0.Alpha3/graphene-webdriver-spi-2.0.0.Alpha3.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-webdriver-spi/2.0.0.Alpha3/graphene-webdriver-spi-2.0.0.Alpha3.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
      &lt;/ul&gt;&lt;h3&gt;
        Release notes and resolved issues
        &lt;small&gt;39&lt;/small&gt;
      &lt;/h3&gt;
      &lt;p&gt;Q1/13: Page Fragment enrichment; jQuery locators&lt;/p&gt;
      &lt;dl&gt;
      &lt;dt&gt;Bug&lt;/dt&gt;
        &lt;dd&gt;
          &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-184&quot;&gt;ARQGRA-184&lt;/a&gt; -         Using driver in test listener causes NullPointerException&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-198&quot;&gt;ARQGRA-198&lt;/a&gt; -         TestFactoryClass fails on NPE&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-201&quot;&gt;ARQGRA-201&lt;/a&gt; -         Guards are not working with AndroidDriver&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-202&quot;&gt;ARQGRA-202&lt;/a&gt; -         Page Fragments: injected web elements are not found relatively to root element&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-232&quot;&gt;ARQGRA-232&lt;/a&gt; -         Enriched WebElement cannot be converted to JSON without manual unwrapping&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-233&quot;&gt;ARQGRA-233&lt;/a&gt; -         Graphene does not guard against StaleElementException&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-240&quot;&gt;ARQGRA-240&lt;/a&gt; -         Move Grapgene's FindBy from SPI to API&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-241&quot;&gt;ARQGRA-241&lt;/a&gt; -         Double quotes in jquery fails&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-242&quot;&gt;ARQGRA-242&lt;/a&gt; -         Dependency cleanup: remove Guava, commons-* and replace JBoss Logging with JUL&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-245&quot;&gt;ARQGRA-245&lt;/a&gt; -         Returning a value from Function&amp;lt;T,V&amp;gt; in WebDriverwait cannot be compiled with JDK7&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-246&quot;&gt;ARQGRA-246&lt;/a&gt; -         ByJQuery.jquerySelector with findElemens behaves differently than By&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-249&quot;&gt;ARQGRA-249&lt;/a&gt; -         Negation in fluent API is not compilable&lt;/li&gt;
          &lt;/ul&gt;
      &lt;/dd&gt;
      &lt;/dl&gt;&lt;dl&gt;
      &lt;dt&gt;Component  Upgrade&lt;/dt&gt;
        &lt;dd&gt;
          &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-217&quot;&gt;ARQGRA-217&lt;/a&gt; -         Upgrade to Arquillian Core 1.0.3.Final&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-218&quot;&gt;ARQGRA-218&lt;/a&gt; -         Upgrade to Drone 1.1.0.Final&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-248&quot;&gt;ARQGRA-248&lt;/a&gt; -         Upgrade commons-lang to 3.1&lt;/li&gt;
          &lt;/ul&gt;
      &lt;/dd&gt;
      &lt;/dl&gt;&lt;dl&gt;
      &lt;dt&gt;Enhancement&lt;/dt&gt;
        &lt;dd&gt;
          &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-195&quot;&gt;ARQGRA-195&lt;/a&gt; -         Page Fragment Enricher fail with no context to where&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-200&quot;&gt;ARQGRA-200&lt;/a&gt; -         Enhance Graphene's guards to wait until page fully updates&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-211&quot;&gt;ARQGRA-211&lt;/a&gt; -         Enhance guards to wait for request&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-228&quot;&gt;ARQGRA-228&lt;/a&gt; -         Waiting conditions improvements - string matchers, no-parameter until()&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-229&quot;&gt;ARQGRA-229&lt;/a&gt; -         Support for JavaScript interfaces defined as abstract classes&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-230&quot;&gt;ARQGRA-230&lt;/a&gt; -         Override a toString method in BooleanConditionWrapper&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-234&quot;&gt;ARQGRA-234&lt;/a&gt; -         Sizzle locators: make injected jQuery noConflict&lt;/li&gt;
          &lt;/ul&gt;
      &lt;/dd&gt;
      &lt;/dl&gt;&lt;dl&gt;
      &lt;dt&gt;Feature Request&lt;/dt&gt;
        &lt;dd&gt;
          &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-84&quot;&gt;ARQGRA-84&lt;/a&gt; -         Support Sizzle locators with Selenium 2&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-165&quot;&gt;ARQGRA-165&lt;/a&gt; -         Test enricher or resource provider for JSInterfaceFactory&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-166&quot;&gt;ARQGRA-166&lt;/a&gt; -         Enrichment of page abstractions with Graphene configuration&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-189&quot;&gt;ARQGRA-189&lt;/a&gt; -         Support @Page in Page objects&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-190&quot;&gt;ARQGRA-190&lt;/a&gt; -         Support initializing Page Objects declared with generic types&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-191&quot;&gt;ARQGRA-191&lt;/a&gt; -         Support @Drone and @ArquillianResource in Page objects&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-192&quot;&gt;ARQGRA-192&lt;/a&gt; -         Support enriching also List&amp;lt;WebElement&amp;gt; fields annotated with @FindBy&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-204&quot;&gt;ARQGRA-204&lt;/a&gt; -         Support innitialization of Page Fragments nested in other Page Fragments&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-214&quot;&gt;ARQGRA-214&lt;/a&gt; -         Support for enriching by Page Objects and Page Fragments declared as nested classes&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-215&quot;&gt;ARQGRA-215&lt;/a&gt; -         Enable injection of List&amp;lt;Page Fragment&amp;gt;&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-216&quot;&gt;ARQGRA-216&lt;/a&gt; -         Support protection from StaleElementReferenceException&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-227&quot;&gt;ARQGRA-227&lt;/a&gt; -         Support for injecting common Selenium resources: JavaScriptExecutor, Actions, Capabilities, etc.&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-239&quot;&gt;ARQGRA-239&lt;/a&gt; -         CGLib usage interferes with test execution, leading to Security exception&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-244&quot;&gt;ARQGRA-244&lt;/a&gt; -         Type parameters should be uppercase&lt;/li&gt;
          &lt;/ul&gt;
      &lt;/dd&gt;
      &lt;/dl&gt;&lt;dl&gt;
      &lt;dt&gt;Task&lt;/dt&gt;
        &lt;dd&gt;
          &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-193&quot;&gt;ARQGRA-193&lt;/a&gt; -         Make Graphene 2 Configuration be compatible with Drone configuration&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-207&quot;&gt;ARQGRA-207&lt;/a&gt; -         Page Fragments: support initialization of Page Fragments which are without @Root field&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-219&quot;&gt;ARQGRA-219&lt;/a&gt; -         Refactor whole Enricher related code&lt;/li&gt;
          &lt;/ul&gt;
      &lt;/dd&gt;
      &lt;/dl&gt;&lt;p&gt;
        Thanks to the following list of contributors:
        &lt;a href=&quot;https://github.com/papousek&quot;&gt;Jan Papoušek&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/lfryc&quot;&gt;Lukas Fryc&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/jhuska&quot;&gt;Juraj Huska&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/kpiwko&quot;&gt;Karel Piwko&lt;/a&gt;
      &lt;/p&gt;
    </content>
  </entry>
  <entry>
    <id>http://arquillian.org/blog/2013/01/15/arquillian-extension-warp-1-0-0-Alpha2/</id>
    <title>Arquillian Warp 1.0.0.Alpha2 Released</title>
    <updated>2013-01-16T00:00:00+00:00</updated>
    <link href="http://arquillian.org/blog/2013/01/15/arquillian-extension-warp-1-0-0-Alpha2/" rel="alternate" type="text/html" />
    <category scheme="http://arquillian.org/blog/tags" term="release" />
    <category scheme="http://arquillian.org/blog/tags" term="extension" />
    <category scheme="http://arquillian.org/blog/tags" term="warp" />
    <category scheme="http://arquillian.org/blog" term="arquillian" />
    <summary>
      The Arquillian team is proud to announce the 1.0.0.Alpha2 release of the Arquillian Warp component!
      It has been a pretty long road from Alpha1 to this release, focused primarily on polishing the user experience.
      So without any further ado, let’s look at the new shiny features!
      Highlighted Features
      
      	 Renaming Warp API methods
      	The API methods were renamed according to the results of our public survey. (read more)
      
      In the simplest scenario you want to inspect the first request after performing a given client activity. For this purpose, you can use a basic Warp API known from Alpha1:
      Warp&#x000A;    .initiate(Activity)&#x000A;    .inspect(Inspection);
      This......
    </summary>
    <content type="html">
      &lt;p&gt;The Arquillian team is proud to announce the &lt;em&gt;1.0.0.Alpha2&lt;/em&gt; release of the &lt;em&gt;Arquillian Warp&lt;/em&gt; component!&lt;/p&gt;
      &lt;p&gt;It has been a pretty long road from Alpha1 to this release, focused primarily on polishing the user experience.&lt;/p&gt;
      &lt;p&gt;So without any further ado, let’s look at the new shiny features!&lt;/p&gt;
      &lt;h3&gt;Highlighted Features&lt;/h3&gt;
      &lt;dl&gt;
      &lt;dt&gt;
      &lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; Renaming Warp API methods&lt;/dt&gt;
      	&lt;dd&gt;&lt;p&gt;The API methods were renamed according to the results of our public survey. (&lt;a href=&quot;#renaming-warp-api&quot;&gt;read more&lt;/a&gt;)&lt;/p&gt;&lt;/dd&gt;
      &lt;/dl&gt;&lt;p&gt;In the simplest scenario you want to inspect the first request after performing a given client activity. For this purpose, you can use a basic Warp API known from Alpha1:&lt;/p&gt;
      &lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;Warp
          .initiate(Activity)
          .inspect(Inspection);&lt;/code&gt;&lt;/pre&gt;
      &lt;p&gt;This will intercept the first request coming from the client and ignore the rest of the potential requests.&lt;/p&gt;
      &lt;p&gt;Additionally, Warp will ignore requests for &lt;tt&gt;favicon.ico&lt;/tt&gt; which could fail your test unexpectadly.&lt;/p&gt;
      &lt;p&gt;You can find more samples for this &lt;a href=&quot;https://github.com/arquillian/arquillian-extension-warp/blob/1.0.0.Alpha2/api/src/test/java/org/jboss/arquillian/warp/TestExecutionAPI.java#L62&quot;&gt;API in a source&lt;/a&gt; .&lt;/p&gt;
      &lt;dl&gt;
      &lt;dt&gt;
      &lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; Anonymous and Inner Classes&lt;/dt&gt;
      	&lt;dd&gt;&lt;p&gt;It’s now much easier to define a verification code, which is also more readable.&lt;/p&gt;&lt;/dd&gt;
      &lt;/dl&gt;&lt;p&gt;In &lt;em&gt;Alpha1&lt;/em&gt;, you had to use a &lt;em&gt;top-level&lt;/em&gt; or a &lt;em&gt;static inner classes&lt;/em&gt; to define inspections.&lt;/p&gt;
      &lt;p&gt;In &lt;em&gt;Alpha2&lt;/em&gt;, you can provide &lt;em&gt;non-static inner class&lt;/em&gt; or even &lt;em&gt;anonymous class&lt;/em&gt;.&lt;/p&gt;
      &lt;div class=&quot;filename&quot;&gt;HelloWarp.java&lt;/div&gt;
      &lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;Warp
          // first you need to initiate activity which triggers HTTP request
          .initiate(new Activity() {
              public void perform() {
                  ajaxButton.click();
              }
          })&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;    // and then specify what behavior should be inspected on the server
          .inspect(new Inspection() {&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;        // don't forget to specify serialVerionUID to allow serialization
              private static final long serialVersionUID = 1L;&lt;/code&gt;
              
      &lt;code class=&quot;prettify&quot;&gt;        // bring JSF context via dependency injection
              @ArquillianResource
              FacesContext facesContext;&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;        // verify expected behavior in given request phase
              @AfterPhase(RESTORE_VIEW)
              public void beforeServlet() {
                  assertTrue(facesContext.isPostback());
              }
          });&lt;/code&gt;&lt;/pre&gt;
      &lt;p&gt;This example showed how to use the new API together with anonymous inspections&lt;/p&gt;
      &lt;dl&gt;
      &lt;dt&gt;
      &lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; Multiple Requests / Request Groups&lt;/dt&gt;
      	&lt;dd&gt;&lt;p&gt;It is possible to intercept several requests during one Warp execution.&lt;/p&gt;&lt;/dd&gt;
      &lt;/dl&gt;&lt;p&gt;Warp allows you to verify more than one request triggered by a single client activity. This allows you to verify e.g. a request for HTML page and all its resources (JS, CSS, images) separately. This feature is called &lt;em&gt;Request Groups&lt;/em&gt;.&lt;/p&gt;
      &lt;div class=&quot;filename&quot;&gt;TestRequestGroups.java&lt;/div&gt;
      &lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;// Request Group execution will return WarpResult
      WarpResult result = Warp
          .initiate(Activity)
          // a group specification without name - the name will be generated
          .group()
              .observe(HttpRequestFilter)
              .inspect(Inspection1)
          // a named group specification - the result can be easily accessed
          .group(&quot;second&quot;)
              .observe(HttpRequestFilter)
              .inspect(Inspection2)
          // you need to execute whole Request Group once it is completely specified
          .execute();&lt;/code&gt;
          
      &lt;code class=&quot;prettify&quot;&gt;    // you can access details of finished execution
          result.getGroup(&quot;second&quot;).getInspection();&lt;/code&gt;&lt;/pre&gt;
      &lt;p&gt;The &lt;em&gt;Request Groups&lt;/em&gt; execution returns a &lt;code&gt;WarpResult&lt;/code&gt; which contains details about the finished execution. In order to access the results related to a specific group, you can give the group a name&lt;/p&gt;
      &lt;dl&gt;
      &lt;dt&gt;
      &lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; Request Observers &amp;amp; Fluent API&lt;/dt&gt;
      	&lt;dd&gt;&lt;p&gt;The new API for observing the correct request allows you to select which request should be verified on a server.&lt;/p&gt;&lt;/dd&gt;
      &lt;/dl&gt;&lt;p&gt;When using &lt;em&gt;Request Groups&lt;/em&gt;, all of the requests will be inspected by the inspections defined in that group. There might be one or more requests verified by each group.&lt;/p&gt;
      &lt;p&gt;Since multiple request can be triggered, you might want to choose the correct request to observe. For this purpose, we have the &lt;code&gt;HttpRequestFilter&lt;/code&gt; interface, where you specify which &lt;code&gt;HttpRequest&lt;/code&gt; should matches the current group.&lt;/p&gt;
      &lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;import static org.jboss.arquillian.warp.client.filter.http.HttpFilters.request;&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;// will accept only requests for HTML
      ...group()
          .observe(request().uri().contains(&quot;.html&quot;))&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;// will accept only REST requests for JSON
      ...group()
          .observe(request().header().containsValue(&quot;Accept&quot;, &quot;application/json&quot;))&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;// will accept only POST requests
      ...group()
         .observe(request().method().equal(POST))&lt;/code&gt;&lt;/pre&gt;
      &lt;p&gt;In order to simplify writing the Warp specifications, you can define the observer using a fluent API and static factory methods.&lt;/p&gt;
      &lt;dl&gt;
      &lt;dt&gt;
      &lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; Dependency Injection for Servlets and JSF&lt;/dt&gt;
      	&lt;dd&gt;&lt;p&gt;Test enrichers now allow the the injection of Servlet and JSF resources. (&lt;a href=&quot;#servlet-jsf-enrichments&quot;&gt;read more&lt;/a&gt;)&lt;/p&gt;&lt;/dd&gt;
      &lt;/dl&gt;&lt;dl&gt;
      &lt;dt&gt;
      &lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; Renaming Phaser to Warp JSF&lt;/dt&gt;
      	&lt;dd&gt;&lt;p&gt;The JSF specific extension was renamed from Phaser to Warp JSF. (&lt;a href=&quot;#renaming-phaser-to-warp-jsf&quot;&gt;read more&lt;/a&gt;)&lt;/p&gt;&lt;/dd&gt;
      &lt;/dl&gt;&lt;dl&gt;
      &lt;dt&gt;
      &lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; Introduction of Dependency Chain&lt;/dt&gt;
      	&lt;dd&gt;&lt;p&gt;The dependency chain was introduced to bring in all necessary dependencies by specifying just one dependency. (&lt;a href=&quot;#warp-dependency-chain&quot;&gt;read more&lt;/a&gt;)&lt;/p&gt;&lt;/dd&gt;
      &lt;/dl&gt;&lt;dl&gt;
      &lt;dt&gt;
      &lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; Warp Extensions for REST and Spring MVC&lt;/dt&gt;
      	&lt;dd&gt;&lt;p&gt;Thanks to &lt;a href=&quot;http://arquillian.org/community/contributors/&quot;&gt;Jakub Narloch&lt;/a&gt;, we have two new additions to Arquillian Galaxy. (&lt;a href=&quot;#warp-extensions-rest-spring&quot;&gt;read more&lt;/a&gt;)&lt;/p&gt;&lt;/dd&gt;
      &lt;/dl&gt;&lt;h3&gt;Under the Hood&lt;/h3&gt;
      &lt;dl&gt;
      &lt;dt&gt;
      &lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; Usability and Debugging Improvements&lt;/dt&gt;
      	&lt;dd&gt;&lt;p&gt;A focus of Alpha2 was to polishing the way Warp behave in case of failures and on debuggability of Warp execution.&lt;/p&gt;&lt;/dd&gt;
      &lt;/dl&gt;&lt;dl&gt;
      &lt;dt&gt;
      &lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; Validation of Warp Specification&lt;/dt&gt;
      	&lt;dd&gt;&lt;p&gt;Warp now validates that the number of observed requests match a number of expected requests. It also makes sure that all of defined lifecycle callbacks are executed on the server, to avoid any false positives.&lt;/p&gt;&lt;/dd&gt;
      &lt;/dl&gt;&lt;p&gt;As you can see there are many of new features, so let’s look at them separately:&lt;/p&gt;
      &lt;h3 id=&quot;renaming-warp-api&quot;&gt;Renaming Warp API&lt;/h3&gt;
      &lt;p&gt;After Alpha1 we &lt;a href=&quot;https://community.jboss.org/message/777404#777404&quot;&gt;got several requests&lt;/a&gt; for clarifying the Warp high-level API:&lt;/p&gt;
      &lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;Warp.execute(ClientAction).verify(ServerAssertion)&lt;/code&gt;&lt;/pre&gt;
      &lt;p&gt;The &lt;a href=&quot;https://docs.google.com/spreadsheet/viewform?formkey=dFlZeGI3ZklOUVlDX2M2V2owUkFmYVE6MQ&quot;&gt;announced survey&lt;/a&gt; helped us choose the new API. As a result, &lt;a href=&quot;https://issues.jboss.org/secure/attachment/12358992/warp-api-method-naming-survey-responses.pdf&quot;&gt;88% of participants reported&lt;/a&gt; they found this new API more natural:&lt;/p&gt;
      &lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;Warp.initiate(Activity).inspect(Inspection)&lt;/code&gt;&lt;/pre&gt;
      &lt;p&gt;Big thanks to everyone who participated in the survey! This type of collaboration makes me really proud to be part of the team.&lt;/p&gt;
      &lt;h3 id=&quot;warp-extensions-rest-spring&quot;&gt;Warp Extensions: REST and Spring MVC&lt;/h3&gt;
      &lt;p&gt;Warp was from the beginning built as a project that focused on any framework/technology that is based on top of the Servlet API.&lt;/p&gt;
      &lt;p&gt;Thus it’s not surprising that there are already two extensions shaping out thanks to &lt;a href=&quot;http://arquillian.org/community/contributors/&quot;&gt;Jakub Narloch&lt;/a&gt;:&lt;/p&gt;
      &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;http://arquillian.org/blog/2012/07/24/arquillian-extension-spring-1-0-0-Alpha2/&quot;&gt;Spring MVC&lt;/a&gt;&lt;/li&gt;
      	&lt;li&gt;&lt;a href=&quot;https://github.com/jmnarloch/arquillian-extension-warp-rest&quot;&gt;REST&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;&lt;h3 id=&quot;warp-dependency-chain&quot;&gt;Introduction of Dependency Chain&lt;/h3&gt;
      &lt;p&gt;Putting Warp to work in your Maven project is now as easy as defining a single dependency:&lt;/p&gt;
      &lt;div class=&quot;filename&quot;&gt;pom.xml&lt;/div&gt;
      &lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;&amp;lt;dependency&amp;gt;
          &amp;lt;groupId&amp;gt;org.jboss.arquillian.extension&amp;lt;/groupId&amp;gt;
          &amp;lt;artifactId&amp;gt;arquillian-warp&amp;lt;/artifactId&amp;gt;
          &amp;lt;version&amp;gt;1.0.0.Alpha2&amp;lt;/version&amp;gt;
          &amp;lt;type&amp;gt;pom&amp;lt;/type&amp;gt;
      &amp;lt;/dependency&amp;gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;p&gt;This declaration will bring Warp core, which supports Servlet API lifecycle callbacks.&lt;/p&gt;
      &lt;h3 id=&quot;renaming-phaser-to-warp-jsf&quot;&gt;Renaming Phaser to Warp JSF&lt;/h3&gt;
      &lt;p&gt;Initially we had created Phaser as the next generation of the successful &lt;a href=&quot;http://www.jboss.org/jsfunit/&quot;&gt;JSFUnit&lt;/a&gt;. It occured to use that Phaser is an unfortunate name and it just makes it harded to understand the Arquillian eco-system.&lt;/p&gt;
      &lt;p&gt;That’s why we have come up with a simpler variant – so let me introduce the Warp JSF extension.&lt;/p&gt;
      &lt;p&gt;You can bring Warp JSF to your project just by adding the following declaration:&lt;/p&gt;
      &lt;div class=&quot;filename&quot;&gt;pom.xml&lt;/div&gt;
      &lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;&amp;lt;dependency&amp;gt;
          &amp;lt;groupId&amp;gt;org.jboss.arquillian.extension&amp;lt;/groupId&amp;gt;
          &amp;lt;artifactId&amp;gt;arquillian-warp-jsf&amp;lt;/artifactId&amp;gt;
          &amp;lt;version&amp;gt;1.0.0.Alpha2&amp;lt;/version&amp;gt;
      &amp;lt;/dependency&amp;gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;h3 id=&quot;servlet-jsf-enrichments&quot;&gt;Dependency Injection for Servlets and JSF&lt;/h3&gt;
      &lt;p&gt;After the announcement of the Alpha1 release, we focused on improving Warp to come closer to the Arquillian goal: bring all necessary dependencies to the test (in our case to inspection).&lt;/p&gt;
      &lt;p&gt;Now, you can not only inject all CDI managed beans (&lt;code&gt;@Inject&lt;/code&gt;), EJB beans (&lt;code&gt;@EJB&lt;/code&gt;) or container managed resources &lt;code&gt;@Resource&lt;/code&gt;, but you can also inject the following resources:&lt;/p&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;strong&gt;Servlet resources&lt;/strong&gt;
      	&lt;ul&gt;
      &lt;li&gt;
      &lt;code&gt;ServletRequest&lt;/code&gt; or &lt;code&gt;HttpServletRequest&lt;/code&gt;
      &lt;/li&gt;
      		&lt;li&gt;
      &lt;code&gt;ServletResponse&lt;/code&gt; or &lt;code&gt;HttpServletResponse&lt;/code&gt;
      &lt;/li&gt;
      	&lt;/ul&gt;
      &lt;/li&gt;
      &lt;/ul&gt;&lt;ul&gt;
      &lt;li&gt;
      &lt;strong&gt;JSF resources&lt;/strong&gt;
      	&lt;ul&gt;
      &lt;li&gt;&lt;code&gt;FacesContext&lt;/code&gt;&lt;/li&gt;
      		&lt;li&gt;&lt;code&gt;Application&lt;/code&gt;&lt;/li&gt;
      		&lt;li&gt;
      &lt;code&gt;ELContext&lt;/code&gt;, &lt;code&gt;ELResolver&lt;/code&gt;, &lt;code&gt;ExpressionFactory&lt;/code&gt;
      &lt;/li&gt;
      		&lt;li&gt;&lt;code&gt;ExceptionHandler&lt;/code&gt;&lt;/li&gt;
      		&lt;li&gt;&lt;code&gt;Flash&lt;/code&gt;&lt;/li&gt;
      		&lt;li&gt;&lt;code&gt;NavigationHandler&lt;/code&gt;&lt;/li&gt;
      		&lt;li&gt;&lt;code&gt;PartialViewContext&lt;/code&gt;&lt;/li&gt;
      		&lt;li&gt;&lt;code&gt;RenderKit&lt;/code&gt;&lt;/li&gt;
      		&lt;li&gt;&lt;code&gt;ResourceHandler&lt;/code&gt;&lt;/li&gt;
      		&lt;li&gt;&lt;code&gt;StateManager&lt;/code&gt;&lt;/li&gt;
      		&lt;li&gt;&lt;code&gt;UIViewRoot&lt;/code&gt;&lt;/li&gt;
      		&lt;li&gt;&lt;code&gt;ViewHandler&lt;/code&gt;&lt;/li&gt;
      	&lt;/ul&gt;
      &lt;/li&gt;
      &lt;/ul&gt;&lt;h3&gt;Migration from Alpha1&lt;/h3&gt;
      &lt;p&gt;We’ve create a little &lt;a href=&quot;https://gist.github.com/4275537&quot;&gt;bash script&lt;/a&gt; to convert the java source from Alpha1 API to Alpha2 that might help you with the upgrade.&lt;/p&gt;
      &lt;h3&gt;How to Learn Warp?&lt;/h3&gt;
      &lt;p&gt;The best way now is to look at functional tests for &lt;a href=&quot;https://github.com/arquillian/arquillian-extension-warp/tree/master/ftest/src/test/java/org/jboss/arquillian/warp/ftest&quot;&gt;Warp&lt;/a&gt; or &lt;a href=&quot;https://github.com/arquillian/arquillian-extension-warp/tree/master/extension/jsf-ftest/src/test/java/org/jboss/arquillian/warp/jsf/ftest&quot;&gt;Warp JSF&lt;/a&gt;.&lt;/p&gt;
      &lt;h3&gt;Roadmap&lt;/h3&gt;
      &lt;p&gt;The roadmap to &lt;em&gt;Beta1&lt;/em&gt; is pretty clear:&lt;/p&gt;
      &lt;ul&gt;
      &lt;li&gt;documentation and guides&lt;/li&gt;
      	&lt;li&gt;adding features known from &lt;a href=&quot;http://docs.jboss.org/seam/2.0.1.GA/reference/en/html/testing.html&quot;&gt;SeamTest&lt;/a&gt; and &lt;a href=&quot;http://www.jboss.org/jsfunit/&quot;&gt;JSFUnit&lt;/a&gt;
      &lt;/li&gt;
      	&lt;li&gt;new injections and event hooks (e.g. improved CDI integration)&lt;/li&gt;
      	&lt;li&gt;hardering and usability enhancements (here we rely on your issue reports!)&lt;/li&gt;
      &lt;/ul&gt;&lt;p&gt;Along the way we will welcome &lt;strong&gt;every idea for integrating Warp with your favorite web framework&lt;/strong&gt; – so don’t be a stranger and come to us!&lt;/p&gt;
      &lt;h3&gt;What is Arquillian?&lt;/h3&gt;
      &lt;p&gt;Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop a comprehensive suite of tests from the convenience of your IDE and run them in any IDE, build tool or continuous integration environment.&lt;/p&gt;
      &lt;h3&gt;Release details&lt;/h3&gt;
      &lt;table class=&quot;table table-bordered table-striped&quot;&gt;&lt;tbody&gt;
      &lt;tr&gt;
      &lt;th&gt;Component&lt;/th&gt;
            &lt;td&gt;
              &lt;a href=&quot;http://arquillian.org/modules/warp-extension/&quot;&gt;Arquillian Warp&lt;/a&gt;
            &lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Version&lt;/th&gt;
            &lt;td&gt;
              1.0.0.Alpha2
              &lt;span class=&quot;label tag&quot;&gt;
                &lt;a href=&quot;https://api.github.com/repos/arquillian/arquillian-extension-warp/commits/10187c5c719c6bc8c96a550e5cde82aaf2a49dd7&quot;&gt;view tag&lt;/a&gt;
              &lt;/span&gt;
            &lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Release date&lt;/th&gt;
            &lt;td&gt;2013-01-08&lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Released by&lt;/th&gt;
            &lt;td&gt;Lukas Fryc&lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Compiled against&lt;/th&gt;
            &lt;td&gt;
              &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;Arquillian Core – 1.0.3.Final&lt;/li&gt;
                &lt;li&gt;ShrinkWrap Resolvers – 2.0.0-alpha-1&lt;/li&gt;
              &lt;/ul&gt;
      &lt;/td&gt;
          &lt;/tr&gt;
      &lt;/tbody&gt;&lt;/table&gt;&lt;h3&gt;
        Published artifacts
        &lt;small&gt;org.jboss.arquillian.extension&lt;/small&gt;
      &lt;/h3&gt;
      &lt;ul&gt;
      &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-warp-api
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-warp-api/1.0.0.Alpha2/arquillian-warp-api-1.0.0.Alpha2.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-warp-api/1.0.0.Alpha2/arquillian-warp-api-1.0.0.Alpha2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-warp-bom
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-warp-bom/1.0.0.Alpha2/arquillian-warp-bom-1.0.0.Alpha2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-warp-build-resources
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-warp-build-resources/1.0.0.Alpha2/arquillian-warp-build-resources-1.0.0.Alpha2.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-warp-build-resources/1.0.0.Alpha2/arquillian-warp-build-resources-1.0.0.Alpha2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-warp-ftest
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-warp-ftest/1.0.0.Alpha2/arquillian-warp-ftest-1.0.0.Alpha2.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-warp-ftest/1.0.0.Alpha2/arquillian-warp-ftest-1.0.0.Alpha2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-warp-impl
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-warp-impl/1.0.0.Alpha2/arquillian-warp-impl-1.0.0.Alpha2.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-warp-impl/1.0.0.Alpha2/arquillian-warp-impl-1.0.0.Alpha2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-warp-jsf
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-warp-jsf/1.0.0.Alpha2/arquillian-warp-jsf-1.0.0.Alpha2.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-warp-jsf/1.0.0.Alpha2/arquillian-warp-jsf-1.0.0.Alpha2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-warp-jsf-ftest
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-warp-jsf-ftest/1.0.0.Alpha2/arquillian-warp-jsf-ftest-1.0.0.Alpha2.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-warp-jsf-ftest/1.0.0.Alpha2/arquillian-warp-jsf-ftest-1.0.0.Alpha2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-warp-spi
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-warp-spi/1.0.0.Alpha2/arquillian-warp-spi-1.0.0.Alpha2.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-warp-spi/1.0.0.Alpha2/arquillian-warp-spi-1.0.0.Alpha2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
      &lt;/ul&gt;&lt;h3&gt;
        Release notes and resolved issues
        &lt;small&gt;35&lt;/small&gt;
      &lt;/h3&gt;
      &lt;p&gt;Renaming API methods according to survey; Anonymous/Inner Class; Request Observers/Filters&lt;/p&gt;
      &lt;dl&gt;
      &lt;dt&gt;Bug&lt;/dt&gt;
        &lt;dd&gt;
          &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-972&quot;&gt;ARQ-972&lt;/a&gt; -         Warp tests should be excluded from scanning by CDI container&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-973&quot;&gt;ARQ-973&lt;/a&gt; -         Warp: if primitive field in ServerAssertion is changed during test, it is wrongly changed to initial value on deenrichment&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-976&quot;&gt;ARQ-976&lt;/a&gt; -         The exceptions that occurrs in @AfterServlet test is not being propagated back to the client.&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-982&quot;&gt;ARQ-982&lt;/a&gt; -         Response header size exceeded in Warp test.&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-992&quot;&gt;ARQ-992&lt;/a&gt; -         Warp does not support request redirection.&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1063&quot;&gt;ARQ-1063&lt;/a&gt; -         Warp: when both ServerAssertion and ClientAction fails, server error should be reported&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1163&quot;&gt;ARQ-1163&lt;/a&gt; -         Warp: response is not properly commited&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1174&quot;&gt;ARQ-1174&lt;/a&gt; -         Warp: DeploymentEnricher should check whether current TestClass is annotated with WarpTest&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1195&quot;&gt;ARQ-1195&lt;/a&gt; -         Warp: do not remove static inner classes from deployment&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1197&quot;&gt;ARQ-1197&lt;/a&gt; -         Warp: report that serialVersionUID was not set for Inspection&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1254&quot;&gt;ARQ-1254&lt;/a&gt; -         Warp: RequestPayload decides whether transform class for all inspections instead of each inspection at own&lt;/li&gt;
          &lt;/ul&gt;
      &lt;/dd&gt;
      &lt;/dl&gt;&lt;dl&gt;
      &lt;dt&gt;Component  Upgrade&lt;/dt&gt;
        &lt;dd&gt;
          &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1052&quot;&gt;ARQ-1052&lt;/a&gt; -         Upgrade Arquillian Core to 1.0.3.Final&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1053&quot;&gt;ARQ-1053&lt;/a&gt; -         Upgrade Arquillian Drone to 1.1.0.Final&lt;/li&gt;
          &lt;/ul&gt;
      &lt;/dd&gt;
      &lt;/dl&gt;&lt;dl&gt;
      &lt;dt&gt;Enhancement&lt;/dt&gt;
        &lt;dd&gt;
          &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-979&quot;&gt;ARQ-979&lt;/a&gt; -         Exposed BeforeServlet and AfterServlet events to SPI&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-980&quot;&gt;ARQ-980&lt;/a&gt; -         Make ServletRequest an injectable resource&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-981&quot;&gt;ARQ-981&lt;/a&gt; -         Move BeforeServlet and AfterServlet events to SPI&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1060&quot;&gt;ARQ-1060&lt;/a&gt; -         Fail to start a Warp test when @Deployment(testable=false) and when no @RunAsClient present&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1120&quot;&gt;ARQ-1120&lt;/a&gt; -         Warp: safe propagation server-side failures to client-side&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1223&quot;&gt;ARQ-1223&lt;/a&gt; -         Warp JSF: refactor PhaseLifecycleEvent to expose name of the event when debugging&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1224&quot;&gt;ARQ-1224&lt;/a&gt; -         Warp: expose RequestContext and RequestScope to SPI&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1236&quot;&gt;ARQ-1236&lt;/a&gt; -         Warp: filter favicon.ico requests by default&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1246&quot;&gt;ARQ-1246&lt;/a&gt; -         Warp: single execution should observe only first request&lt;/li&gt;
          &lt;/ul&gt;
      &lt;/dd&gt;
      &lt;/dl&gt;&lt;dl&gt;
      &lt;dt&gt;Feature Request&lt;/dt&gt;
        &lt;dd&gt;
          &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-932&quot;&gt;ARQ-932&lt;/a&gt; -         Warp: support for inner/anonymous classes&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-937&quot;&gt;ARQ-937&lt;/a&gt; -         Add usage examples to API/SPI classes&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-964&quot;&gt;ARQ-964&lt;/a&gt; -         Verify that all tests in ServerAssertion has been called - prevents false negatives&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-965&quot;&gt;ARQ-965&lt;/a&gt; -         Warp: Enable common JSF objects (FacesContext, Application) to be injected using @ArquillianResource&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-967&quot;&gt;ARQ-967&lt;/a&gt; -         Warp: client-side filters for waiting for &quot;right&quot; request or enriching several requests&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1056&quot;&gt;ARQ-1056&lt;/a&gt; -         Warp: Enable common JSF objects (FacesContext, Application) to be injected using @Inject&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1057&quot;&gt;ARQ-1057&lt;/a&gt; -         Warp: Resource provider for HttpServletRequest/HttpServletResponse&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1061&quot;&gt;ARQ-1061&lt;/a&gt; -         Debug output from Warp when Arquillian logging enabled&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1073&quot;&gt;ARQ-1073&lt;/a&gt; -         Warp: buffering writer/stream re-initializes on each getWriter/getOutputStream call&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1204&quot;&gt;ARQ-1204&lt;/a&gt; -         Builder for Warp filters.&lt;/li&gt;
          &lt;/ul&gt;
      &lt;/dd&gt;
      &lt;/dl&gt;&lt;dl&gt;
      &lt;dt&gt;Task&lt;/dt&gt;
        &lt;dd&gt;
          &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1054&quot;&gt;ARQ-1054&lt;/a&gt; -         Warp: rename arquillian-warp-phaser to arquillian-warp-jsf&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1055&quot;&gt;ARQ-1055&lt;/a&gt; -         Introduce Warp depchain&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1233&quot;&gt;ARQ-1233&lt;/a&gt; -         Warp: rename API according to results of survey&lt;/li&gt;
          &lt;/ul&gt;
      &lt;/dd&gt;
      &lt;/dl&gt;&lt;p&gt;
        Thanks to the following list of contributors:
        &lt;a href=&quot;https://community.jboss.org/people/lfryc&quot;&gt;Lukas Fryc&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/jmnarloch&quot;&gt;Jakub Narloch&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/lfryc&quot;&gt;Lukas Fryc&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/mkouba&quot;&gt;Martin Kouba&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/bleathem&quot;&gt;Brian Leathem&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/aslak&quot;&gt;Aslak Knutsen&lt;/a&gt;
      &lt;/p&gt;
    </content>
  </entry>
  <entry>
    <id>http://arquillian.org/blog/2013/01/15/arquillian-extension-drone-1-2-0-Alpha1/</id>
    <title>Arquillian Drone Extension 1.2.0.Alpha1 Released</title>
    <updated>2013-01-16T00:00:00+00:00</updated>
    <link href="http://arquillian.org/blog/2013/01/15/arquillian-extension-drone-1-2-0-Alpha1/" rel="alternate" type="text/html" />
    <category scheme="http://arquillian.org/blog/tags" term="release" />
    <category scheme="http://arquillian.org/blog/tags" term="extension" />
    <category scheme="http://arquillian.org/blog/tags" term="drone" />
    <category scheme="http://arquillian.org/blog" term="arquillian" />
    <summary>
      The Arquillian team is proud to announce the 1.2.0.Alpha1 release of the Arquillian Drone Extension component!
       We&#8217;ve introduced new features and bugfixes in 1.2.0.Alpha1 while still preserving backwards compatibility with 1.1.0.Final. We fixed an annoying bug that made usage of some capabilities impossible and have delivered some Firefox goodies.
      Significant changes since 1.1.0.Final
      
      	 Updated Selenium to 2.28.0 and introduced Selenium BOM
      	Now you can switch to next Selenium version only by including following snippet in your pom.xml file.
      pom.xml
      &lt;dependencyManagement&gt;&#x000A;    &lt;dependencies&gt;&#x000A;        &lt;groupId&gt;org.jboss.arquillian.selenium&lt;/groupId&gt;&#x000A;        &lt;artifactId&gt;selenium-bom&lt;/artifactId&gt;&#x000A;    ......
    </summary>
    <content type="html">
      &lt;p&gt;The Arquillian team is proud to announce the &lt;em&gt;1.2.0.Alpha1&lt;/em&gt; release of the &lt;em&gt;Arquillian Drone Extension&lt;/em&gt; component!&lt;/p&gt;
      &lt;p&gt;&lt;img src=&quot;http://arquillian.org/images/blog/drone_400.png&quot; class=&quot;graphic pull-right&quot; alt=&quot;&quot;&gt; We’ve introduced new features and bugfixes in 1.2.0.Alpha1 while still preserving backwards compatibility with 1.1.0.Final. We fixed an annoying bug that made usage of some capabilities impossible and have delivered some Firefox goodies.&lt;/p&gt;
      &lt;h3 class=&quot;highlights&quot;&gt;Significant changes since 1.1.0.Final&lt;/h3&gt;
      &lt;dl&gt;
      &lt;dt&gt;
      &lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; Updated Selenium to 2.28.0 and introduced Selenium BOM&lt;/dt&gt;
      	&lt;dd&gt;
      &lt;p&gt;Now you can switch to next Selenium version only by including following snippet in your pom.xml file.&lt;/p&gt;
      &lt;div class=&quot;filename&quot;&gt;pom.xml&lt;/div&gt;
      &lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;&amp;lt;dependencyManagement&amp;gt;&lt;br&gt;
          &amp;lt;dependencies&amp;gt;&lt;br&gt;
              &amp;lt;groupId&amp;gt;org.jboss.arquillian.selenium&amp;lt;/groupId&amp;gt;&lt;br&gt;
              &amp;lt;artifactId&amp;gt;selenium-bom&amp;lt;/artifactId&amp;gt;&lt;br&gt;
              &amp;lt;version&amp;gt;${version.selenium}&amp;lt;/version&amp;gt;&lt;br&gt;
              &amp;lt;type&amp;gt;pom&amp;lt;/type&amp;gt;&lt;br&gt;
              &amp;lt;scope&amp;gt;import&amp;lt;/scope&amp;gt;&lt;br&gt;
          &amp;lt;/dependencies&amp;gt;&lt;br&gt;
      &amp;lt;/dependencyManagement&amp;gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;/dd&gt;
      &lt;/dl&gt;&lt;p class=&quot;warning&quot;&gt;&lt;span&gt;This snippet must be placed above arquillian-drone-bom in order to override Selenium versions.&lt;/span&gt;&lt;/p&gt;
      &lt;dl&gt;
      &lt;dt&gt;
      &lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; Support for loading XPI into Firefox profile&lt;/dt&gt;
      	&lt;dd&gt;
      &lt;p&gt;There is no need to work with a separate Firefox profile. Simply use the WebDriver generated one and let Drone install all extensions you need.&lt;/p&gt;
      &lt;div class=&quot;filename&quot;&gt;arquillian.xml&lt;/div&gt;
      &lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;&amp;lt;extension qualifier=“webdriver”&amp;gt;&lt;br&gt;
          &amp;lt;property name=“browserCapabilities”&amp;gt;firefox&amp;lt;/property&amp;gt;&lt;br&gt;
          &amp;lt;property name=“firefoxExtensions”&amp;gt;/path/to/extension1 “/path/to extension2/with/space”&amp;lt;/property&amp;gt;&lt;br&gt;
      &amp;lt;/extension&amp;gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;/dd&gt;
      &lt;/dl&gt;&lt;dl&gt;
      &lt;dt&gt;
      &lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; Ability to set WebDriver logging level&lt;/dt&gt;
      	&lt;dd&gt;
      &lt;p&gt;Drone allows to to set the logging level for Firefox WebDriver directly from Arquillian configuration.&lt;/p&gt;
      &lt;div class=&quot;filename&quot;&gt;arquillian.xml&lt;/div&gt;
      &lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;&amp;lt;extension qualifier=“webdriver”&amp;gt;&lt;br&gt;
          &amp;lt;property name=“browserCapabilities”&amp;gt;firefox&amp;lt;/property&amp;gt;&lt;br&gt;
          &amp;lt;property name=“loggingPrefs”&amp;gt;driver=INFO,profiler=WARNING&amp;lt;/property&amp;gt;&lt;br&gt;
      &amp;lt;/extension&amp;gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;/dd&gt;
      &lt;/dl&gt;&lt;p class=&quot;info&quot;&gt;&lt;span&gt;Logging level are the same as for JUL, that is SEVERE, WARNING, INFO, CONFIG, FINE, FINER and FINEST.&lt;/span&gt;&lt;/p&gt;
      &lt;p&gt;I’d like to thank everybody involved in this release. &lt;em&gt;You guys make testing a breeze!&lt;/em&gt;&lt;/p&gt;
      &lt;p&gt;We hope that you’ll enjoy the improvements. We look forward to hear your feedback in the &lt;a href=&quot;http://community.jboss.org/en/arquillian&quot;&gt;community forums&lt;/a&gt;.&lt;/p&gt;
      &lt;h3&gt;What is Arquillian?&lt;/h3&gt;
      &lt;p&gt;Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop a comprehensive suite of tests from the convenience of your IDE and run them in any IDE, build tool or continuous integration environment.&lt;/p&gt;
      &lt;h3&gt;Release details&lt;/h3&gt;
      &lt;table class=&quot;table table-bordered table-striped&quot;&gt;&lt;tbody&gt;
      &lt;tr&gt;
      &lt;th&gt;Component&lt;/th&gt;
            &lt;td&gt;
              &lt;a href=&quot;http://arquillian.org/modules/drone-extension/&quot;&gt;Arquillian Drone Extension&lt;/a&gt;
            &lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Version&lt;/th&gt;
            &lt;td&gt;
              1.2.0.Alpha1
              &lt;span class=&quot;label tag&quot;&gt;
                &lt;a href=&quot;https://api.github.com/repos/arquillian/arquillian-extension-drone/commits/5f0f37d7f5f30a1e7f29f1af51b3aa5fb52c05cf&quot;&gt;view tag&lt;/a&gt;
              &lt;/span&gt;
            &lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Release date&lt;/th&gt;
            &lt;td&gt;2013-01-09&lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Released by&lt;/th&gt;
            &lt;td&gt;Lukas Fryc&lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Compiled against&lt;/th&gt;
            &lt;td&gt;
              &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;Arquillian Core – 1.0.2.Final&lt;/li&gt;
              &lt;/ul&gt;
      &lt;/td&gt;
          &lt;/tr&gt;
      &lt;/tbody&gt;&lt;/table&gt;&lt;h3&gt;
        Published artifacts
        &lt;small&gt;org.jboss.arquillian.extension&lt;/small&gt;
      &lt;/h3&gt;
      &lt;ul&gt;
      &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-drone-api
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-api/1.2.0.Alpha1/arquillian-drone-api-1.2.0.Alpha1.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-api/1.2.0.Alpha1/arquillian-drone-api-1.2.0.Alpha1.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-drone-bom
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-bom/1.2.0.Alpha1/arquillian-drone-bom-1.2.0.Alpha1.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-drone-configuration
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-configuration/1.2.0.Alpha1/arquillian-drone-configuration-1.2.0.Alpha1.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-configuration/1.2.0.Alpha1/arquillian-drone-configuration-1.2.0.Alpha1.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-drone-impl
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-impl/1.2.0.Alpha1/arquillian-drone-impl-1.2.0.Alpha1.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-impl/1.2.0.Alpha1/arquillian-drone-impl-1.2.0.Alpha1.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-drone-selenium
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-selenium/1.2.0.Alpha1/arquillian-drone-selenium-1.2.0.Alpha1.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-selenium/1.2.0.Alpha1/arquillian-drone-selenium-1.2.0.Alpha1.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-drone-selenium-depchain
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-selenium-depchain/1.2.0.Alpha1/arquillian-drone-selenium-depchain-1.2.0.Alpha1.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-drone-selenium-server
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-selenium-server/1.2.0.Alpha1/arquillian-drone-selenium-server-1.2.0.Alpha1.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-selenium-server/1.2.0.Alpha1/arquillian-drone-selenium-server-1.2.0.Alpha1.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-drone-spi
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-spi/1.2.0.Alpha1/arquillian-drone-spi-1.2.0.Alpha1.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-spi/1.2.0.Alpha1/arquillian-drone-spi-1.2.0.Alpha1.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-drone-webdriver
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-webdriver/1.2.0.Alpha1/arquillian-drone-webdriver-1.2.0.Alpha1.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-webdriver/1.2.0.Alpha1/arquillian-drone-webdriver-1.2.0.Alpha1.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-drone-webdriver-depchain
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-webdriver-depchain/1.2.0.Alpha1/arquillian-drone-webdriver-depchain-1.2.0.Alpha1.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
      &lt;/ul&gt;&lt;h3&gt;
        Release notes and resolved issues
        &lt;small&gt;6&lt;/small&gt;
      &lt;/h3&gt;
      &lt;p&gt;&lt;/p&gt;
      &lt;dl&gt;
      &lt;dt&gt;Bug&lt;/dt&gt;
        &lt;dd&gt;
          &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1251&quot;&gt;ARQ-1251&lt;/a&gt; -         Arquillian Drone is unable to instantiate Firefox driver if acceptSslCerts, webStorageEnabled, loggingPrefs properties are used in arquillian.xml&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1258&quot;&gt;ARQ-1258&lt;/a&gt; -         Allow Chrome switches to contain spaces&lt;/li&gt;
          &lt;/ul&gt;
      &lt;/dd&gt;
      &lt;/dl&gt;&lt;dl&gt;
      &lt;dt&gt;Component  Upgrade&lt;/dt&gt;
        &lt;dd&gt;
          &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1252&quot;&gt;ARQ-1252&lt;/a&gt; -         Upgrade to Selenium 2.28.0 and use Selenium BOM&lt;/li&gt;
          &lt;/ul&gt;
      &lt;/dd&gt;
      &lt;/dl&gt;&lt;dl&gt;
      &lt;dt&gt;Feature Request&lt;/dt&gt;
        &lt;dd&gt;
          &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1138&quot;&gt;ARQ-1138&lt;/a&gt; -         Drone: provide selenium-bom to manage Selenium dependencies&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1259&quot;&gt;ARQ-1259&lt;/a&gt; -         Make possible to load an xpi as firefox Extension&lt;/li&gt;
          &lt;/ul&gt;
      &lt;/dd&gt;
      &lt;/dl&gt;&lt;dl&gt;
      &lt;dt&gt;Task&lt;/dt&gt;
        &lt;dd&gt;
          &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-952&quot;&gt;ARQ-952&lt;/a&gt; -         Avoid heavy-weight tests for Drone functional testing&lt;/li&gt;
          &lt;/ul&gt;
      &lt;/dd&gt;
      &lt;/dl&gt;&lt;p&gt;
        Thanks to the following list of contributors:
        &lt;a href=&quot;https://community.jboss.org/people/trepel&quot;&gt;Tomas Repel&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/kpiwko&quot;&gt;Karel Piwko&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/lfryc&quot;&gt;Lukas Fryc&lt;/a&gt;, &lt;a href=&quot;https://github.com/papousek&quot;&gt;Jan Papoušek&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/aslak&quot;&gt;Aslak Knutsen&lt;/a&gt;
      &lt;/p&gt;
    </content>
  </entry>
  <entry>
    <id>http://arquillian.org/blog/2013/01/15/arquillian-extension-android-1-0-0-Alpha2/</id>
    <title>Arquillian Android Extension 1.0.0.Alpha2 Released</title>
    <updated>2013-01-16T00:00:00+00:00</updated>
    <link href="http://arquillian.org/blog/2013/01/15/arquillian-extension-android-1-0-0-Alpha2/" rel="alternate" type="text/html" />
    <category scheme="http://arquillian.org/blog/tags" term="release" />
    <category scheme="http://arquillian.org/blog/tags" term="extension" />
    <category scheme="http://arquillian.org/blog/tags" term="android" />
    <category scheme="http://arquillian.org/blog" term="arquillian" />
    <summary>
      The Arquillian team is proud to announce the 1.0.0.Alpha2 release of the Arquillian Android Extension component!
      Arquillian Android Extension has reached the Alpha2 milestone. This is a bugfix release with a few new nice features.
      Significant changes in 1.0.0.Alpha2
      
      	 Ability to specify ABI
      	Since Android 4 the SDK allows to define multiple ABI types for the emulator. We now honor this property and fail fast if multiple ABIs are available during creation of the emulator.
      arquillian.xml
      &lt;extension qualifier=&#8220;android&#8221;&gt;&#x000A;   &lt;property name=&#8220;abi&#8221;&gt;armeabi-v7a&lt;/property&gt;&#x000A;&lt;/extension&gt;
      
      
      	 Ability to inject Android Driver instance into the test
      	You now have limited control of the device from the test itself.
      AndroidApkInstallationTestCase.java
      @ArquillianResource&#x000A;AndroidDevice device;
      
      @Test&#x000A;public void installAndUninstallApk()......
    </summary>
    <content type="html">
      &lt;p&gt;The Arquillian team is proud to announce the &lt;em&gt;1.0.0.Alpha2&lt;/em&gt; release of the &lt;em&gt;Arquillian Android Extension&lt;/em&gt; component!&lt;/p&gt;
      &lt;p&gt;Arquillian Android Extension has reached the Alpha2 milestone. This is a bugfix release with a few new nice features.&lt;/p&gt;
      &lt;h3 class=&quot;highlights&quot;&gt;Significant changes in 1.0.0.Alpha2&lt;/h3&gt;
      &lt;dl&gt;
      &lt;dt&gt;
      &lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; Ability to specify ABI&lt;/dt&gt;
      	&lt;dd&gt;
      &lt;p&gt;Since Android 4 the SDK allows to define multiple ABI types for the emulator. We now honor this property and fail fast if multiple ABIs are available during creation of the emulator.&lt;/p&gt;
      &lt;div class=&quot;filename&quot;&gt;arquillian.xml&lt;/div&gt;
      &lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;&amp;lt;extension qualifier=“android”&amp;gt;&lt;br&gt;
         &amp;lt;property name=“abi”&amp;gt;armeabi-v7a&amp;lt;/property&amp;gt;&lt;br&gt;
      &amp;lt;/extension&amp;gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;/dd&gt;
      &lt;/dl&gt;&lt;dl&gt;
      &lt;dt&gt;
      &lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; Ability to inject Android Driver instance into the test&lt;/dt&gt;
      	&lt;dd&gt;
      &lt;p&gt;You now have limited control of the device from the test itself.&lt;/p&gt;
      &lt;div class=&quot;filename&quot;&gt;AndroidApkInstallationTestCase.java&lt;/div&gt;
      &lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;@ArquillianResource
      AndroidDevice device;&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;@Test
      public void installAndUninstallApk() throws AndroidExecutionException {
          device.installPackage(new File(&quot;src/test/apk/calculator.apk&quot;), true);&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;    List&amp;lt;String&amp;gt; installedApps = getInstalledPackages(device);&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;    Assert.assertTrue(&quot;Calculator app was installed&quot;, installedApps.contains(CALCULATOR_APP));
          device.uninstallPackage(CALCULATOR_APP);&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;installedApps = getInstalledPackages(device);&lt;br&gt;
          Assert.assertFalse(“Calculator app was uninstalled”, installedApps.contains(CALCULATOR_APP));&lt;br&gt;
      }&lt;/code&gt;&lt;/pre&gt;
      &lt;/dd&gt;
      &lt;/dl&gt;&lt;p&gt;Big thanks go to Jan Papousek (@jan_papousek) for improving and testing this release!&lt;/p&gt;
      &lt;p&gt;We hope that you’ll enjoy the improvements. We look forward to hear your feedback in the &lt;a href=&quot;http://community.jboss.org/en/arquillian&quot;&gt;community forums&lt;/a&gt;.&lt;/p&gt;
      &lt;h3&gt;What is Arquillian?&lt;/h3&gt;
      &lt;p&gt;Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop a comprehensive suite of tests from the convenience of your IDE and run them in any IDE, build tool or continuous integration environment.&lt;/p&gt;
      &lt;h3&gt;Release details&lt;/h3&gt;
      &lt;table class=&quot;table table-bordered table-striped&quot;&gt;&lt;tbody&gt;
      &lt;tr&gt;
      &lt;th&gt;Component&lt;/th&gt;
            &lt;td&gt;
              &lt;a href=&quot;http://arquillian.org/modules/android-extension/&quot;&gt;Arquillian Android Extension&lt;/a&gt;
            &lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Version&lt;/th&gt;
            &lt;td&gt;
              1.0.0.Alpha2
              &lt;span class=&quot;label tag&quot;&gt;
                &lt;a href=&quot;https://api.github.com/repos/arquillian/arquillian-extension-android/commits/9bb2bf33f780b92b6f9c73f8598b5cd5f594e093&quot;&gt;view tag&lt;/a&gt;
              &lt;/span&gt;
            &lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Release date&lt;/th&gt;
            &lt;td&gt;2013-01-09&lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Released by&lt;/th&gt;
            &lt;td&gt;Lukas Fryc&lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Compiled against&lt;/th&gt;
            &lt;td&gt;
              &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;Arquillian Core – 1.0.3.Final&lt;/li&gt;
              &lt;/ul&gt;
      &lt;/td&gt;
          &lt;/tr&gt;
      &lt;/tbody&gt;&lt;/table&gt;&lt;h3&gt;
        Published artifacts
        &lt;small&gt;org.jboss.arquillian.extension&lt;/small&gt;
      &lt;/h3&gt;
      &lt;ul&gt;
      &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-android-api
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-android-api/1.0.0.Alpha2/arquillian-android-api-1.0.0.Alpha2.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-android-api/1.0.0.Alpha2/arquillian-android-api-1.0.0.Alpha2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-android-bom
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-android-bom/1.0.0.Alpha2/arquillian-android-bom-1.0.0.Alpha2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-android-configuration
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-android-configuration/1.0.0.Alpha2/arquillian-android-configuration-1.0.0.Alpha2.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-android-configuration/1.0.0.Alpha2/arquillian-android-configuration-1.0.0.Alpha2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-android-depchain
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-android-depchain/1.0.0.Alpha2/arquillian-android-depchain-1.0.0.Alpha2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-android-drone
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-android-drone/1.0.0.Alpha2/arquillian-android-drone-1.0.0.Alpha2.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-android-drone/1.0.0.Alpha2/arquillian-android-drone-1.0.0.Alpha2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-android-impl
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-android-impl/1.0.0.Alpha2/arquillian-android-impl-1.0.0.Alpha2.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-android-impl/1.0.0.Alpha2/arquillian-android-impl-1.0.0.Alpha2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-android-spi
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-android-spi/1.0.0.Alpha2/arquillian-android-spi-1.0.0.Alpha2.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-android-spi/1.0.0.Alpha2/arquillian-android-spi-1.0.0.Alpha2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
      &lt;/ul&gt;&lt;p&gt;
        Thanks to the following list of contributors:
        &lt;a href=&quot;https://community.jboss.org/people/kpiwko&quot;&gt;Karel Piwko&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/lfryc&quot;&gt;Lukas Fryc&lt;/a&gt;, &lt;a href=&quot;https://github.com/papousek&quot;&gt;Jan Papoušek&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/aslak&quot;&gt;Aslak Knutsen&lt;/a&gt;
      &lt;/p&gt;
    </content>
  </entry>
  <entry>
    <id>http://arquillian.org/blog/2012/12/06/arquillian-container-osgi-2-0-0-Alpha2/</id>
    <title>Arquillian OSGi 2.0.0.Alpha2 Released</title>
    <updated>2012-12-07T00:00:00+00:00</updated>
    <link href="http://arquillian.org/blog/2012/12/06/arquillian-container-osgi-2-0-0-Alpha2/" rel="alternate" type="text/html" />
    <category scheme="http://arquillian.org/blog/tags" term="release" />
    <category scheme="http://arquillian.org/blog/tags" term="container-adapter" />
    <category scheme="http://arquillian.org/blog/tags" term="osgi" />
    <category scheme="http://arquillian.org/blog" term="arquillian" />
    <summary>
      The Arquillian team is proud to announce the 2.0.0.Alpha2 release of the Arquillian OSGi component!
      
      What is Arquillian?
      Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop a comprehensive suite of tests from the convenience of your IDE and run them in any IDE, build tool or continuous integration environment.
      Release details
      
        
          
            Component
      ......
    </summary>
    <content type="html">
      &lt;p&gt;The Arquillian team is proud to announce the &lt;em&gt;2.0.0.Alpha2&lt;/em&gt; release of the &lt;em&gt;Arquillian OSGi&lt;/em&gt; component!&lt;/p&gt;
      
      &lt;h3&gt;What is Arquillian?&lt;/h3&gt;
      &lt;p&gt;Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop a comprehensive suite of tests from the convenience of your IDE and run them in any IDE, build tool or continuous integration environment.&lt;/p&gt;
      &lt;h3&gt;Release details&lt;/h3&gt;
      &lt;table class=&quot;table table-bordered table-striped&quot;&gt;&lt;tbody&gt;
      &lt;tr&gt;
      &lt;th&gt;Component&lt;/th&gt;
            &lt;td&gt;
              &lt;a href=&quot;http://arquillian.org/modules/arquillian-osgi-embedded-container-adapter/&quot;&gt;Arquillian OSGi&lt;/a&gt;
            &lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Version&lt;/th&gt;
            &lt;td&gt;
              2.0.0.Alpha2
              &lt;span class=&quot;label tag&quot;&gt;
                &lt;a href=&quot;https://api.github.com/repos/arquillian/arquillian-container-osgi/commits/1e1eacc1267da960f9b054258a86f69245c5031d&quot;&gt;view tag&lt;/a&gt;
              &lt;/span&gt;
            &lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Release date&lt;/th&gt;
            &lt;td&gt;2012-12-06&lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Released by&lt;/th&gt;
            &lt;td&gt;Thomas Diesler&lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Compiled against&lt;/th&gt;
            &lt;td&gt;
              &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;Arquillian Core – 1.0.2.Final&lt;/li&gt;
                &lt;li&gt;ShrinkWrap Core – 1.0.0&lt;/li&gt;
              &lt;/ul&gt;
      &lt;/td&gt;
          &lt;/tr&gt;
      &lt;/tbody&gt;&lt;/table&gt;&lt;h3&gt;
        Published artifacts
        &lt;small&gt;org.jboss.arquillian.container&lt;/small&gt;
      &lt;/h3&gt;
      &lt;ul&gt;
      &lt;li&gt;
          org.jboss.arquillian.container
          »
          arquillian-container-osgi
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-osgi/2.0.0.Alpha2/arquillian-container-osgi-2.0.0.Alpha2.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-osgi/2.0.0.Alpha2/arquillian-container-osgi-2.0.0.Alpha2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.container
          »
          arquillian-container-osgi-embedded
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-osgi-embedded/2.0.0.Alpha2/arquillian-container-osgi-embedded-2.0.0.Alpha2.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-osgi-embedded/2.0.0.Alpha2/arquillian-container-osgi-embedded-2.0.0.Alpha2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.protocol
          »
          arquillian-protocol-osgi
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/protocol/arquillian-protocol-osgi/2.0.0.Alpha2/arquillian-protocol-osgi-2.0.0.Alpha2.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/protocol/arquillian-protocol-osgi/2.0.0.Alpha2/arquillian-protocol-osgi-2.0.0.Alpha2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.testenricher
          »
          arquillian-testenricher-osgi
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testenricher/arquillian-testenricher-osgi/2.0.0.Alpha2/arquillian-testenricher-osgi-2.0.0.Alpha2.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testenricher/arquillian-testenricher-osgi/2.0.0.Alpha2/arquillian-testenricher-osgi-2.0.0.Alpha2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
      &lt;/ul&gt;&lt;p&gt;
        Thanks to the following list of contributors:
        &lt;a href=&quot;https://community.jboss.org/people/thomas.diesler&quot;&gt;Thomas Diesler&lt;/a&gt;
      &lt;/p&gt;
    </content>
  </entry>
  <entry>
    <id>http://arquillian.org/blog/2012/12/06/arquillian-container-osgi-2-0-0-Alpha1/</id>
    <title>Arquillian OSGi 2.0.0.Alpha1 Released</title>
    <updated>2012-12-07T00:00:00+00:00</updated>
    <link href="http://arquillian.org/blog/2012/12/06/arquillian-container-osgi-2-0-0-Alpha1/" rel="alternate" type="text/html" />
    <category scheme="http://arquillian.org/blog/tags" term="release" />
    <category scheme="http://arquillian.org/blog/tags" term="container-adapter" />
    <category scheme="http://arquillian.org/blog/tags" term="osgi" />
    <category scheme="http://arquillian.org/blog" term="arquillian" />
    <summary>
      The Arquillian team is proud to announce the 2.0.0.Alpha1 release of the Arquillian OSGi component!
      
      What is Arquillian?
      Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop a comprehensive suite of tests from the convenience of your IDE and run them in any IDE, build tool or continuous integration environment.
      Release details
      
        
          
            Component
      ......
    </summary>
    <content type="html">
      &lt;p&gt;The Arquillian team is proud to announce the &lt;em&gt;2.0.0.Alpha1&lt;/em&gt; release of the &lt;em&gt;Arquillian OSGi&lt;/em&gt; component!&lt;/p&gt;
      
      &lt;h3&gt;What is Arquillian?&lt;/h3&gt;
      &lt;p&gt;Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop a comprehensive suite of tests from the convenience of your IDE and run them in any IDE, build tool or continuous integration environment.&lt;/p&gt;
      &lt;h3&gt;Release details&lt;/h3&gt;
      &lt;table class=&quot;table table-bordered table-striped&quot;&gt;&lt;tbody&gt;
      &lt;tr&gt;
      &lt;th&gt;Component&lt;/th&gt;
            &lt;td&gt;
              &lt;a href=&quot;http://arquillian.org/modules/arquillian-osgi-embedded-container-adapter/&quot;&gt;Arquillian OSGi&lt;/a&gt;
            &lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Version&lt;/th&gt;
            &lt;td&gt;
              2.0.0.Alpha1
              &lt;span class=&quot;label tag&quot;&gt;
                &lt;a href=&quot;https://api.github.com/repos/arquillian/arquillian-container-osgi/commits/2bdf9c68120cbd50fc7e8f3a6b51578944eee118&quot;&gt;view tag&lt;/a&gt;
              &lt;/span&gt;
            &lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Release date&lt;/th&gt;
            &lt;td&gt;2012-12-06&lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Released by&lt;/th&gt;
            &lt;td&gt;Thomas Diesler&lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Compiled against&lt;/th&gt;
            &lt;td&gt;
              &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;Arquillian Core – 1.0.2.Final&lt;/li&gt;
                &lt;li&gt;ShrinkWrap Core – 1.0.0&lt;/li&gt;
              &lt;/ul&gt;
      &lt;/td&gt;
          &lt;/tr&gt;
      &lt;/tbody&gt;&lt;/table&gt;&lt;h3&gt;
        Published artifacts
        &lt;small&gt;org.jboss.arquillian.container&lt;/small&gt;
      &lt;/h3&gt;
      &lt;ul&gt;
      &lt;li&gt;
          org.jboss.arquillian.container
          »
          arquillian-container-osgi
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-osgi/2.0.0.Alpha1/arquillian-container-osgi-2.0.0.Alpha1.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-osgi/2.0.0.Alpha1/arquillian-container-osgi-2.0.0.Alpha1.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.container
          »
          arquillian-container-osgi-embedded
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-osgi-embedded/2.0.0.Alpha1/arquillian-container-osgi-embedded-2.0.0.Alpha1.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-osgi-embedded/2.0.0.Alpha1/arquillian-container-osgi-embedded-2.0.0.Alpha1.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.protocol
          »
          arquillian-protocol-osgi
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/protocol/arquillian-protocol-osgi/2.0.0.Alpha1/arquillian-protocol-osgi-2.0.0.Alpha1.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/protocol/arquillian-protocol-osgi/2.0.0.Alpha1/arquillian-protocol-osgi-2.0.0.Alpha1.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.testenricher
          »
          arquillian-testenricher-osgi
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testenricher/arquillian-testenricher-osgi/2.0.0.Alpha1/arquillian-testenricher-osgi-2.0.0.Alpha1.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testenricher/arquillian-testenricher-osgi/2.0.0.Alpha1/arquillian-testenricher-osgi-2.0.0.Alpha1.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
      &lt;/ul&gt;&lt;p&gt;
        Thanks to the following list of contributors:
        &lt;a href=&quot;https://community.jboss.org/people/thomas.diesler&quot;&gt;Thomas Diesler&lt;/a&gt;
      &lt;/p&gt;
    </content>
  </entry>
  <entry>
    <id>http://arquillian.org/blog/2012/11/27/arquillian-extension-jacoco-1-0-0-Alpha5/</id>
    <title>Arquillian Extension Jacoco 1.0.0.Alpha5 Released</title>
    <updated>2012-11-28T00:00:00+00:00</updated>
    <link href="http://arquillian.org/blog/2012/11/27/arquillian-extension-jacoco-1-0-0-Alpha5/" rel="alternate" type="text/html" />
    <category scheme="http://arquillian.org/blog/tags" term="release" />
    <category scheme="http://arquillian.org/blog/tags" term="extension" />
    <category scheme="http://arquillian.org/blog/tags" term="jacoco" />
    <category scheme="http://arquillian.org/blog" term="arquillian" />
    <summary>
      The Arquillian team is proud to announce the 1.0.0.Alpha5 release of the Arquillian Extension Jacoco component!
      Some of the highlights in this release
       EclEmma Eclipse Plugin support
      When you run your Arquillian tests via &#8220;Coverage As &#8594; JUnit&#8221; in Eclipse, you&#8217;ll now see the remote coverage data collected by the Arquillian Jacoco Extension right there alongside the client coverage data. In your IDE!
      It&#8217;s no longer needed to go via Maven and view the html output. Maven is of course still supported.
       We added Include/Exclude filtering
      The default filer is *.class. But you might not want to record coverage data on all the external......
    </summary>
    <content type="html">
      &lt;p&gt;The Arquillian team is proud to announce the &lt;em&gt;1.0.0.Alpha5&lt;/em&gt; release of the &lt;em&gt;Arquillian Extension Jacoco&lt;/em&gt; component!&lt;/p&gt;
      &lt;h3 class=&quot;highlights&quot;&gt;Some of the highlights in this release&lt;/h3&gt;
      &lt;p&gt;&lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; EclEmma Eclipse Plugin support&lt;/p&gt;
      &lt;p&gt;When you run your Arquillian tests via “Coverage As → JUnit” in Eclipse, you’ll now see the remote coverage data collected by the Arquillian Jacoco Extension right there alongside the client coverage data. In your IDE!&lt;/p&gt;
      &lt;p&gt;It’s no longer needed to go via Maven and view the html output. Maven is of course still supported.&lt;/p&gt;
      &lt;p&gt;&lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; We added Include/Exclude filtering&lt;/p&gt;
      &lt;p&gt;The default filer is *.class. But you might not want to record coverage data on all the external libraries in your deployment. By using Include and Exclude filters you can control what is recorded.&lt;/p&gt;
      &lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;
      &amp;lt;arquillian
        xmlns=&quot;http://jboss.org/schema/arquillian&quot;
        xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;
        xsi:schemaLocation=&quot;
              http://jboss.org/schema/arquillian
              http://jboss.org/schema/arquillian/arquillian_1_0.xsd&quot;&amp;gt;&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;  &amp;lt;extension qualifier=&quot;jacoco&quot;&amp;gt;
          &amp;lt;property name=&quot;excludes&quot;&amp;gt;my.package.some.*&amp;lt;/property&amp;gt;
          &amp;lt;property name=&quot;includes&quot;&amp;gt;my.package.some.include.*,my.package.some.other.*&amp;lt;/property&amp;gt;
        &amp;lt;/extension&amp;gt;&lt;/code&gt;
              
      &lt;code class=&quot;prettify&quot;&gt;&amp;lt;/arquillian&amp;gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;p&gt;Thanks to &lt;a href=&quot;profile://lkrejci&quot;&gt;Lukas Krejci&lt;/a&gt; for the nice filtering support.&lt;/p&gt;
      &lt;p class=&quot;important&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;em&gt;Important change&lt;/em&gt;&lt;/strong&gt;: Upgraded to Jacoco version 0.6.0.201210061924&lt;/span&gt;&lt;/p&gt;
      &lt;h3&gt;What is Arquillian?&lt;/h3&gt;
      &lt;p&gt;Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop a comprehensive suite of tests from the convenience of your IDE and run them in any IDE, build tool or continuous integration environment.&lt;/p&gt;
      &lt;h3&gt;Release details&lt;/h3&gt;
      &lt;table class=&quot;table table-bordered table-striped&quot;&gt;&lt;tbody&gt;
      &lt;tr&gt;
      &lt;th&gt;Component&lt;/th&gt;
            &lt;td&gt;
              &lt;a href=&quot;http://arquillian.org/modules/jacoco-extension/&quot;&gt;Arquillian Extension Jacoco&lt;/a&gt;
            &lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Version&lt;/th&gt;
            &lt;td&gt;
              1.0.0.Alpha5
              &lt;span class=&quot;label tag&quot;&gt;
                &lt;a href=&quot;https://api.github.com/repos/arquillian/arquillian-extension-jacoco/commits/7fe19e1f6b8e29a44d3b1bb9d3603072bc36242e&quot;&gt;view tag&lt;/a&gt;
              &lt;/span&gt;
            &lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Release date&lt;/th&gt;
            &lt;td&gt;2012-11-27&lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Released by&lt;/th&gt;
            &lt;td&gt;Aslak Knutsen&lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Compiled against&lt;/th&gt;
            &lt;td&gt;
              &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;Arquillian Core – 1.0.0.Final&lt;/li&gt;
              &lt;/ul&gt;
      &lt;/td&gt;
          &lt;/tr&gt;
      &lt;/tbody&gt;&lt;/table&gt;&lt;h3&gt;
        Published artifacts
        &lt;small&gt;org.jboss.arquillian.extension&lt;/small&gt;
      &lt;/h3&gt;
      &lt;ul&gt;
      &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-jacoco
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-jacoco/1.0.0.Alpha5/arquillian-jacoco-1.0.0.Alpha5.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-jacoco/1.0.0.Alpha5/arquillian-jacoco-1.0.0.Alpha5.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
      &lt;/ul&gt;&lt;h3&gt;
        Release notes and resolved issues
        &lt;small&gt;2&lt;/small&gt;
      &lt;/h3&gt;
      &lt;p&gt;Packaging fix&lt;/p&gt;
      &lt;dl&gt;
      &lt;dt&gt;Bug&lt;/dt&gt;
        &lt;dd&gt;
          &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1226&quot;&gt;ARQ-1226&lt;/a&gt; -         Jacoco should not package arquillian.xml&lt;/li&gt;
          &lt;/ul&gt;
      &lt;/dd&gt;
      &lt;/dl&gt;&lt;p&gt;
        Thanks to the following list of contributors:
        &lt;a href=&quot;https://community.jboss.org/people/aslak&quot;&gt;Aslak Knutsen&lt;/a&gt;
      &lt;/p&gt;
    </content>
  </entry>
  <entry>
    <id>http://arquillian.org/blog/2012/11/27/arquillian-extension-jacoco-1-0-0-Alpha4/</id>
    <title>Arquillian Extension Jacoco 1.0.0.Alpha4 Released</title>
    <updated>2012-11-28T00:00:00+00:00</updated>
    <link href="http://arquillian.org/blog/2012/11/27/arquillian-extension-jacoco-1-0-0-Alpha4/" rel="alternate" type="text/html" />
    <category scheme="http://arquillian.org/blog/tags" term="release" />
    <category scheme="http://arquillian.org/blog/tags" term="extension" />
    <category scheme="http://arquillian.org/blog/tags" term="jacoco" />
    <category scheme="http://arquillian.org/blog" term="arquillian" />
    <summary>
      The Arquillian team is proud to announce the 1.0.0.Alpha4 release of the Arquillian Extension Jacoco component!
      
      What is Arquillian?
      Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop a comprehensive suite of tests from the convenience of your IDE and run them in any IDE, build tool or continuous integration environment.
      Release details
      
        
          
           ......
    </summary>
    <content type="html">
      &lt;p&gt;The Arquillian team is proud to announce the &lt;em&gt;1.0.0.Alpha4&lt;/em&gt; release of the &lt;em&gt;Arquillian Extension Jacoco&lt;/em&gt; component!&lt;/p&gt;
      
      &lt;h3&gt;What is Arquillian?&lt;/h3&gt;
      &lt;p&gt;Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop a comprehensive suite of tests from the convenience of your IDE and run them in any IDE, build tool or continuous integration environment.&lt;/p&gt;
      &lt;h3&gt;Release details&lt;/h3&gt;
      &lt;table class=&quot;table table-bordered table-striped&quot;&gt;&lt;tbody&gt;
      &lt;tr&gt;
      &lt;th&gt;Component&lt;/th&gt;
            &lt;td&gt;
              &lt;a href=&quot;http://arquillian.org/modules/jacoco-extension/&quot;&gt;Arquillian Extension Jacoco&lt;/a&gt;
            &lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Version&lt;/th&gt;
            &lt;td&gt;
              1.0.0.Alpha4
              &lt;span class=&quot;label tag&quot;&gt;
                &lt;a href=&quot;https://api.github.com/repos/arquillian/arquillian-extension-jacoco/commits/8d49a3e28ad6c660d978950b045a3c086436d525&quot;&gt;view tag&lt;/a&gt;
              &lt;/span&gt;
            &lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Release date&lt;/th&gt;
            &lt;td&gt;2012-11-27&lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Released by&lt;/th&gt;
            &lt;td&gt;Aslak Knutsen&lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Compiled against&lt;/th&gt;
            &lt;td&gt;
              &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;Arquillian Core – 1.0.0.Final&lt;/li&gt;
              &lt;/ul&gt;
      &lt;/td&gt;
          &lt;/tr&gt;
      &lt;/tbody&gt;&lt;/table&gt;&lt;h3&gt;
        Published artifacts
        &lt;small&gt;org.jboss.arquillian.extension&lt;/small&gt;
      &lt;/h3&gt;
      &lt;ul&gt;
      &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-jacoco
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-jacoco/1.0.0.Alpha4/arquillian-jacoco-1.0.0.Alpha4.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-jacoco/1.0.0.Alpha4/arquillian-jacoco-1.0.0.Alpha4.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
      &lt;/ul&gt;&lt;h3&gt;
        Release notes and resolved issues
        &lt;small&gt;3&lt;/small&gt;
      &lt;/h3&gt;
      &lt;p&gt;EclEmma IDE support&lt;/p&gt;
      &lt;dl&gt;
      &lt;dt&gt;Feature Request&lt;/dt&gt;
        &lt;dd&gt;
          &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1219&quot;&gt;ARQ-1219&lt;/a&gt; -         Only collect remote coverage data when running in coverage mode&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1220&quot;&gt;ARQ-1220&lt;/a&gt; -         Make Remote Coverage data available to IDE&lt;/li&gt;
          &lt;/ul&gt;
      &lt;/dd&gt;
      &lt;/dl&gt;&lt;p&gt;
        Thanks to the following list of contributors:
        &lt;a href=&quot;https://community.jboss.org/people/aslak&quot;&gt;Aslak Knutsen&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/lkrejci&quot;&gt;Lukas Krejci&lt;/a&gt;
      &lt;/p&gt;
    </content>
  </entry>
  <entry>
    <id>http://arquillian.org/blog/2012/11/16/arquillian-extension-transaction-1-0-0-Alpha3/</id>
    <title>Arquillian Transaction Extension 1.0.0.Alpha3 Released</title>
    <updated>2012-11-17T00:00:00+00:00</updated>
    <link href="http://arquillian.org/blog/2012/11/16/arquillian-extension-transaction-1-0-0-Alpha3/" rel="alternate" type="text/html" />
    <category scheme="http://arquillian.org/blog/tags" term="release" />
    <category scheme="http://arquillian.org/blog/tags" term="extension" />
    <category scheme="http://arquillian.org/blog/tags" term="transaction" />
    <category scheme="http://arquillian.org/blog" term="arquillian" />
    <summary>
      The Arquillian team is proud to announce the 1.0.0.Alpha3 release of the Arquillian Transaction Extension component!
      
      What is Arquillian?
      Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop a comprehensive suite of tests from the convenience of your IDE and run them in any IDE, build tool or continuous integration environment.
      Release details
      
        
          
           ......
    </summary>
    <content type="html">
      &lt;p&gt;The Arquillian team is proud to announce the &lt;em&gt;1.0.0.Alpha3&lt;/em&gt; release of the &lt;em&gt;Arquillian Transaction Extension&lt;/em&gt; component!&lt;/p&gt;
      
      &lt;h3&gt;What is Arquillian?&lt;/h3&gt;
      &lt;p&gt;Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop a comprehensive suite of tests from the convenience of your IDE and run them in any IDE, build tool or continuous integration environment.&lt;/p&gt;
      &lt;h3&gt;Release details&lt;/h3&gt;
      &lt;table class=&quot;table table-bordered table-striped&quot;&gt;&lt;tbody&gt;
      &lt;tr&gt;
      &lt;th&gt;Component&lt;/th&gt;
            &lt;td&gt;
              &lt;a href=&quot;http://arquillian.org/modules/transaction-extension/&quot;&gt;Arquillian Transaction Extension&lt;/a&gt;
            &lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Version&lt;/th&gt;
            &lt;td&gt;
              1.0.0.Alpha3
              &lt;span class=&quot;label tag&quot;&gt;
                &lt;a href=&quot;https://api.github.com/repos/arquillian/arquillian-extension-transaction/commits/c0b588a0ff0be6905fc38489f924c235804019c1&quot;&gt;view tag&lt;/a&gt;
              &lt;/span&gt;
            &lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Release date&lt;/th&gt;
            &lt;td&gt;2012-11-16&lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Released by&lt;/th&gt;
            &lt;td&gt;Aslak Knutsen&lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Compiled against&lt;/th&gt;
            &lt;td&gt;
              &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;Arquillian Core – 1.0.2.Final&lt;/li&gt;
                &lt;li&gt;ShrinkWrap Resolvers – 2.0.0-alpha-1&lt;/li&gt;
              &lt;/ul&gt;
      &lt;/td&gt;
          &lt;/tr&gt;
      &lt;/tbody&gt;&lt;/table&gt;&lt;h3&gt;
        Published artifacts
        &lt;small&gt;org.jboss.arquillian.extension&lt;/small&gt;
      &lt;/h3&gt;
      &lt;ul&gt;
      &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-transaction-api
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-transaction-api/1.0.0.Alpha3/arquillian-transaction-api-1.0.0.Alpha3.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-transaction-api/1.0.0.Alpha3/arquillian-transaction-api-1.0.0.Alpha3.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-transaction-bom
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-transaction-bom/1.0.0.Alpha3/arquillian-transaction-bom-1.0.0.Alpha3.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-transaction-impl-base
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-transaction-impl-base/1.0.0.Alpha3/arquillian-transaction-impl-base-1.0.0.Alpha3.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-transaction-impl-base/1.0.0.Alpha3/arquillian-transaction-impl-base-1.0.0.Alpha3.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-transaction-jta
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-transaction-jta/1.0.0.Alpha3/arquillian-transaction-jta-1.0.0.Alpha3.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-transaction-jta/1.0.0.Alpha3/arquillian-transaction-jta-1.0.0.Alpha3.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-transaction-spi
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-transaction-spi/1.0.0.Alpha3/arquillian-transaction-spi-1.0.0.Alpha3.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-transaction-spi/1.0.0.Alpha3/arquillian-transaction-spi-1.0.0.Alpha3.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
      &lt;/ul&gt;&lt;h3&gt;
        Release notes and resolved issues
        &lt;small&gt;3&lt;/small&gt;
      &lt;/h3&gt;
      &lt;p&gt;Container Transactions and Default mode&lt;/p&gt;
      &lt;dl&gt;
      &lt;dt&gt;Enhancement&lt;/dt&gt;
        &lt;dd&gt;
          &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1185&quot;&gt;ARQ-1185&lt;/a&gt; -         Transaction extension should also work for in-container tests&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1186&quot;&gt;ARQ-1186&lt;/a&gt; -         Default transaction mode should be configurable through arquillian.xml&lt;/li&gt;
          &lt;/ul&gt;
      &lt;/dd&gt;
      &lt;/dl&gt;&lt;p&gt;
        Thanks to the following list of contributors:
        &lt;a href=&quot;https://community.jboss.org/people/bmajsak&quot;&gt;Bartosz Majsak&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/aslak&quot;&gt;Aslak Knutsen&lt;/a&gt;
      &lt;/p&gt;
    </content>
  </entry>
  <entry>
    <id>http://arquillian.org/blog/2012/11/15/devoxx-2012-hackergarten-overdrive/</id>
    <title>Devoxx 2012 Hackergarten Overdrive!</title>
    <updated>2012-11-16T00:00:00+00:00</updated>
    <link href="http://arquillian.org/blog/2012/11/15/devoxx-2012-hackergarten-overdrive/" rel="alternate" type="text/html" />
    <category scheme="http://arquillian.org/blog/tags" term="event" />
    <category scheme="http://arquillian.org/blog/tags" term="testing" />
    <category scheme="http://arquillian.org/blog/tags" term="community" />
    <category scheme="http://arquillian.org/blog/tags" term="2012" />
    <category scheme="http://arquillian.org/blog/tags" term="nonrelease" />
    <category scheme="http://arquillian.org/blog" term="arquillian" />
    <summary>
      Kick-off
       Each project represented at Hackergarten briefly introduced itself and presented ideas to hack on. The presence of Red Hat community projects was very strong (~75%). We&#8217;re happy to report that there was lots of interest in Arquillian. It received the most votes for hacking, with JBoss Forge drawing in the second most.
      General impressions
      The Hackergarten was held in open areas at the back of the pavilion. The areas gave plenty of privacy, but also gave people freedom to move around. We didn&#8217;t have to experience that awkwardness of peeking through a door or the distraction of doors opening and closing.......
    </summary>
    <content type="html">
      &lt;h3&gt;Kick-off&lt;/h3&gt;
      &lt;p&gt;&lt;img src=&quot;http://arquillian.org/images/blog/devoxx2012/hackergarten-voting.jpg&quot; class=&quot;pull-right&quot; alt=&quot;&quot;&gt; Each project represented at Hackergarten briefly introduced itself and presented ideas to hack on. The presence of Red Hat community projects was very strong (~75%). We’re happy to report that there was lots of interest in Arquillian. It received the most votes for hacking, with JBoss Forge drawing in the second most.&lt;/p&gt;
      &lt;h3&gt;General impressions&lt;/h3&gt;
      &lt;p&gt;The Hackergarten was held in open areas at the back of the pavilion. The areas gave plenty of privacy, but also gave people freedom to move around. We didn’t have to experience that awkwardness of peeking through a door or the distraction of doors opening and closing. We were able to do demos in one section without affecting hacks or discussions going on in other sections because there was enough ambient noise, mostly music from the trade floor. The wired connections provided by switches at each table removed the distraction of getting on wifi, although it took a bit of time and some shuffling around in the morning to figure all that out.&lt;/p&gt;
      &lt;p&gt;Once we knew to get everyone plugged into the switches, we were off to the hacking races!&lt;/p&gt;
      &lt;h3&gt;Pictures!&lt;/h3&gt;
      &lt;p&gt;&lt;img src=&quot;http://arquillian.org/images/blog/devoxx2012/thucydides-show-and-tell.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
      &lt;p&gt;See more pictures in &lt;a href=&quot;https://plus.google.com/u/0/photos/117676046064764850842/albums/5810277955405607153&quot;&gt;Album 1&lt;/a&gt; and &lt;a href=&quot;https://plus.google.com/u/0/photos/117676046064764850842/albums/5810332735729924609&quot;&gt;Album 2&lt;/a&gt;.&lt;/p&gt;
      &lt;div style=&quot;float: right; width: 375px;&quot;&gt;
      &lt;h3&gt;Hacking Overview (related to testing)&lt;/h3&gt;
      &lt;div class=&quot;abstracts&quot;&gt;
      &lt;h3&gt;Code Contributions&lt;/h3&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;a href=&quot;https://github.com/papousek/arquillian-extension-fluentlenium&quot;&gt;Arquillian Drone + FluentLenium&lt;/a&gt;
      	&lt;ul&gt;
      &lt;li&gt;Related hack: &lt;a href=&quot;https://github.com/MathildeLemee/thucydides/tree/fluentLenium&quot;&gt;Thucydides + FluentLenium&lt;/a&gt;
      &lt;/li&gt;
      	&lt;/ul&gt;
      &lt;/li&gt;
      	&lt;li&gt;&lt;a href=&quot;https://github.com/aslakknutsen/arquillian-gradle-plugin&quot;&gt;Arquillian Gradle Plugin&lt;/a&gt;&lt;/li&gt;
      	&lt;li&gt;
      &lt;a href=&quot;https://github.com/bartoszmajsak/devoxx12-ape&quot; title=&quot;persistence&quot;&gt;Arquillian Ape&lt;/a&gt; demo code&lt;/li&gt;
      	&lt;li&gt;Improvements to &lt;a href=&quot;https://github.com/bartoszmajsak/arquillian-extension-transaction/commit/a4e3ee02953053d9c05b4f821279d2ad192b4753&quot;&gt;Arquillian Transaction&lt;/a&gt;
      &lt;/li&gt;
      	&lt;li&gt;
      &lt;a href=&quot;https://github.com/arquillian/arquillian-container-cloudbees/commit/2c31cd22a244337babc433cf233215cd0b2f7adb&quot;&gt;EJB injection&lt;/a&gt; for &lt;a href=&quot;https://github.com/arquillian/arquillian-container-cloudbees&quot;&gt;Arquillian CloudBees adapter&lt;/a&gt;
      &lt;/li&gt;
      	&lt;li&gt;Bootstrap API for Thucydides&lt;/li&gt;
      	&lt;li&gt;Bootstrap API for NoSQLUnit&lt;br&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      
      &lt;div class=&quot;abstracts&quot;&gt;
      &lt;h3&gt;Design Discussions&lt;/h3&gt;
      &lt;ul&gt;
      &lt;li&gt;Arquillian Drone + Thucydides&lt;/li&gt;
      	&lt;li&gt;Arquillian Ape + NoSQLUnit&lt;/li&gt;
      	&lt;li&gt;Drools rules, Drools decision tables and Drools planner for filtering, prioritizing and coordinating distribution of tests in a suite&lt;/li&gt;
      	&lt;li&gt;IntelliJ support for Arquillian, JBoss Forge&lt;/li&gt;
      	&lt;li&gt;Using the web browser as a “container” to incorporate JavaScript tests into a Drone test&lt;/li&gt;
      	&lt;li&gt;Juzu demo and shout out to use of Arquillian for testing&lt;/li&gt;
      	&lt;li&gt;Jersey looking into adoption of Arquillian in test suite&lt;/li&gt;
      	&lt;li&gt;Using Thucydides for CDI test suite and supporting spec documentation&lt;br&gt;
      &lt;/li&gt;
      &lt;/ul&gt;
      &lt;/div&gt;
      
      &lt;/div&gt;
      &lt;h3&gt;Activity Stream (related to testing)&lt;/h3&gt;
      &lt;ul&gt;
      &lt;li&gt;At the start of the event, I suggested the hack idea to integrate Arquilliun Drone and &lt;a href=&quot;https://github.com/FluentLenium/FluentLenium&quot;&gt;FluentLenium&lt;/a&gt; to &lt;a href=&quot;https://github.com/papousek&quot;&gt;Jan Papoušek&lt;/a&gt;
      	&lt;ul&gt;
      &lt;li&gt;Jan and I introduced ourselves to &lt;a href=&quot;https://github.com/MathildeLemee&quot;&gt;Mathilde Lemee&lt;/a&gt; and they got to work on the integration straight away, starting off by sharing with each other how their respective projects worked.&lt;/li&gt;
      		&lt;li&gt;By days end, they completed a &lt;a href=&quot;https://github.com/papousek/arquillian-extension-fluentlenium&quot;&gt;working integration&lt;/a&gt;
      &lt;/li&gt;
      		&lt;li&gt;Mathilde also &lt;a href=&quot;https://github.com/MathildeLemee/thucydides/tree/fluentLenium&quot;&gt;integrated FluentLenium with Thucydides&lt;/a&gt; (“2 CDs”); stay tuned because that integration and the integration with Drone may become one and the same&lt;/li&gt;
      		&lt;li&gt;In both cases, the integration with FluentLenium was so straightforward (and thus hackable) because of the nice &lt;a href=&quot;https://github.com/FluentLenium/FluentLenium/blob/master/fluentlenium-core/src/main/java/org/fluentlenium/core/FluentAdapter.java&quot;&gt;abstraction layer&lt;/a&gt; Mathilde created that handled bootstrapping FluentLenium&lt;/li&gt;
      	&lt;/ul&gt;
      &lt;/li&gt;
      	&lt;li&gt;Aslak hacked with &lt;a href=&quot;https://twitter.com/hans_d&quot;&gt;Hans Dockter&lt;/a&gt;, creator of Gradle, on a &lt;a href=&quot;https://github.com/aslakknutsen/arquillian-gradle-plugin&quot;&gt;gradle deployment plugin&lt;/a&gt; that uses Arquillian Containers to handle life cycle of dozens of containers (application servers, servlet containers and beyond)&lt;/li&gt;
      	&lt;li&gt;
      &lt;a href=&quot;http://twitter.com/majson&quot;&gt;Bartosz Majsak&lt;/a&gt; hacked on a demo for &lt;a href=&quot;https://github.com/arquillian/arquillian-extension-persistence&quot;&gt;Arquillian Ape&lt;/a&gt; and &lt;a href=&quot;https://github.com/bartoszmajsak/arquillian-extension-transaction/commit/a4e3ee02953053d9c05b4f821279d2ad192b4753&quot;&gt;enhanced&lt;/a&gt; &lt;a href=&quot;https://github.com/arquillian/arquillian-extension-transaction&quot;&gt;Arquillian Transaction&lt;/a&gt; to work both in-container and embedded&lt;/li&gt;
      	&lt;li&gt;I spoke with two of the IntelliJ developers (Peter and Yann) about:
      	&lt;ul&gt;
      &lt;li&gt;a plugin for Arquillian (similar to the &lt;a href=&quot;https://github.com/snjeza/arquillian-eclipse&quot;&gt;Eclipse Arquillian plugin&lt;/a&gt;)&lt;/li&gt;
      		&lt;li&gt;adding an embedded Forge shell with UI interplay (similar to the JBoss Forge view in JBoss Tools)&lt;/li&gt;
      	&lt;/ul&gt;
      &lt;/li&gt;
      	&lt;li&gt;I chatted with &lt;a href=&quot;https://twitter.com/julienviet&quot;&gt;Julien Viet&lt;/a&gt; about:
      	&lt;ul&gt;
      &lt;li&gt;use of &lt;a href=&quot;https://github.com/arquillian/arquillian-extension-portal&quot;&gt;Arquillian for testing portlets&lt;/a&gt; in isolation and within the portal container&lt;/li&gt;
      		&lt;li&gt;treating the web browser as a “container” to incorporate JavaScript testing into a Drone test (&lt;a href=&quot;https://github.com/lfryc/arquillian-qunit&quot;&gt;prototype&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/wiki/GSoC12Ideas#Automate_JavaScript_tests_in_an_integration_environment_using_Arquillian&quot;&gt;proposal&lt;/a&gt;)&lt;/li&gt;
      	&lt;/ul&gt;
      &lt;/li&gt;
      	&lt;li&gt;Later in the day, Julien gave a presentation and demo of &lt;a href=&quot;https://github.com/juzu/juzu&quot;&gt;Juzu&lt;/a&gt;, excited to say it’s &lt;a href=&quot;https://github.com/juzu/juzu/blob/master/core/src/test/java/juzu/test/AbstractWebTestCase.java&quot;&gt;tested w/ Arquillian Core and Arquillian Drone&lt;/a&gt;
      &lt;/li&gt;
      	&lt;li&gt;I brainstormed with &lt;a href=&quot;https://github.com/ge0ffrey&quot;&gt;Geoffrey De Smet&lt;/a&gt;, lead of Drools Planner, about:
      	&lt;ul&gt;
      &lt;li&gt;using rules to handle the filtering decision for tests&lt;/li&gt;
      		&lt;li&gt;the role decision tables can play in declaring conditions for which tests to run&lt;/li&gt;
      		&lt;li&gt;optimizing test suite execution using Drools Planner and distributing tests over a grid&lt;/li&gt;
      	&lt;/ul&gt;
      &lt;/li&gt;
      	&lt;li&gt;I spoke with &lt;a href=&quot;http://twitter.com/wakeleo&quot;&gt;John Smart&lt;/a&gt; about Arquillian Core and Arquillian Drone integration with &lt;a href=&quot;http://thucydides.info&quot;&gt;Thucydides&lt;/a&gt;
      	&lt;ul&gt;
      &lt;li&gt;We discussed how much the two projects align and what it would take to integrate&lt;/li&gt;
      		&lt;li&gt;We concluded the first step is adding a bootstrap API in Thucydides, which he began to flesh out, that could be hooked to the Arquillian event model and all the integrations with individual test runners can be done once in Arquillian&lt;/li&gt;
      		&lt;li&gt;We talked about how Drone could likely provide management of WebDriver&lt;/li&gt;
      		&lt;li&gt;John Smart has been busy all week working on a bootstrap API for Thucydides (hacking on it with an ATDD approach, of course)&lt;/li&gt;
      	&lt;/ul&gt;
      &lt;/li&gt;
      	&lt;li&gt;
      &lt;a href=&quot;https://github.com/koentsje&quot;&gt;Koen Aers&lt;/a&gt; gave a demonstration of the JBoss Forge integration in JBoss Tools, talked about each of elements it brings to the Forge experience in the IDE
      	&lt;ul&gt;
      &lt;li&gt;Koen wrote his first “Hello, World” IntelliJ plugin to get spun up and prepare to help with the integration&lt;/li&gt;
      		&lt;li&gt;IntelliJ said they would put it on their roadmap and support the effort where possible&lt;/li&gt;
      	&lt;/ul&gt;
      &lt;/li&gt;
      	&lt;li&gt;
      &lt;a href=&quot;https://github.com/lordofthejars&quot;&gt;Alex Soto&lt;/a&gt; and Bartosz discussed integrating NoSQLUnit into Arquillian Ape (peristence extension)
      	&lt;ul&gt;
      &lt;li&gt;These projects closely align and it pushes Arquillian’s definition of container management forward&lt;/li&gt;
      		&lt;li&gt;I told Marek Jelen about Alex’s &lt;a href=&quot;https://github.com/lordofthejars/nosql-unit/tree/master/nosqlunit-demo&quot;&gt;NoSQLUnit demo&lt;/a&gt; of testing MongoDB on OpenShift through the port forwarding setup by JBoss Tools; a blog entry may be in the works;&lt;/li&gt;
      		&lt;li&gt;Arquillian + NoSQLUnit has lots of application, one of which may be testing NoSQL backends in the Infinispan project&lt;/li&gt;
      	&lt;/ul&gt;
      &lt;/li&gt;
      	&lt;li&gt;
      &lt;a href=&quot;http://twitter.com/alexishassler&quot;&gt;Alexis Hassler&lt;/a&gt; was busy improving the Arquillian adapter for CloudBees by adding &lt;a href=&quot;https://github.com/arquillian/arquillian-container-cloudbees/commit/2c31cd22a244337babc433cf233215cd0b2f7adb&quot;&gt;EJB injection support&lt;/a&gt;.&lt;/li&gt;
      	&lt;li&gt;Aslak discussed with JAX-RS lead about using Arquillian for JAX-RS TCK; not likely soon, but Jersey is entertaining idea of using Arquillian to test Jersey (JAX-RS reference implementation)&lt;/li&gt;
      	&lt;li&gt;I spoke with Paul Bakker briefly about combining the &lt;a href=&quot;https://github.com/forge/plugin-arquillian&quot;&gt;Forge Arquillian plugin&lt;/a&gt; and the &lt;a href=&quot;https://github.com/mojavelinux/forge-plugin-arquillian-extensions&quot;&gt;Forge Arquillian Extension plugin&lt;/a&gt; into one code base&lt;/li&gt;
      	&lt;li&gt;I brainstormed with &lt;a href=&quot;http://twitter.com/dblevins&quot;&gt;David Blevins&lt;/a&gt;, lead of TomEE, about the role a test suite can play in the early and in-progress development of a specification
      	&lt;ul&gt;
      &lt;li&gt;proposed idea of using a ATDD approach where tests could be not only marked as pending (before a ref impl is in place), but also proposed, open question and alternative&lt;/li&gt;
      		&lt;li&gt;agreed that using tests can focus the discussion about the spec, clarify ambiguities &amp;amp; resolve different interpretations&lt;/li&gt;
      		&lt;li&gt;John Smart gave a demo of Thucydides and we contemplated using it for the CDI test suite&lt;/li&gt;
      	&lt;/ul&gt;
      &lt;/li&gt;
      &lt;/ul&gt;&lt;h3&gt;Wrap-up&lt;/h3&gt;
      &lt;p&gt;As the event wound down, I discussed with Andres Almiray, who organized the Hackergarten, about what went on during the day, whether Hackergarten accomplished his goals. He talked about the importance of giving people a chance to make a concrete contribution, give them a win to take home with them, lower perception of a barrier to contributing. I talked to him about the fact that Hackergarten is a catalyst for ideas, some of which come into play before the event, already successful and is also ongoing throughout the week, so we’ll only know total impact once conference is over. Some ideas take time to soak. I can attest, we’re still hacking ;)&lt;/p&gt;
      &lt;p&gt;Finally, Arquillian was invited to join the &lt;a href=&quot;http://steveonjava.com/nighthacking/&quot;&gt;Nighthacking Tour&lt;/a&gt; hosted by Steven Chin on on Wednesday night, so look for that coverage when it comes online.&lt;/p&gt;
      &lt;h3&gt;What people were tweeting…&lt;/h3&gt;
      &lt;ul&gt;
      &lt;li&gt;Bartosz Majsak (&lt;a href=&quot;http://twitter.com/majson&quot;&gt;@majson&lt;/a&gt;) &lt;a href=&quot;https://twitter.com/majson/status/268386503560949760&quot;&gt;posted&lt;/a&gt;: #devoxx #arquillian @aslakknutsen you have some pull requests&lt;/li&gt;
      	&lt;li&gt;Markus Eisele (&lt;a href=&quot;http://twitter.com/myfear&quot;&gt;@myfear&lt;/a&gt;) &lt;a href=&quot;https://twitter.com/myfear/status/268326931567628289&quot;&gt;posted&lt;/a&gt;: What could be the next cool #Arquillian feature? creative @aslakknutsen at the  #hackergarden http://twitpic.com/bcv2lv&lt;/li&gt;
      	&lt;li&gt;Alexis Hassler (&lt;a href=&quot;http://twitter.com/AlexisHassler&quot;&gt;@AlexisHassler&lt;/a&gt;) &lt;a href=&quot;https://twitter.com/AlexisHassler/status/268327078951264257&quot;&gt;posted&lt;/a&gt;: GREEN BAR on my #arquillian test. Cloudbees Container Adapter is getting further, thanks to @majson &amp;amp; @aslakknutsen&lt;/li&gt;
      	&lt;li&gt;Aslak Knutsen (&lt;a href=&quot;http://twitter.com/aslakknutsen&quot;&gt;@aslakknutsen&lt;/a&gt;) &lt;a href=&quot;https://twitter.com/aslakknutsen/status/268295841536700416&quot;&gt;posted&lt;/a&gt;: Hacking #Arquillian Container control plugin for #SBT &amp;amp; #Leiningen. #Gradle next…&lt;/li&gt;
      	&lt;li&gt;Jan Papousek (&lt;a href=&quot;http://twitter.com/jan_papousek&quot;&gt;@jan_papousek&lt;/a&gt;) &lt;a href=&quot;https://twitter.com/jan_papousek/status/268326970113269761&quot;&gt;posted&lt;/a&gt;: @MathildeLemee the first attempt of integration FluentLenium and Arquillian is here https://github.com/papousek/arquillian-extension-fluentlenium&lt;/li&gt;
      	&lt;li&gt;Mathilde Lemee (&lt;a href=&quot;http://twitter.com/MathildeLemee&quot;&gt;@MathildeLemee&lt;/a&gt;) &lt;a href=&quot;https://twitter.com/MathildeLemee/status/268293223762509825&quot;&gt;posted&lt;/a&gt;: integrating FluentLenium to Arquillian Drone with @jan_papousek&lt;/li&gt;
      	&lt;li&gt;John Smart (&lt;a href=&quot;http://twitter.com/wakaleo&quot;&gt;@wakaleo&lt;/a&gt;) &lt;a href=&quot;https://twitter.com/wakaleo/status/268361581530841089&quot;&gt;posted&lt;/a&gt;: Awesome concentrated hacking session with @MathildeLemee: integrating #thucydides and FluentLenium in less than 10 lines of code.&lt;/li&gt;
      	&lt;li&gt;Alex Soto (&lt;a href=&quot;http://twitter.com/alexsotob&quot;&gt;@alexsotob&lt;/a&gt;) &lt;a href=&quot;https://twitter.com/alexsotob/status/268474599174447104&quot;&gt;posted&lt;/a&gt;: @majson Back home ty Arquillian guys for treat me as one of your team&lt;/li&gt;
      &lt;/ul&gt;
    </content>
  </entry>
  <entry>
    <id>http://arquillian.org/blog/2012/11/08/get_test_infected_at_devoxx_2012/</id>
    <title>Get Test-Infected at Devoxx 2012</title>
    <updated>2012-11-09T00:00:00+00:00</updated>
    <link href="http://arquillian.org/blog/2012/11/08/get_test_infected_at_devoxx_2012/" rel="alternate" type="text/html" />
    <category scheme="http://arquillian.org/blog/tags" term="event" />
    <category scheme="http://arquillian.org/blog/tags" term="testing" />
    <category scheme="http://arquillian.org/blog/tags" term="community" />
    <category scheme="http://arquillian.org/blog/tags" term="2012" />
    <category scheme="http://arquillian.org/blog/tags" term="nonrelease" />
    <category scheme="http://arquillian.org/blog" term="arquillian" />
    <summary>
      It&#8217;s no suprise we&#8217;re obsessed with testing here in the Arquillian Galaxy. We&#8217;re eternally interested in sharpening our testing weapons, learning about tools that advance the frontline against the bugs, and discovering all the deep, dark code caves where bugs try to hide from testers.
      This year, Devoxx, one of the premier Java developer conferences, is bringing together a large group of testing experts. Listed below are just some of the labs, workshops, and BOFs being presented at Devoxx that will enhance your bug hunting skills.
      Monday, November 12, 2012
      
      NoSQLUnit. Testing Your NoSQL Databases.
      Alex Soto, Tools in Action
      Unit tests should follow the......
    </summary>
    <content type="html">
      &lt;p&gt;It&amp;#8217;s no suprise we&amp;#8217;re obsessed with testing here in the Arquillian Galaxy. We&amp;#8217;re eternally interested in sharpening our testing weapons, learning about tools that advance the frontline against the bugs, and discovering all the deep, dark code caves where bugs try to hide from testers.&lt;/p&gt;
      &lt;p&gt;This year, &lt;a href=&quot;http://www.devoxx.com/display/DV12/Home&quot;&gt;Devoxx&lt;/a&gt;, one of the premier Java developer conferences, is bringing together a large group of testing experts. Listed below are just some of the labs, workshops, and BOFs being presented at Devoxx that will enhance your bug hunting skills.&lt;/p&gt;
      &lt;p&gt;&lt;strong&gt;Monday, November 12, 2012&lt;/strong&gt;&lt;/p&gt;
      &lt;div class=&quot;abstracts&quot;&gt;
      &lt;h3&gt;NoSQLUnit. Testing Your NoSQL Databases.&lt;/h3&gt;
      &lt;p class=&quot;speakers&quot;&gt;&lt;a href=&quot;http://www.devoxx.com/display/DV12/Alex+Soto&quot;&gt;Alex Soto&lt;/a&gt;, Tools in Action&lt;/p&gt;
      &lt;p&gt;Unit tests should follow the FIRST rules (Fast, Isolated, Repeatable, Self-Validated and Timely). When persistence layer is under test, fast and isolated rules are the most violated. For relational database management systems, embedded databases and DbUnit framework exist to help us to not break them, but there is no like DBUnit framework for heterogeneous NoSQL systems. &lt;a href=&quot;http://www.devoxx.com/display/DV12/NoSQLUnit.+Testing+your+NoSQL+databases&quot;&gt;More &amp;#187;&lt;/a&gt;&lt;/p&gt;
      &lt;h3&gt;Blast Your WebApp with Galting&lt;/h3&gt;
      &lt;p class=&quot;speakers&quot;&gt;&lt;a href=&quot;http://www.devoxx.com/display/DV11/Stephane+Landelle&quot;&gt;Stephane Landelle&lt;/a&gt; and &lt;a href=&quot;http://www.devoxx.com/display/DV12/Romain+Sertelon&quot;&gt;Romain Sertelon&lt;/a&gt;, Tools in Action&lt;/p&gt;
      &lt;p&gt;Your application is going live tomorrow, the new marketing campaign is about to start, you enjoy a margarita, life is good. Yet something keeps bugging you, are you sure your webapp won&amp;#8217;t crash down? &amp;#8220;Damn, forgot about the stress tests!&amp;#8221; Traffic grows, data grows, our applications have to withstand increasing loads, so stress tests are more and more of a critical issue. &lt;a href=&quot;http://www.devoxx.com/display/DV12/Blast+your+webapp+with+Gatling&quot;&gt;More &amp;#187;&lt;/a&gt;&lt;/p&gt;
      &lt;h3&gt;The Bugs Are Building Another Death Star&lt;/h3&gt;
      &lt;p class=&quot;speakers&quot;&gt;&lt;a href=&quot;http://lanyrd.com/2012/devoxx/szpdf/&quot;&gt;Multi-framework, battle hardened testers including members of Ike&amp;#8217;s Crew&lt;/a&gt;, BOF&lt;/p&gt;
      &lt;p&gt;The bugs are building another Death Star. What&amp;#8217;s our invasion plan?&lt;/p&gt;
      &lt;p&gt;Bugs don&amp;#8217;t rest when you go to sleep. In fact, you should worry most when they are left alone. They are tireless creatures, hard at work to destroy your home. In software, it&amp;#8217;s no different. We are at constant war with bugs. News flash, the bugs are building another Death Star and we&amp;#8217;re just standing by! Let&amp;#8217;s plot an invasion plan during this moderated discussion on the topic of enterprise testing. &lt;a href=&quot;http://www.devoxx.com/display/DV12/The+bugs+are+building+another+Death+Star&quot;&gt;More &amp;#187;&lt;/a&gt;&lt;/p&gt;
      &lt;/div&gt;
      &lt;p&gt;&lt;strong&gt;Tuesday, November 13, 2012&lt;/strong&gt;&lt;/p&gt;
      &lt;div class=&quot;abstracts&quot;&gt;
      &lt;h3&gt;To ATDD and Beyond! Better Automated Acceptance Testing on the JVM&lt;/h3&gt;
      &lt;p class=&quot;speakers&quot;&gt;&lt;a href=&quot;http://www.devoxx.com/display/DV12/John+Smart&quot;&gt;John Smart&lt;/a&gt;, University&lt;/p&gt;
      &lt;p&gt;Test Driven Development is a game changer for developers, but Automated Acceptance Testing (ATDD) is a game changer for the whole team! More than just a testing technique, Automated Acceptance Testing is both a collaboration tool and a vital step on the road to Continuous Delivery. In this talk, you will see a real-world demo applying practical ATDD techniques to real-world projects using JBehave, Selenium 2 and Thucydides. &lt;a href=&quot;http://www.devoxx.com/display/DV12/To+ATDD+and+beyond%21+Better+Automated+Acceptance+Testing+on+the+JVM&quot;&gt;More &amp;#187;&lt;/a&gt;&lt;/p&gt;
      &lt;h3&gt;Testacular &amp;#8211; Spectacular Test Runner for JavaScript&lt;/h3&gt;
      &lt;p class=&quot;speakers&quot;&gt;&lt;a href=&quot;http://www.devoxx.com/display/DV12/Vojta+Jina&quot;&gt;Vojta Jina&lt;/a&gt;, Tools in Action&lt;/p&gt;
      &lt;p&gt;Introduction to Testacular &amp;#8211; test runner that makes makes testing JavaScript applications in real browsers frictionless and enjoyable. &lt;a href=&quot;http://www.devoxx.com/display/DV12/Testacular+-+Spectacular+Test+Runner+for+JavaScript&quot;&gt;More &amp;#187;&lt;/a&gt;&lt;/p&gt;
      &lt;h3&gt;JUnit Rules&lt;/h3&gt;
      &lt;p class=&quot;speakers&quot;&gt;&lt;a href=&quot;http://www.devoxx.com/display/DV12/Jens+Schauder&quot;&gt;Jens Schauder&lt;/a&gt;, Tools in Action&lt;/p&gt;
      &lt;p&gt;We all know JUnit rulez. But do you know JUnit Rules? Rules are a not so well known feature of JUnit. They allow us to encapsulate setup and teardown in a reusable package. You can manipulate the way tests get executed as well. &lt;a href=&quot;http://www.devoxx.com/display/DV12/JUnit+Rules&quot;&gt;More &amp;#187;&lt;/a&gt;&lt;/p&gt;
      &lt;/div&gt;
      &lt;p&gt;&lt;strong&gt;Wednesday, November 14, 2012&lt;/strong&gt;&lt;/p&gt;
      &lt;div class=&quot;abstracts&quot;&gt;
      &lt;h3&gt;Testing Java Persistence Layer Done Right with Arquillian&lt;/h3&gt;
      &lt;p class=&quot;speakers&quot;&gt;&lt;a href=&quot;http://www.devoxx.com/display/DV12/Bartosz+Majsak&quot;&gt;Bartosz Majsak&lt;/a&gt;, Quickie&lt;/p&gt;
      &lt;p&gt;The Persistence Layer is one of the most crucial parts of enterprise applications, and we use many different frameworks and patterns to keep it clean. We write sophisticated queries and use optimization techniques to give our end users the greatest possible experience. So why is Persistence very often skipped in testing efforts? Is it really that complex and painful to setup? The Arquillian Persistence Extension removes that burden and boilerplate to make you a happy and productive programmer again. &lt;a href=&quot;http://www.devoxx.com/display/DV12/Testing+Java+Persistence+Layer+Done+Right+with+Arquillian&quot;&gt;More &amp;#187;&lt;/a&gt;&lt;/p&gt;
      &lt;h3&gt;Behaviour Driven Development on the JVM &amp;#8211; A State of the Union&lt;/h3&gt;
      &lt;p class=&quot;speakers&quot;&gt;&lt;a href=&quot;http://www.devoxx.com/display/DV12/John+Smart&quot;&gt;John Smart&lt;/a&gt;, Conference&lt;/p&gt;
      &lt;p&gt;Behavior Driven Development (BDD) is an increasingly popular variation on Test Driven Development, which helps developers think more about what they are testing, in terms of &amp;#8220;executable specifications&amp;#8221; rather than conventional tests. But there are dozens of BDD tools for the JVM out there: how do you know what to use, and when? &lt;a href=&quot;http://www.devoxx.com/display/DV12/Behaviour+Driven+Development+on+the+JVM+-+a+State+of+the+Union&quot;&gt;More &amp;#187;&lt;/a&gt;&lt;/p&gt;
      &lt;/div&gt;
      &lt;p&gt;&lt;strong&gt;Thursday, November 15, 2012&lt;/strong&gt;&lt;/p&gt;
      &lt;div class=&quot;abstracts&quot;&gt;
      &lt;h3&gt;Unitils: Full Stack Testing Solution for Enterprise Applications&lt;/h3&gt;
      &lt;p class=&quot;speakers&quot;&gt;&lt;a href=&quot;http://www.devoxx.com/display/DV12/Thomas+De+rycke&quot;&gt;Thomas De Rycke&lt;/a&gt; and &lt;a href=&quot;http://www.devoxx.com/display/DV12/Jeroen+Horemans&quot;&gt;Jeroen Horemans&lt;/a&gt;, Conference&lt;/p&gt;
      &lt;p&gt;Automated testing is the key to developing high quality software and maintainable codebases. How can we automate testing when data and database schemes are constantly evolving? How can we test infrastructure related components like automated e-mails without actually sending them? &lt;a href=&quot;http://www.devoxx.com/display/DV12/Unitils+++Full+stack+testing+solution+for+enterpise+applications&quot;&gt;More &amp;#187;&lt;/a&gt;&lt;/p&gt;
      &lt;h3&gt;Do You REST Assured?&lt;/h3&gt;
      &lt;p class=&quot;speakers&quot;&gt;&lt;a href=&quot;http://www.devoxx.com/display/DV12/Johan+Haleby&quot;&gt;Johan Haleby&lt;/a&gt;, Quickie&lt;/p&gt;
      &lt;p&gt;Today it&amp;#8217;s easy to expose services as REST/HTTP with frameworks like Jersey and Spring but validating that the server actually behaves as expected can be cumbersome in Java. REST Assured is an open source Java DSL that allows you to avoid boiler-plate code to make requests and validate even complex responses in a simple manner. &lt;a href=&quot;http://www.devoxx.com/display/DV12/Do+you+REST+Assured&quot;&gt;More &amp;#187;&lt;/a&gt;&lt;/p&gt;
      &lt;h3&gt;JavaScript Unit Testing and Build Integration&lt;/h3&gt;
      &lt;p class=&quot;speakers&quot;&gt;&lt;a href=&quot;http://www.devoxx.com/display/DV12/Wouter+Groeneveld&quot;&gt;Wouter Groeneveld&lt;/a&gt;, Conference&lt;/p&gt;
      &lt;p&gt;Unit testing has become very popular with the rise of test-first software development. Most enterprise applications contain only a small portion of javascript code, almost always completely untested. We have seen a steady increase of javascript code and frameworks lately, but for most people it&amp;#8217;s still unclear how to (unit) test javascript, and most of all how to properly integrate these within your build environment next to other JUnit test cases. &lt;a href=&quot;http://www.devoxx.com/pages/viewpage.action?pageId=6391754&quot;&gt;More &amp;#187;&lt;/a&gt;&lt;/p&gt;
      &lt;h3&gt;Apache TomEE, Java EE 6 Web Profile on Tomcat&lt;/h3&gt;
      &lt;p class=&quot;speakers&quot;&gt;&lt;a href=&quot;http://www.devoxx.com/display/DV12/David+Blevins&quot;&gt;David Blevins&lt;/a&gt;, Conference&lt;/p&gt;
      &lt;p&gt;Apache TomEE is the Java EE 6 Web Profile certified version of Apache Tomcat and combines the simplicity of Tomcat with the power of Java EE. The first half of this session introduces TomEE and shows how Tomcat applications leveraging Java EE technologies can become simpler and lighter with a Java EE 6 certified solution built right on Tomcat. &lt;a href=&quot;http://www.devoxx.com/display/DV12/Apache+TomEE%2C+Java+EE+6+Web+Profile+on+Tomcat&quot;&gt;More &amp;#187;&lt;/a&gt;&lt;/p&gt;
      &lt;h3&gt;Spock: Boldly Go Where No Test Has Gone Before&lt;/h3&gt;
      &lt;p class=&quot;speakers&quot;&gt;&lt;a href=&quot;http://www.devoxx.com/display/DV12/Andres+Almiray&quot;&gt;Andres Almiray&lt;/a&gt;, Quickie&lt;/p&gt;
      &lt;p&gt;Testing, testing, testing. We all know it has to be done but no one likes to do it. Enter Spock, a revolutionary way to writing (and thinking about) test code, that promises to wash away the pain and bring back the fun. &lt;a href=&quot;http://www.devoxx.com/display/DV12/Spock++boldly+go+where+no+test+has+gone+before&quot;&gt;More &amp;#187;&lt;/a&gt;&lt;/p&gt;
      &lt;/div&gt;
      &lt;p&gt;We look forword to hearing what testing tools, techniques and strategies you discover at Devoxx 2012.&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <id>http://arquillian.org/blog/2012/11/05/hack_idea_integrate_thucydides_and_arquillian/</id>
    <title>Hack Idea: Fully Automate ATDD by Integrating Thucydides with Arquillian</title>
    <updated>2012-11-06T00:00:00+00:00</updated>
    <link href="http://arquillian.org/blog/2012/11/05/hack_idea_integrate_thucydides_and_arquillian/" rel="alternate" type="text/html" />
    <category scheme="http://arquillian.org/blog/tags" term="hack-idea" />
    <category scheme="http://arquillian.org/blog/tags" term="thucydides" />
    <category scheme="http://arquillian.org/blog/tags" term="drone" />
    <category scheme="http://arquillian.org/blog/tags" term="atdd" />
    <category scheme="http://arquillian.org/blog/tags" term="2012" />
    <category scheme="http://arquillian.org/blog/tags" term="nonrelease" />
    <category scheme="http://arquillian.org/blog" term="arquillian" />
    <summary>
      Imagine being able to organize and structure your Arquillian tests as human-readable specifications by example that describe at a high-level how the application should work, then being able to present illustrated documentation generated from a test run that gives all parties an account of the features under development and tracks feature sign-off through automation of the acceptance criteria.
      This goal can be achieved by Thucydides and Arquillian joining forces. Acceptance tests will not only be agile and illustrated, but fully automated. With a proof of concept in hand, we plan to advance this combination, including substituting Arquillian Drone to manage WebDriver,......
    </summary>
    <content type="html">
      &lt;p&gt;Imagine being able to organize and structure your Arquillian tests as human-readable &lt;em&gt;specifications by example&lt;/em&gt; that describe at a high-level how the application should work, then being able to present illustrated documentation generated from a test run that gives all parties an account of the features under development and tracks feature sign-off through automation of the acceptance criteria.&lt;/p&gt;
      &lt;p&gt;This goal can be achieved by &lt;a href=&quot;http://www.thucydides.info&quot;&gt;Thucydides&lt;/a&gt; and &lt;a href=&quot;http://arquillian.org&quot;&gt;Arquillian&lt;/a&gt; joining forces. Acceptance tests will not only be agile and illustrated, but fully automated. With a &lt;a href=&quot;https://github.com/VineetReynolds/thucydides-arquillian-example&quot;&gt;proof of concept&lt;/a&gt; in hand, we plan to advance this combination, including substituting Arquillian Drone to manage WebDriver, at the &lt;a href=&quot;http://lanyrd.com/2012/devoxx/syzdq&quot;&gt;Devoxx 2012 Hackergarten&lt;/a&gt;.&lt;/p&gt;
      &lt;h3&gt;Introducing the candidates&lt;/h3&gt;
      &lt;h4&gt;What is Thucydides?&lt;/h4&gt;
      &lt;p&gt;&lt;img src=&quot;http://arquillian.org/images/blog/thucydides-logo.png&quot; class=&quot;pull-right&quot; alt=&quot;&quot;&gt; Thucydides is a testing tool that encourages developers write more flexible and reusable end-to-end acceptance tests. In the style of &lt;a href=&quot;http://www.javaworld.com/javaworld/jw-08-2011/110823-atdd-for-web-apps.html&quot; title=&quot;ATDD&quot;&gt;Acceptance Test-Driven Development&lt;/a&gt;, Thucydides introduces a narrative for tests that describes the high-level requirements and automates the acceptance criteria using the tests. Developers then iterate using a test-driven approach to complete the requirements (i.e., stories), as depicted in the diagram below.&lt;/p&gt;
      &lt;p&gt;&lt;img src=&quot;http://arquillian.org/images/blog/thucydides-workflow.png&quot; class=&quot;graphic&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
      &lt;p&gt;By analyzing the test metadata and test results, Thucydides generates illustrated documentation that describes how the application is used in the form of high-level requirements, acceptance criteria and screenshots, and records the progress of development.&lt;/p&gt;
      &lt;p&gt;&lt;img src=&quot;http://arquillian.org/images/blog/thucydides-story-status.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
      &lt;h4&gt;What is Arquillian?&lt;/h4&gt;
      &lt;p&gt;Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application’s behavior rather than managing the runtime. Using Arquillian, you can develop a comprehensive suite of tests from the convenience of your IDE and run them in any IDE, build tool or continuous integration environment.&lt;/p&gt;
      &lt;h4&gt;What is Arquillian Drone?&lt;/h4&gt;
      &lt;p&gt;Arquillian Drone is an extension to Arquillian that manages the lifecycle of browsers for the purpose of controlling them from a test, thus simplifying automated functional / acceptance testing. Drone bootstraps the tooling necessary to send commands to the browser (e.g. Selenium Server, WebDriver, etc), spawns an instance of a browser, injects the browser API into the test class to allow tests to control that instance and, finally, properly disposes of the browser instance after the test is complete.&lt;/p&gt;
      &lt;h3&gt;Integration benefits&lt;/h3&gt;
      &lt;h4&gt;Arquillian and Thucydides as yin and yang&lt;/h4&gt;
      &lt;p&gt;While Thucydides handles automation of the browser—via the &lt;a href=&quot;http://seleniumhq.org/docs/03_webdriver.html&quot;&gt;WebDriver&lt;/a&gt; library—it does not handle deploying the application being tested, nor does it manage the lifecycle of the container to which the application is deployed. In other words, it doesn’t automate &lt;em&gt;everything&lt;/em&gt;. That’s where Arquillian steps in.&lt;/p&gt;
      &lt;p&gt;Thucydides brings the ATDD methodology and rich test reports to Arquillian, both new features to the Arquillian ecosystem. Arquillian complements Thucydides by managing the lifecycle of the container and deploying the application (as a whole or micro-deployment) to it. These services would otherwise need to be handled by the build when using Thucydides alone.&lt;/p&gt;
      &lt;p&gt;Beyond their combined core feature set, the integration brings all of the Arquillian extensions to Thucydides tests, opening the door to services such as loading seed data into the database, measuring performance and even managing browser automation. Speaking of managing browser automation…&lt;/p&gt;
      &lt;h4&gt;More powerful browser automation with Drone&lt;/h4&gt;
      &lt;p&gt;Bringing Arquillian Drone into the fold provides additional benefit by introducing a more powerful and flexible choice for controlling the browser in a Thucydides test, including simplified configuration, alternatives to WebDriver and extensions (e.g., Graphene). This secondary integration between Arquillian and Thucydides also unifies the developer experience with regard to how the browser is controlled across vanilla Arquillian Drone tests and Thucydides tests (embracing the concept that each tool should focus on doing one thing well).&lt;/p&gt;
      &lt;p&gt;Basic integration between Arquillian and Thucydides is a first step and getting Drone integrated is an optional (but valuable) bonus.&lt;/p&gt;
      &lt;h4&gt;How this integration helps test writers&lt;/h4&gt;
      &lt;ul&gt;
      &lt;li&gt;Arquillian tests become contract deliverables by leveraging Thucydides’ language for ATDD&lt;/li&gt;
      	&lt;li&gt;Test segments of the webapp in isolation (using micro-deployments)
      	&lt;ul&gt;
      &lt;li&gt;Accelerates acceptance testing because entire application doesn’t have to be built and deployed&lt;/li&gt;
      	&lt;/ul&gt;
      &lt;/li&gt;
      	&lt;li&gt;Skip the build (e.g., Run As &amp;gt; XYZ Test in the IDE)
      	&lt;ul&gt;
      &lt;li&gt;automatic container lifecycle management&lt;/li&gt;
      		&lt;li&gt;deploy test archive defined in test class&lt;/li&gt;
      		&lt;li&gt;inject application (initial) URL into test&lt;/li&gt;
      	&lt;/ul&gt;
      &lt;/li&gt;
      	&lt;li&gt;Support for multiple target environments (e.g., local, dev, qa, staging)&lt;/li&gt;
      	&lt;li&gt;Write Thucydides tests using other test runners, such as TestNG and Spock&lt;/li&gt;
      	&lt;li&gt;Write Thucydides tests using any Arquillian-supported programming model (CDI, Spring, etc)&lt;/li&gt;
      	&lt;li&gt;Rich reports summarizing test results generated by Thucydides, something Arquillian doesn’t currently provide&lt;/li&gt;
      	&lt;li&gt;Use additional Arquillian extensions in Thucydides tests&lt;/li&gt;
      	&lt;li&gt;Integrated configuration (arquillian.xml) for containers and browsers*&lt;/li&gt;
      	&lt;li&gt;Use alternate browser automation libraries supported by Drone*&lt;/li&gt;
      	&lt;li&gt;Use Graphene page fragments to reduce boilerplate code common in acceptance tests*&lt;/li&gt;
      &lt;/ul&gt;&lt;p&gt;* requires Drone integration&lt;/p&gt;
      &lt;h4&gt;Balancing responsibility&lt;/h4&gt;
      &lt;p&gt;Thucydides’ strong suit is promoting ATDD through its programming model for writing acceptance tests as specifications by example and its reporting pipeline that summarizes test results as user stories. We believe Thucydides could move faster by focusing on tools and metrics needed to facilitate ATDD, allowing Arquillian to address the need of general purpose test extensions such as alternate test runners, data loading, browser automation, programming model integration, etc. In other words, Thucydides has more freedom to focus on its core competency, as stated on its website:&lt;/p&gt;
      &lt;blockquote&gt;
      &lt;p&gt;Organize and structure acceptance tests, associate tests with the user stories or features that they test and generate illustrated documentation describing how the application is used based on the stories described by the tests.&lt;/p&gt;
      &lt;/blockquote&gt;
      &lt;h3&gt;Hacking on the integration&lt;/h3&gt;
      &lt;p&gt;We plan to hack on this idea during the Hackergarten at Devoxx 2012. Keep in mind there is a &lt;a href=&quot;https://github.com/VineetReynolds/thucydides-arquillian-example&quot;&gt;proof of concept&lt;/a&gt; we can reference as a starting point, described later in this section.&lt;/p&gt;
      &lt;p&gt;John Smart, the author of Thucydides, has offered to host the integration in the Thucydides code base, which is fantastic.&lt;/p&gt;
      &lt;h4&gt;When and where are we hacking?&lt;/h4&gt;
      &lt;p&gt;We are going to use the free Hackergarten day at Devoxx 2012 as an opportunity to put our heads together to make progress on this integration. Here are the details:&lt;/p&gt;
      &lt;ul&gt;
      &lt;li&gt;When: Tue 13th November 2012, 09:30 – 16:30&lt;/li&gt;
      	&lt;li&gt;Where: Hackergarten at Devoxx 2012 (Metropolis, Antwerpen, Belgium)&lt;/li&gt;
      	&lt;li&gt;Conference URL: &lt;a href=&quot;http://devoxx.com&quot;&gt;http://devoxx.com&lt;/a&gt;
      &lt;/li&gt;
      	&lt;li&gt;Hashtag: &lt;a href=&quot;https://twitter.com/search/%23hackdevoxx&quot;&gt;#hackdevoxx&lt;/a&gt; and &lt;a href=&quot;https://twitter.com/search/%23arquillian&quot;&gt;#arquillian&lt;/a&gt;
      &lt;/li&gt;
      	&lt;li&gt;Lanyrd: &lt;a href=&quot;http://lanyrd.com/2012/devoxx/syzdq&quot;&gt;http://lanyrd.com/2012/devoxx/syzdq&lt;/a&gt;
      &lt;/li&gt;
      	&lt;li&gt;RSVP: &lt;a href=&quot;https://plus.google.com/events/cukalsoit15mrhsokig3b02j8mk&quot;&gt;Google+ Event: Arquillian Hands-On Coding at Devoxx 2012 Hackergarten&lt;/a&gt;
      &lt;/li&gt;
      	&lt;li&gt;IRC: #arquillian on Freenode&lt;/li&gt;
      &lt;/ul&gt;&lt;p&gt;We’ll also be hacking throughout the week, either at the long white “hacking” tables on the second floor of the venue or after hours at a bar. Of course, anyone is welcome to hack on this idea at anytime from anywhere. This is open source!&lt;/p&gt;
      &lt;h4&gt;Who will be there hacking?&lt;/h4&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;a href=&quot;https://github.com/wakaleo&quot;&gt;John Ferguson Smart&lt;/a&gt; (Thucydides Lead)&lt;/li&gt;
      	&lt;li&gt;
      &lt;a href=&quot;http://github.com/aslakknutsen&quot;&gt;Aslak Knutsen&lt;/a&gt; (Arquillian Lead)&lt;/li&gt;
      	&lt;li&gt;
      &lt;a href=&quot;https://github.com/bartoszmajsak&quot;&gt;Bartosz Majsak&lt;/a&gt; (Arquillian team member, author of Beer Advisor)&lt;/li&gt;
      	&lt;li&gt;
      &lt;a href=&quot;https://github.com/mojavelinux&quot;&gt;Dan Allen&lt;/a&gt; (Arquillian team member)&lt;/li&gt;
      	&lt;li&gt;
      &lt;a href=&quot;https://github.com/jpapousek&quot;&gt;Jan Papoušek&lt;/a&gt; (Arquillian Drone contributor)&lt;/li&gt;
      	&lt;li&gt;
      &lt;a href=&quot;https://github.com/lordofthejars&quot;&gt;Alex Soto&lt;/a&gt; (NoSQLUnit Lead, testing advocate)&lt;/li&gt;
      &lt;/ul&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/kpiwko&quot;&gt;Karel Piwko&lt;/a&gt; (Arquillian Drone Lead) and &lt;a href=&quot;https://github.com/VineetReynolds&quot;&gt;Vineet Reynolds&lt;/a&gt; (Arquillian Core and Thucydides integration) will be participating, time permitting, from afar. Feel free to reach out to them on IRC or the forums.&lt;/p&gt;
      &lt;h4&gt;What we want to achieve&lt;/h4&gt;
      &lt;p&gt;The following two tests are proposed milestones we want to achieve during the hack. They contrast what integration looks like without Drone to the integration with Drone. Thinking through these scenarios helps reveal integartion points that need to be exposed or refined.&lt;/p&gt;
      &lt;p class=&quot;info&quot;&gt;&lt;span&gt;The tests in this section apply to the &lt;a href=&quot;https://github.com/bartoszmajsak/Beer-Advisor&quot;&gt;Beer Advisor&lt;/a&gt; sample application.&lt;/span&gt;&lt;/p&gt;
      &lt;p&gt;&lt;strong&gt;Sample test without Drone integration&lt;/strong&gt;&lt;/p&gt;
      &lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;@RunWith(ThucydidesRunner.class) // or @RunWith(Arquillian.class)
      @Story(BeerAdvisorFeatures.SearchingBeers.class)
      public class SearchingBeersStory {&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;    // Thucydides members&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;    @Managed(uniqueSession = true)
          public WebDriver browser;&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;    @ManagedPages
          public Pages pages;&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;    @Steps
          public SearchingSteps searchingSteps;&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;    // Arquillian members&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;    @Deployment(testable = false)
          public static WebArchive createTestArchive() {
             return ShrinkWrap.create(WebArchive.class, &quot;searching-beers-story.war&quot;)...;
          }&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;    @ArquillianResource
          URL deploymentUrl;&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;    // Tests&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;    @Before
          public void before_tests() {
              pages.setDefaultBaseUrl(deploymentUrl.toExternalForm());
          }&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;    @Test
          public void should_find_all_usa_beers() {
              searchingSteps.on_main_beer_advisor_page();
              searchingSteps.search_for(&quot;from usa&quot;);
              searchingSteps.should_contain_beers(new Beer(&quot;90 minute IPA&quot;), new Beer(&quot;Mirror Pond&quot;));
          }
      }&lt;/code&gt;&lt;/pre&gt;
      &lt;p&gt;The following steps outline the interplay between Arquillian and Thucydides while the test executes in this scenario.&lt;/p&gt;
      &lt;ul&gt;
      &lt;li&gt;Either Arquillian or Thucydides takes over test execution and activate both frameworks&lt;/li&gt;
      	&lt;li&gt;Responding to the test suite start event, Arquillian and configures and starts (or connects to) the container&lt;/li&gt;
      	&lt;li&gt;Arquillian deploys test archive(s) to container&lt;/li&gt;
      	&lt;li&gt;Arquillian injects the application URL into the @ArquillianResource URL inject point of the test&lt;/li&gt;
      	&lt;li&gt;Thucydides spawns a browser instance using WebDriver&lt;/li&gt;
      	&lt;li&gt;Thucydides executes tests, sending browser commands to WebDriver&lt;/li&gt;
      	&lt;li&gt;Thucydides takes screenshots using WebDriver as the browser is interacting with the web application&lt;/li&gt;
      	&lt;li&gt;Thucydides destoys the browser instance using WebDriver&lt;/li&gt;
      	&lt;li&gt;Arquillian undeploys the test archive&lt;/li&gt;
      	&lt;li&gt;Arquillian stops the container&lt;/li&gt;
      	&lt;li&gt;Thucydides generates reports from the high-level summarizes, screenshots and test results&lt;/li&gt;
      &lt;/ul&gt;&lt;p&gt;Any Arquillian extensions that are loaded should also work as normal.&lt;/p&gt;
      &lt;p&gt;&lt;strong&gt;Sample test with Drone integration&lt;/strong&gt;&lt;/p&gt;
      &lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;@RunWith(ThucydidesRunner.class) // or @RunWith(Arquillian.class)
      @Story(BeerAdvisorFeatures.SearchingBeers.class)
      public class SearchingBeersStory {&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;    // Thucydides members&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;    @Steps
          public SearchingSteps searchingSteps;&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;    // Arquillian members&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;    @Deployment(testable = false)
          public static WebArchive createTestArchive() {
             return ShrinkWrap.create(WebArchive.class, &quot;searching-beers-story.war&quot;)...;
          }&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;    @Drone // may get moved to the page objects
          public WebDriver browser;&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;    // Tests&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;    @Test
          public void should_find_all_usa_beers() {
              searchingSteps.on_main_beer_advisor_page();
              searchingSteps.search_for(&quot;from usa&quot;);
              searchingSteps.should_contain_beers(new Beer(&quot;90 minute IPA&quot;), new Beer(&quot;Mirror Pond&quot;));
          }
      }&lt;/code&gt;&lt;/pre&gt;
      &lt;p&gt;The following steps outline the interplay between Arquillian and Thucydides while the test executes in this scenario.&lt;/p&gt;
      &lt;ul&gt;
      &lt;li&gt;Either Arquillian or Thucydides takes over test execution and activate both frameworks&lt;/li&gt;
      	&lt;li&gt;Arquillian configures and starts (or connects to) the container&lt;/li&gt;
      	&lt;li&gt;Arquillian deploys test archive(s) to container&lt;/li&gt;
      	&lt;li&gt;Arquillian injects the application URL into the @ArquillianResource URL injection point of the test&lt;/li&gt;
      	&lt;li&gt;Arquillian Drone spawns a browser instance using the configured browser automation library (e.g., WebDriver)&lt;/li&gt;
      	&lt;li&gt;Arquillian Drone sets the default base URL on the managed pages&lt;/li&gt;
      	&lt;li&gt;Thucydides executes tests, sending browser commands to the browser automation library&lt;/li&gt;
      	&lt;li&gt;Arquillian Drone takes screenshots as the browser is interacting with the web application&lt;/li&gt;
      	&lt;li&gt;Arquillian Drone destoys the browser instance using the configured browser automation library&lt;/li&gt;
      	&lt;li&gt;Arquillian undeploys the test archive&lt;/li&gt;
      	&lt;li&gt;Arquillian stops the container&lt;/li&gt;
      	&lt;li&gt;Thucydides generates reports from the high-level summarizes, screenshots and test results&lt;/li&gt;
      &lt;/ul&gt;&lt;p&gt;Any Arquillian Drone extensions, such as Graphene, that are loaded should also work as normal.&lt;/p&gt;
      &lt;h4&gt;Sample code to use for exploring the integration&lt;/h4&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;a href=&quot;https://github.com/bartoszmajsak/Beer-Advisor&quot;&gt;Beer Advisor&lt;/a&gt; by Bartosz Majsak&lt;/li&gt;
      	&lt;li&gt;
      &lt;a href=&quot;https://github.com/VineetReynolds/thucydides-arquillian-example&quot;&gt;Currency Exchange&lt;/a&gt; by Vineet Reynolds&lt;/li&gt;
      &lt;/ul&gt;&lt;h4&gt;Prior work&lt;/h4&gt;
      &lt;p&gt;Vineet Reynolds has been experimenting with &lt;a href=&quot;https://github.com/VineetReynolds/thucydides-arquillian-example/&quot;&gt;an integration between Thucydides and Arquillian Core&lt;/a&gt;. Vineet’s integration code uses a Thucydides &lt;a href=&quot;https://github.com/VineetReynolds/thucydides-arquillian-example/blob/master/src/test/java/com/mycompany/listeners/ArquillianListener.java&quot;&gt;StepListener implementation&lt;/a&gt; to weave the Arquillian lifecycle into the test. Tests are run using the Thucydides testrunner, while Arquillian manages the container lifecycle and performs the deployment of archives defined in the tests. The integration does not incorporate Arquillian Drone, opting to leave management of WebDriver up to Thucydides.&lt;/p&gt;
      &lt;p&gt;Aslak and Bartosz improved upon the integration and incorporated it into the &lt;a href=&quot;https://github.com/bartoszmajsak/Beer-Advisor&quot;&gt;Beer Advisor sample app&lt;/a&gt; for their JavaZone talk in September 2012. They introduced a &lt;a href=&quot;https://github.com/bartoszmajsak/Beer-Advisor/blob/master/thucydides-tests/src/test/java/org/arquillian/example/thucydides/ArquillianEnricher.java&quot;&gt;JUnit Rule&lt;/a&gt; that activates the Arquillian services that run before and after each test method, such as test enrichment. A JUnit Rule is currently necessary due to insufficient hooks in Thucydides, but it gets the job done. Eventually we want to phase out the JUnit Rule because it exposes integration plumbing in the test.&lt;/p&gt;
      &lt;h4&gt;Engineering challenges&lt;/h4&gt;
      &lt;p&gt;&lt;strong&gt;Challenge #1: Unified test runner&lt;/strong&gt;&lt;/p&gt;
      &lt;p&gt;Thucydides needs a startup API that isn’t coupled with JUnit so that Arquillian is able to perform the startup in an extension. At the moment there is a lot of setup code in the &lt;a href=&quot;https://github.com/thucydides-webtests/thucydides/blob/master/thucydides-junit/src/main/java/net/thucydides/junit/runners/ThucydidesRunner.java&quot;&gt;ThucydidesRunner&lt;/a&gt; to reproduce. The alternative is that Thucydides provides enough hooks in its &lt;a href=&quot;https://github.com/thucydides-webtests/thucydides/blob/master/thucydides-core/src/main/java/net/thucydides/core/steps/StepEventBus.java&quot;&gt;StepEventBus&lt;/a&gt; for Arquillian to hook its own startup into the Thucydides lifecycle. In the integration prototype, a JUnit rule is used to activate Arquillian in a Thucydides test, but this is not the most elegant approach.&lt;/p&gt;
      &lt;p&gt;Ideally, the &lt;code&gt;@RunWith(Arquillian.class)&lt;/code&gt; annotation should be enough for Arquillian to drive Thucydides if Arquillian detects Thucydides is also in use (e.g., the &lt;code&gt;@Story&lt;/code&gt; annotation is present on the test class). This is the preferred approach since it simplifies the experience for the user across the test suite (a single &lt;code&gt;@RunWith&lt;/code&gt; for all integration tests) and it may make the integration more compatible with extensions since Arquillian has a more sophisticated event bus.&lt;/p&gt;
      &lt;p&gt;&lt;strong&gt;Challenge #2: Drone integration&lt;/strong&gt;&lt;/p&gt;
      &lt;p&gt;When Drone is integrated, the user has an option to use the browser automation library (directly or via the page object pattern) as with other Drone tests or use the page object support provided by Thucydides. Drone should be able to pass Thucydides the WebDriver instance so that Thucydides can operate its own page objects.&lt;/p&gt;
      &lt;p&gt;Ideally, the integration with Drone should cut down on as many redundant declarations in the class as possible to simplify test authoring. That means that the &lt;code&gt;@Drone&lt;/code&gt; injection point is used to access the browser instance and and &lt;code&gt;@ArquillianResource URL&lt;/code&gt; injection point is used to access the initial (base) url.&lt;/p&gt;
      &lt;p&gt;Karel Piwko mentioned that Drone needs a better SPI for improved integration with Arquillian Graphene, slated for 1.2.0.Final. He believes the Drone SPI will also help facilitate Thucydides integration. It also opens the door for Drone to be integrated into Thucydides on its own.&lt;/p&gt;
      &lt;p&gt;&lt;strong&gt;Happy hacking!&lt;/strong&gt;&lt;/p&gt;
      &lt;h3&gt;Resources&lt;/h3&gt;
      &lt;ul&gt;
      &lt;li&gt;Thucydides: &lt;a href=&quot;http://thucydides.info&quot;&gt;project page&lt;/a&gt; – &lt;a href=&quot;http://thucydides.info/docs/thucydides&quot;&gt;reference guide&lt;/a&gt; – &lt;a href=&quot;http://wakaleo.com/thucydides-javadoc&quot;&gt;API documentation&lt;/a&gt;
      &lt;/li&gt;
      	&lt;li&gt;
      &lt;a href=&quot;http://www.javaworld.com/javaworld/jw-08-2011/110823-atdd-for-web-apps.html&quot;&gt;Acceptance test-driven development for web applications&lt;/a&gt; by John Smart (JavaWorld)&lt;/li&gt;
      	&lt;li&gt;
      &lt;a href=&quot;http://www.javaworld.com/javaworld/jw-10-2011/111018-thucydides-for-atdd.html&quot;&gt;Selenium 2 and Thucydides for ATDD&lt;/a&gt; by John Smart (JavaWorld)&lt;/li&gt;
      	&lt;li&gt;
      &lt;a href=&quot;http://vimeo.com/49484334&quot;&gt;Real Agile: How Real Tests Lead to Real Progress&lt;/a&gt; by Aslak Knutsen and Bartosz Majsak (JavaZone 2012)&lt;/li&gt;
      	&lt;li&gt;
      &lt;a href=&quot;http://www.youtube.com/watch?v=Xxpk2YGa6Do&quot;&gt;How to test enterprise applications&lt;/a&gt; by Alex Soto (LinuxTag 2012)&lt;/li&gt;
      	&lt;li&gt;
      &lt;a href=&quot;https://github.com/VineetReynolds/thucydides-arquillian-example&quot;&gt;Prototype of Arquillian and Thucydides integration&lt;/a&gt; by Vineet Reynolds&lt;/li&gt;
      	&lt;li&gt;&lt;a href=&quot;https://community.jboss.org/message/772475&quot;&gt;Arquillian Thucydides integration discussion post&lt;/a&gt;&lt;/li&gt;
      &lt;/ul&gt;
    </content>
  </entry>
  <entry>
    <id>http://arquillian.org/blog/2012/11/02/arquillian-container-weld-1-0-0-CR5/</id>
    <title>Arquillian Container Weld 1.0.0.CR5 Released</title>
    <updated>2012-11-03T00:00:00+00:00</updated>
    <link href="http://arquillian.org/blog/2012/11/02/arquillian-container-weld-1-0-0-CR5/" rel="alternate" type="text/html" />
    <category scheme="http://arquillian.org/blog/tags" term="release" />
    <category scheme="http://arquillian.org/blog/tags" term="container-adapter" />
    <category scheme="http://arquillian.org/blog/tags" term="weld" />
    <category scheme="http://arquillian.org/blog" term="arquillian" />
    <summary>
      The Arquillian team is proud to announce the 1.0.0.CR5 release of the Arquillian Container Weld component!
      
      What is Arquillian?
      Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop a comprehensive suite of tests from the convenience of your IDE and run them in any IDE, build tool or continuous integration environment.
      Release details
      
        
          
           ......
    </summary>
    <content type="html">
      &lt;p&gt;The Arquillian team is proud to announce the &lt;em&gt;1.0.0.CR5&lt;/em&gt; release of the &lt;em&gt;Arquillian Container Weld&lt;/em&gt; component!&lt;/p&gt;
      
      &lt;h3&gt;What is Arquillian?&lt;/h3&gt;
      &lt;p&gt;Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop a comprehensive suite of tests from the convenience of your IDE and run them in any IDE, build tool or continuous integration environment.&lt;/p&gt;
      &lt;h3&gt;Release details&lt;/h3&gt;
      &lt;table class=&quot;table table-bordered table-striped&quot;&gt;&lt;tbody&gt;
      &lt;tr&gt;
      &lt;th&gt;Component&lt;/th&gt;
            &lt;td&gt;Arquillian Container Weld&lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Modules&lt;/th&gt;
            &lt;td&gt;
              &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;
                  &lt;a href=&quot;http://arquillian.org/modules/arquillian-weld-ee-embedded-1.1-container-adapter/&quot;&gt;Arquillian Weld EE Embedded 1.1.x Container Adapter&lt;/a&gt;
                &lt;/li&gt;
                &lt;li&gt;
                  &lt;a href=&quot;http://arquillian.org/modules/arquillian-weld-se-embedded-1-container-adapter/&quot;&gt;Arquillian Weld SE Embedded 1.x Container Adapter&lt;/a&gt;
                &lt;/li&gt;
                &lt;li&gt;
                  &lt;a href=&quot;http://arquillian.org/modules/arquillian-weld-se-embedded-1.1-container-adapter/&quot;&gt;Arquillian Weld SE Embedded 1.1.x Container Adapter&lt;/a&gt;
                &lt;/li&gt;
              &lt;/ul&gt;
      &lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Version&lt;/th&gt;
            &lt;td&gt;
              1.0.0.CR5
              &lt;span class=&quot;label tag&quot;&gt;
                &lt;a href=&quot;https://api.github.com/repos/arquillian/arquillian-container-weld/commits/0761871ad37e26b7b73a42ef15b42c8b7b704fb9&quot;&gt;view tag&lt;/a&gt;
              &lt;/span&gt;
            &lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Release date&lt;/th&gt;
            &lt;td&gt;2012-11-02&lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Released by&lt;/th&gt;
            &lt;td&gt;Aslak Knutsen&lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Compiled against&lt;/th&gt;
            &lt;td&gt;
              &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;Arquillian Core – 1.0.2.Final&lt;/li&gt;
              &lt;/ul&gt;
      &lt;/td&gt;
          &lt;/tr&gt;
      &lt;/tbody&gt;&lt;/table&gt;&lt;h3&gt;
        Published artifacts
        &lt;small&gt;org.jboss.arquillian.container&lt;/small&gt;
      &lt;/h3&gt;
      &lt;ul&gt;
      &lt;li&gt;
          org.jboss.arquillian.container
          »
          arquillian-weld-ee-embedded-1.1
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-weld-ee-embedded-1.1/1.0.0.CR5/arquillian-weld-ee-embedded-1.1-1.0.0.CR5.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-weld-ee-embedded-1.1/1.0.0.CR5/arquillian-weld-ee-embedded-1.1-1.0.0.CR5.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.container
          »
          arquillian-weld-se-embedded-1
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-weld-se-embedded-1/1.0.0.CR5/arquillian-weld-se-embedded-1-1.0.0.CR5.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-weld-se-embedded-1/1.0.0.CR5/arquillian-weld-se-embedded-1-1.0.0.CR5.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.container
          »
          arquillian-weld-se-embedded-1.1
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-weld-se-embedded-1.1/1.0.0.CR5/arquillian-weld-se-embedded-1.1-1.0.0.CR5.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-weld-se-embedded-1.1/1.0.0.CR5/arquillian-weld-se-embedded-1.1-1.0.0.CR5.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
      &lt;/ul&gt;&lt;h3&gt;
        Release notes and resolved issues
        &lt;small&gt;3&lt;/small&gt;
      &lt;/h3&gt;
      &lt;p&gt;Minor enhancement&lt;/p&gt;
      &lt;dl&gt;
      &lt;dt&gt;Feature Request&lt;/dt&gt;
        &lt;dd&gt;
          &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1148&quot;&gt;ARQ-1148&lt;/a&gt; -         weld-ee-container should remove duplicate entries when merging multiple beans.xml files&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1168&quot;&gt;ARQ-1168&lt;/a&gt; -         Merge beans.xml files for Embedded Weld Containers&lt;/li&gt;
          &lt;/ul&gt;
      &lt;/dd&gt;
      &lt;/dl&gt;&lt;p&gt;
        Thanks to the following list of contributors:
        &lt;a href=&quot;https://community.jboss.org/people/aslak&quot;&gt;Aslak Knutsen&lt;/a&gt;
      &lt;/p&gt;
    </content>
  </entry>
  <entry>
    <id>http://arquillian.org/blog/2012/11/01/arquillian-extension-transaction-1-0-0-Alpha2/</id>
    <title>Arquillian Transaction Extension 1.0.0.Alpha2 Released</title>
    <updated>2012-11-02T00:00:00+00:00</updated>
    <link href="http://arquillian.org/blog/2012/11/01/arquillian-extension-transaction-1-0-0-Alpha2/" rel="alternate" type="text/html" />
    <category scheme="http://arquillian.org/blog/tags" term="release" />
    <category scheme="http://arquillian.org/blog/tags" term="extension" />
    <category scheme="http://arquillian.org/blog/tags" term="transaction" />
    <category scheme="http://arquillian.org/blog" term="arquillian" />
    <summary>
      The Arquillian team is proud to announce the 1.0.0.Alpha2 release of the Arquillian Transaction Extension component!
      JTA implementation
      The time has come to extract the JTA transactions support from Arquillian Persistence Extension and move it over to the Transaction Extension. It was in fact quite a natural refactoring step. This opens the possibility of providing a different transaction manager to your (not only) persistence related tests. Many thanks to Jakub Narloch for bringing the Transaction Extension to life as a top level module and helping with this release!
      Future releases of the Arquillian Persistence Extension will ship with the JTA extension implementation as......
    </summary>
    <content type="html">
      &lt;p&gt;The Arquillian team is proud to announce the &lt;em&gt;1.0.0.Alpha2&lt;/em&gt; release of the &lt;em&gt;Arquillian Transaction Extension&lt;/em&gt; component!&lt;/p&gt;
      &lt;h3&gt;JTA implementation&lt;/h3&gt;
      &lt;p&gt;The time has come to extract the JTA transactions support from &lt;a href=&quot;http://arquillian.org/modules/persistence-extension&quot;&gt;Arquillian Persistence Extension&lt;/a&gt; and move it over to the Transaction Extension. It was in fact quite a natural refactoring step. This opens the possibility of providing a different transaction manager to your (not only) persistence related tests. Many thanks to &lt;a href=&quot;https://github.com/jmnarloch&quot;&gt;Jakub Narloch&lt;/a&gt; for bringing the Transaction Extension to life as a top level module and helping with this release!&lt;/p&gt;
      &lt;p class=&quot;info&quot;&gt;&lt;span&gt;Future releases of the &lt;a href=&quot;http://arquillian.org/modules/persistence-extension&quot;&gt;Arquillian Persistence Extension&lt;/a&gt; will ship with the JTA extension implementation as a dependency, but the Persistence Extension API will change to the new API from the Transaction Extension. Since the Persistence Extension is using the transaction provider SPI you will be able to change the implementation without a need to adopt your test code to whatever comes in the future.&lt;/span&gt;&lt;/p&gt;
      &lt;h3&gt;Usage&lt;/h3&gt;
      &lt;p&gt;Just include this in your dependencies to leverage the JTA implementation within the container of your choice.&lt;/p&gt;
      &lt;div class=&quot;filename&quot;&gt;pom.xml&lt;/div&gt;
      &lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;&amp;lt;dependency&amp;gt;
        &amp;lt;groupId&amp;gt;org.jboss.arquillian.extension&amp;lt;/groupId&amp;gt;
        &amp;lt;artifactId&amp;gt;arquillian-transaction-jta&amp;lt;/artifactId&amp;gt;
        &amp;lt;version&amp;gt;1.0.0.Alpha2&amp;lt;/version&amp;gt;
      &amp;lt;/dependency&amp;gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;h3&gt;New SPI hook&lt;/h3&gt;
      &lt;p&gt;The &lt;code&gt;TransactionEnabler&lt;/code&gt; interface has been introduced to the &lt;strong&gt;SPI&lt;/strong&gt;. It gives the option to alternate the strategy for enabling transactions. This is particularly handy for the Persistence Extension where we automatically wrap annotations like &lt;code&gt;@UsingDataSet&lt;/code&gt; or &lt;code&gt;@ShouldMatchDataSet&lt;/code&gt; in a transaction. For reference you may take a look at the &lt;a href=&quot;https://github.com/arquillian/arquillian-extension-transaction/blob/master/spi/src/main/java/org/jboss/arquillian/transaction/spi/provider/TransactionEnabler.java&quot;&gt;new SPI interface&lt;/a&gt; and the related tests.&lt;/p&gt;
      &lt;p&gt;That’s pretty much it! We look forward to hearing your feedback about this release in the &lt;a href=&quot;http://community.jboss.org/en/arquillian&quot;&gt;community forums&lt;/a&gt;!&lt;/p&gt;
      &lt;h3&gt;What is Arquillian?&lt;/h3&gt;
      &lt;p&gt;Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop a comprehensive suite of tests from the convenience of your IDE and run them in any IDE, build tool or continuous integration environment.&lt;/p&gt;
      &lt;h3&gt;Release details&lt;/h3&gt;
      &lt;table class=&quot;table table-bordered table-striped&quot;&gt;&lt;tbody&gt;
      &lt;tr&gt;
      &lt;th&gt;Component&lt;/th&gt;
            &lt;td&gt;
              &lt;a href=&quot;http://arquillian.org/modules/transaction-extension/&quot;&gt;Arquillian Transaction Extension&lt;/a&gt;
            &lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Version&lt;/th&gt;
            &lt;td&gt;
              1.0.0.Alpha2
              &lt;span class=&quot;label tag&quot;&gt;
                &lt;a href=&quot;https://api.github.com/repos/arquillian/arquillian-extension-transaction/commits/b30f831c7a47a7fc9f7a7da7a75ad76e380612f0&quot;&gt;view tag&lt;/a&gt;
              &lt;/span&gt;
            &lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Release date&lt;/th&gt;
            &lt;td&gt;2012-10-30&lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Released by&lt;/th&gt;
            &lt;td&gt;Aslak Knutsen&lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Compiled against&lt;/th&gt;
            &lt;td&gt;
              &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;Arquillian Core – 1.0.2.Final&lt;/li&gt;
                &lt;li&gt;ShrinkWrap Resolvers – 2.0.0-alpha-1&lt;/li&gt;
              &lt;/ul&gt;
      &lt;/td&gt;
          &lt;/tr&gt;
      &lt;/tbody&gt;&lt;/table&gt;&lt;h3&gt;
        Published artifacts
        &lt;small&gt;org.jboss.arquillian.extension&lt;/small&gt;
      &lt;/h3&gt;
      &lt;ul&gt;
      &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-transaction-api
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-transaction-api/1.0.0.Alpha2/arquillian-transaction-api-1.0.0.Alpha2.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-transaction-api/1.0.0.Alpha2/arquillian-transaction-api-1.0.0.Alpha2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-transaction-bom
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-transaction-bom/1.0.0.Alpha2/arquillian-transaction-bom-1.0.0.Alpha2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-transaction-impl-base
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-transaction-impl-base/1.0.0.Alpha2/arquillian-transaction-impl-base-1.0.0.Alpha2.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-transaction-impl-base/1.0.0.Alpha2/arquillian-transaction-impl-base-1.0.0.Alpha2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-transaction-jta
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-transaction-jta/1.0.0.Alpha2/arquillian-transaction-jta-1.0.0.Alpha2.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-transaction-jta/1.0.0.Alpha2/arquillian-transaction-jta-1.0.0.Alpha2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-transaction-spi
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-transaction-spi/1.0.0.Alpha2/arquillian-transaction-spi-1.0.0.Alpha2.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-transaction-spi/1.0.0.Alpha2/arquillian-transaction-spi-1.0.0.Alpha2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
      &lt;/ul&gt;&lt;h3&gt;
        Release notes and resolved issues
        &lt;small&gt;6&lt;/small&gt;
      &lt;/h3&gt;
      &lt;p&gt;Embedded Container and JTA support&lt;/p&gt;
      &lt;dl&gt;
      &lt;dt&gt;Enhancement&lt;/dt&gt;
        &lt;dd&gt;
          &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1137&quot;&gt;ARQ-1137&lt;/a&gt; -         Provide a way to alter logic determining if transaction support is required&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1156&quot;&gt;ARQ-1156&lt;/a&gt; -         Improve resource handling&lt;/li&gt;
          &lt;/ul&gt;
      &lt;/dd&gt;
      &lt;/dl&gt;&lt;dl&gt;
      &lt;dt&gt;Feature Request&lt;/dt&gt;
        &lt;dd&gt;
          &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1074&quot;&gt;ARQ-1074&lt;/a&gt; -         TransactionProvider should be supported on client side&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1155&quot;&gt;ARQ-1155&lt;/a&gt; -         Make JNDI transaction name configurable&lt;/li&gt;
          &lt;/ul&gt;
      &lt;/dd&gt;
      &lt;/dl&gt;&lt;dl&gt;
      &lt;dt&gt;Sub-task&lt;/dt&gt;
        &lt;dd&gt;
          &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1069&quot;&gt;ARQ-1069&lt;/a&gt; -         JTA implementation for Transaction Extension&lt;/li&gt;
          &lt;/ul&gt;
      &lt;/dd&gt;
      &lt;/dl&gt;&lt;p&gt;
        Thanks to the following list of contributors:
        &lt;a href=&quot;https://community.jboss.org/people/bmajsak&quot;&gt;Bartosz Majsak&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/aslak&quot;&gt;Aslak Knutsen&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/jmnarloch&quot;&gt;Jakub Narloch&lt;/a&gt;
      &lt;/p&gt;
    </content>
  </entry>
  <entry>
    <id>http://arquillian.org/blog/2012/10/25/arquillian-extension-drone-1-1-0-Final/</id>
    <title>Arquillian Drone Extension 1.1.0.Final Released</title>
    <updated>2012-10-26T00:00:00+00:00</updated>
    <link href="http://arquillian.org/blog/2012/10/25/arquillian-extension-drone-1-1-0-Final/" rel="alternate" type="text/html" />
    <category scheme="http://arquillian.org/blog/tags" term="release" />
    <category scheme="http://arquillian.org/blog/tags" term="extension" />
    <category scheme="http://arquillian.org/blog/tags" term="drone" />
    <category scheme="http://arquillian.org/blog/tags" term="jbosscentral" />
    <category scheme="http://arquillian.org/blog" term="arquillian" />
    <summary>
      The Arquillian team is proud to announce the 1.1.0.Final release of the Arquillian Drone Extension component!
       We&#8217;ve introduced new features in 1.1.0.Final while still preserving backwards compatibility with 1.0.0.Final. There&#8217;s now a much simpler way to configure Drone, better support for the Opera browser and support for browsers on iOS devices.
      Significant changes since 1.0.0.Final
      
      	 Browser capabilities instead of implementationClass and native capability configuration
      	Think of any WebDriver capability, such as opera.no_restart or acceptSSLCerts, and you can now specify it directly in arquillian.xml:
      arquillian.xml
      &lt;extension qualifier=&#8220;webdriver&#8221;&gt;&#x000A;    &lt;property name=&#8220;browserCapabilities&#8221;&gt;opera&lt;/property&gt;&#x000A;    &lt;property name=&#8220;opera.no_restart&#8221;&gt;true&lt;/property&gt;&#x000A;    &lt;property name=&#8220;acceptSSLCerts&#8221;&gt;false&lt;/property&gt;&#x000A;&lt;/extension&gt;
      	 Support for reusable......
    </summary>
    <content type="html">
      &lt;p&gt;The Arquillian team is proud to announce the &lt;em&gt;1.1.0.Final&lt;/em&gt; release of the &lt;em&gt;Arquillian Drone Extension&lt;/em&gt; component!&lt;/p&gt;
      &lt;p&gt;&lt;img src=&quot;http://arquillian.org/images/blog/drone_400.png&quot; class=&quot;graphic pull-right&quot; alt=&quot;&quot;&gt; We’ve introduced new features in 1.1.0.Final while still preserving backwards compatibility with 1.0.0.Final. There’s now a much simpler way to configure Drone, better support for the Opera browser and support for browsers on iOS devices.&lt;/p&gt;
      &lt;h3 class=&quot;highlights&quot;&gt;Significant changes since 1.0.0.Final&lt;/h3&gt;
      &lt;dl&gt;
      &lt;dt&gt;
      &lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; Browser capabilities instead of &lt;code&gt;implementationClass&lt;/code&gt; and native capability configuration&lt;/dt&gt;
      	&lt;dd&gt;
      &lt;p&gt;Think of any WebDriver capability, such as &lt;code&gt;opera.no_restart&lt;/code&gt; or &lt;code&gt;acceptSSLCerts&lt;/code&gt;, and you can now specify it directly in &lt;code&gt;arquillian.xml&lt;/code&gt;:&lt;/p&gt;
      &lt;div class=&quot;filename&quot;&gt;arquillian.xml&lt;/div&gt;
      &lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;&amp;lt;extension qualifier=“webdriver”&amp;gt;&lt;br&gt;
          &amp;lt;property name=“browserCapabilities”&amp;gt;opera&amp;lt;/property&amp;gt;&lt;br&gt;
          &amp;lt;property name=“opera.no_restart”&amp;gt;true&amp;lt;/property&amp;gt;&lt;br&gt;
          &amp;lt;property name=“acceptSSLCerts”&amp;gt;false&amp;lt;/property&amp;gt;&lt;br&gt;
      &amp;lt;/extension&amp;gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;/dd&gt;
      	&lt;dt&gt;
      &lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; Support for reusable browsers&lt;/dt&gt;
      	&lt;dd&gt;
      &lt;p&gt;Reusable browsers stay connected even if you finish the tests. This will speed up turnaroud when developing the application. Reusable browsers are based on top of remote browsers, so you’ll need Selenium Hub (run &lt;strong&gt;selenium-server-standalone-2.25.0.jar&lt;/strong&gt;) running during your tests. This is how you enable them (&lt;code&gt;remoteAddress&lt;/code&gt; is optional, default value listed here):&lt;/p&gt;
      &lt;div class=&quot;filename&quot;&gt;arquillian.xml&lt;/div&gt;
      &lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;&amp;lt;extension qualifier=“webdriver”&amp;gt;&lt;br&gt;
          &amp;lt;property name=“browserCapabilities”&amp;gt;chrome&amp;lt;/property&amp;gt;&lt;br&gt;
          &amp;lt;property name=“remoteReusable”&amp;gt;true&amp;lt;/property&amp;gt;&lt;br&gt;
          &amp;lt;property name=“remoteAddress”&amp;gt;http://localhost:4444/wd/hub&amp;lt;/property&amp;gt;&lt;br&gt;
      &amp;lt;/extension&amp;gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;/dd&gt;
      	&lt;dt&gt;
      &lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; Better support for the Opera browser&lt;/dt&gt;
      	&lt;dt&gt;
      &lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; Support for browsers on iOS devices&lt;/dt&gt;
      	&lt;dt&gt;
      &lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; Deprecated Arquillian Drone system properties configuration&lt;/dt&gt;
      	&lt;dd&gt;&lt;p&gt;The system properties configuration provided by Arquillian Core is now the preferred way to configure Arquillian Drone. The old style of system properties still work, but using them will produce warnings in the log and will be removed completely in a future version. Now use &lt;code&gt;arq.extension.extensionName.propertyName&lt;/code&gt; to override a value from arquillian.xml file&lt;/p&gt;&lt;/dd&gt;
      &lt;/dl&gt;&lt;p&gt;I’d like to thank everybody from the community eagerly adopting new releases, discovering bugs and providing bugfixes. &lt;em&gt;You guys are awesome!&lt;/em&gt;&lt;/p&gt;
      &lt;p&gt;We hope that you’ll enjoy the improvements. We look forward to hear your feedback in the &lt;a href=&quot;http://community.jboss.org/en/arquillian&quot;&gt;community forums&lt;/a&gt;.&lt;/p&gt;
      &lt;h3&gt;What is Arquillian?&lt;/h3&gt;
      &lt;p&gt;Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop a comprehensive suite of tests from the convenience of your IDE and run them in any IDE, build tool or continuous integration environment.&lt;/p&gt;
      &lt;h3&gt;Release details&lt;/h3&gt;
      &lt;table class=&quot;table table-bordered table-striped&quot;&gt;&lt;tbody&gt;
      &lt;tr&gt;
      &lt;th&gt;Component&lt;/th&gt;
            &lt;td&gt;
              &lt;a href=&quot;http://arquillian.org/modules/drone-extension/&quot;&gt;Arquillian Drone Extension&lt;/a&gt;
            &lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Version&lt;/th&gt;
            &lt;td&gt;
              1.1.0.Final
              &lt;span class=&quot;label tag&quot;&gt;
                &lt;a href=&quot;https://api.github.com/repos/arquillian/arquillian-extension-drone/commits/9c9cc48cb7b0f2bcbd3a52cc3b4128b4ec310826&quot;&gt;view tag&lt;/a&gt;
              &lt;/span&gt;
            &lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Release date&lt;/th&gt;
            &lt;td&gt;2012-10-24&lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Released by&lt;/th&gt;
            &lt;td&gt;Aslak Knutsen&lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Compiled against&lt;/th&gt;
            &lt;td&gt;
              &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;Arquillian Core – 1.0.2.Final&lt;/li&gt;
              &lt;/ul&gt;
      &lt;/td&gt;
          &lt;/tr&gt;
      &lt;/tbody&gt;&lt;/table&gt;&lt;h3&gt;
        Published artifacts
        &lt;small&gt;org.jboss.arquillian.extension&lt;/small&gt;
      &lt;/h3&gt;
      &lt;ul&gt;
      &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-drone-api
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-api/1.1.0.Final/arquillian-drone-api-1.1.0.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-api/1.1.0.Final/arquillian-drone-api-1.1.0.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-drone-bom
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-bom/1.1.0.Final/arquillian-drone-bom-1.1.0.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-drone-configuration
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-configuration/1.1.0.Final/arquillian-drone-configuration-1.1.0.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-configuration/1.1.0.Final/arquillian-drone-configuration-1.1.0.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-drone-impl
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-impl/1.1.0.Final/arquillian-drone-impl-1.1.0.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-impl/1.1.0.Final/arquillian-drone-impl-1.1.0.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-drone-selenium
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-selenium/1.1.0.Final/arquillian-drone-selenium-1.1.0.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-selenium/1.1.0.Final/arquillian-drone-selenium-1.1.0.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-drone-selenium-depchain
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-selenium-depchain/1.1.0.Final/arquillian-drone-selenium-depchain-1.1.0.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-drone-selenium-server
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-selenium-server/1.1.0.Final/arquillian-drone-selenium-server-1.1.0.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-selenium-server/1.1.0.Final/arquillian-drone-selenium-server-1.1.0.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-drone-spi
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-spi/1.1.0.Final/arquillian-drone-spi-1.1.0.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-spi/1.1.0.Final/arquillian-drone-spi-1.1.0.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-drone-webdriver
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-webdriver/1.1.0.Final/arquillian-drone-webdriver-1.1.0.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-webdriver/1.1.0.Final/arquillian-drone-webdriver-1.1.0.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-drone-webdriver-depchain
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-webdriver-depchain/1.1.0.Final/arquillian-drone-webdriver-depchain-1.1.0.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
      &lt;/ul&gt;&lt;h3&gt;
        Release notes and resolved issues
        &lt;small&gt;9&lt;/small&gt;
      &lt;/h3&gt;
      &lt;p&gt;&lt;/p&gt;
      &lt;dl&gt;
      &lt;dt&gt;Bug&lt;/dt&gt;
        &lt;dd&gt;
          &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1048&quot;&gt;ARQ-1048&lt;/a&gt; -         RemoteWebDriver ignores old configuration properties&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1110&quot;&gt;ARQ-1110&lt;/a&gt; -         can't create an instance of IPhoneDriver&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1113&quot;&gt;ARQ-1113&lt;/a&gt; -         Add @Deprecation to ConfigurationMapper.fromSystemConfiguration&lt;/li&gt;
          &lt;/ul&gt;
      &lt;/dd&gt;
      &lt;/dl&gt;&lt;dl&gt;
      &lt;dt&gt;Component  Upgrade&lt;/dt&gt;
        &lt;dd&gt;
          &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1170&quot;&gt;ARQ-1170&lt;/a&gt; -         Update Selenium to 2.25.0&lt;/li&gt;
          &lt;/ul&gt;
      &lt;/dd&gt;
      &lt;/dl&gt;&lt;dl&gt;
      &lt;dt&gt;Enhancement&lt;/dt&gt;
        &lt;dd&gt;
          &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-929&quot;&gt;ARQ-929&lt;/a&gt; -         Drone: Switch useJavaScript to true by default&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1165&quot;&gt;ARQ-1165&lt;/a&gt; -         Remove ChromeDriver tests exclusions&lt;/li&gt;
          &lt;/ul&gt;
      &lt;/dd&gt;
      &lt;/dl&gt;&lt;dl&gt;
      &lt;dt&gt;Feature Request&lt;/dt&gt;
        &lt;dd&gt;
          &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1164&quot;&gt;ARQ-1164&lt;/a&gt; -         Use default Chrome location for tests&lt;/li&gt;
          &lt;/ul&gt;
      &lt;/dd&gt;
      &lt;/dl&gt;&lt;dl&gt;
      &lt;dt&gt;Sub-task&lt;/dt&gt;
        &lt;dd&gt;
          &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1112&quot;&gt;ARQ-1112&lt;/a&gt; -         Verify Arquillian Drone can run on JDK 1.5&lt;/li&gt;
          &lt;/ul&gt;
      &lt;/dd&gt;
      &lt;/dl&gt;&lt;p&gt;
        Thanks to the following list of contributors:
        &lt;a href=&quot;https://community.jboss.org/people/kpiwko&quot;&gt;Karel Piwko&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/aslak&quot;&gt;Aslak Knutsen&lt;/a&gt;, &lt;a href=&quot;https://github.com/papousek&quot;&gt;Jan Papoušek&lt;/a&gt;
      &lt;/p&gt;
    </content>
  </entry>
  <entry>
    <id>http://arquillian.org/blog/2012/10/23/arquillian-container-osgi-1-0-3-Final/</id>
    <title>Arquillian OSGi 1.0.3.Final Released</title>
    <updated>2012-10-24T00:00:00+00:00</updated>
    <link href="http://arquillian.org/blog/2012/10/23/arquillian-container-osgi-1-0-3-Final/" rel="alternate" type="text/html" />
    <category scheme="http://arquillian.org/blog/tags" term="release" />
    <category scheme="http://arquillian.org/blog/tags" term="container-adapter" />
    <category scheme="http://arquillian.org/blog/tags" term="osgi" />
    <category scheme="http://arquillian.org/blog" term="arquillian" />
    <summary>
      The Arquillian team is proud to announce the 1.0.3.Final release of the Arquillian OSGi component!
      
      What is Arquillian?
      Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop a comprehensive suite of tests from the convenience of your IDE and run them in any IDE, build tool or continuous integration environment.
      Release details
      
        
          
            Component
      ......
    </summary>
    <content type="html">
      &lt;p&gt;The Arquillian team is proud to announce the &lt;em&gt;1.0.3.Final&lt;/em&gt; release of the &lt;em&gt;Arquillian OSGi&lt;/em&gt; component!&lt;/p&gt;
      
      &lt;h3&gt;What is Arquillian?&lt;/h3&gt;
      &lt;p&gt;Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop a comprehensive suite of tests from the convenience of your IDE and run them in any IDE, build tool or continuous integration environment.&lt;/p&gt;
      &lt;h3&gt;Release details&lt;/h3&gt;
      &lt;table class=&quot;table table-bordered table-striped&quot;&gt;&lt;tbody&gt;
      &lt;tr&gt;
      &lt;th&gt;Component&lt;/th&gt;
            &lt;td&gt;
              &lt;a href=&quot;http://arquillian.org/modules/arquillian-osgi-embedded-container-adapter/&quot;&gt;Arquillian OSGi&lt;/a&gt;
            &lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Version&lt;/th&gt;
            &lt;td&gt;
              1.0.3.Final
              &lt;span class=&quot;label tag&quot;&gt;
                &lt;a href=&quot;https://api.github.com/repos/arquillian/arquillian-container-osgi/commits/213453b51c64b1b81ff80f006377a2450233fcec&quot;&gt;view tag&lt;/a&gt;
              &lt;/span&gt;
            &lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Release date&lt;/th&gt;
            &lt;td&gt;2012-10-23&lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Released by&lt;/th&gt;
            &lt;td&gt;Thomas Diesler&lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Compiled against&lt;/th&gt;
            &lt;td&gt;
              &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;Arquillian Core – 1.0.2.Final&lt;/li&gt;
                &lt;li&gt;ShrinkWrap Core – 1.0.0&lt;/li&gt;
              &lt;/ul&gt;
      &lt;/td&gt;
          &lt;/tr&gt;
      &lt;/tbody&gt;&lt;/table&gt;&lt;h3&gt;
        Published artifacts
        &lt;small&gt;org.jboss.arquillian.container&lt;/small&gt;
      &lt;/h3&gt;
      &lt;ul&gt;
      &lt;li&gt;
          org.jboss.arquillian.container
          »
          arquillian-container-osgi
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-osgi/1.0.3.Final/arquillian-container-osgi-1.0.3.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-osgi/1.0.3.Final/arquillian-container-osgi-1.0.3.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.container
          »
          arquillian-container-osgi-embedded
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-osgi-embedded/1.0.3.Final/arquillian-container-osgi-embedded-1.0.3.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-osgi-embedded/1.0.3.Final/arquillian-container-osgi-embedded-1.0.3.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.protocol
          »
          arquillian-protocol-osgi
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/protocol/arquillian-protocol-osgi/1.0.3.Final/arquillian-protocol-osgi-1.0.3.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/protocol/arquillian-protocol-osgi/1.0.3.Final/arquillian-protocol-osgi-1.0.3.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.testenricher
          »
          arquillian-testenricher-osgi
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testenricher/arquillian-testenricher-osgi/1.0.3.Final/arquillian-testenricher-osgi-1.0.3.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testenricher/arquillian-testenricher-osgi/1.0.3.Final/arquillian-testenricher-osgi-1.0.3.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
      &lt;/ul&gt;&lt;h3&gt;
        Release notes and resolved issues
        &lt;small&gt;5&lt;/small&gt;
      &lt;/h3&gt;
      &lt;p&gt;Containers OSGi - Final&lt;/p&gt;
      &lt;dl&gt;
      &lt;dt&gt;Enhancement&lt;/dt&gt;
        &lt;dd&gt;
          &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-468&quot;&gt;ARQ-468&lt;/a&gt; -         Automatically add test super classes for OSGi&lt;/li&gt;
          &lt;/ul&gt;
      &lt;/dd&gt;
      &lt;/dl&gt;&lt;dl&gt;
      &lt;dt&gt;Feature Request&lt;/dt&gt;
        &lt;dd&gt;
          &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1152&quot;&gt;ARQ-1152&lt;/a&gt; -         Add support for OSGi types as ArquillianResource&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1153&quot;&gt;ARQ-1153&lt;/a&gt; -         Add support for multiple bundle deployments per test case&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1159&quot;&gt;ARQ-1159&lt;/a&gt; -         Add support for Felix/Equinox testing&lt;/li&gt;
          &lt;/ul&gt;
      &lt;/dd&gt;
      &lt;/dl&gt;&lt;dl&gt;
      &lt;dt&gt;Task&lt;/dt&gt;
        &lt;dd&gt;
          &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-954&quot;&gt;ARQ-954&lt;/a&gt; -         Remove dependency on jboss-logging in OSGi Bundle&lt;/li&gt;
          &lt;/ul&gt;
      &lt;/dd&gt;
      &lt;/dl&gt;&lt;p&gt;
        Thanks to the following list of contributors:
        &lt;a href=&quot;https://community.jboss.org/people/thomas.diesler&quot;&gt;Thomas Diesler&lt;/a&gt;
      &lt;/p&gt;
    </content>
  </entry>
  <entry>
    <id>http://arquillian.org/blog/2012/10/19/arquillian-core-1-0-3-Final/</id>
    <title>Arquillian Core 1.0.3.Final Released</title>
    <updated>2012-10-20T00:00:00+00:00</updated>
    <link href="http://arquillian.org/blog/2012/10/19/arquillian-core-1-0-3-Final/" rel="alternate" type="text/html" />
    <category scheme="http://arquillian.org/blog/tags" term="release" />
    <category scheme="http://arquillian.org/blog/tags" term="platform" />
    <category scheme="http://arquillian.org/blog/tags" term="core" />
    <category scheme="http://arquillian.org/blog/tags" term="jbosscentral" />
    <category scheme="http://arquillian.org/blog" term="arquillian" />
    <summary>
      The Arquillian team is proud to announce the 1.0.3.Final release of the Arquillian Core component!
      
      What is Arquillian?
      Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop a comprehensive suite of tests from the convenience of your IDE and run them in any IDE, build tool or continuous integration environment.
      Release details
      
        
          
            Component
      ......
    </summary>
    <content type="html">
      &lt;p&gt;The Arquillian team is proud to announce the &lt;em&gt;1.0.3.Final&lt;/em&gt; release of the &lt;em&gt;Arquillian Core&lt;/em&gt; component!&lt;/p&gt;
      
      &lt;h3&gt;What is Arquillian?&lt;/h3&gt;
      &lt;p&gt;Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop a comprehensive suite of tests from the convenience of your IDE and run them in any IDE, build tool or continuous integration environment.&lt;/p&gt;
      &lt;h3&gt;Release details&lt;/h3&gt;
      &lt;table class=&quot;table table-bordered table-striped&quot;&gt;&lt;tbody&gt;
      &lt;tr&gt;
      &lt;th&gt;Component&lt;/th&gt;
            &lt;td&gt;
              &lt;a href=&quot;http://arquillian.org/modules/core-platform/&quot;&gt;Arquillian Core&lt;/a&gt;
            &lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Version&lt;/th&gt;
            &lt;td&gt;
              1.0.3.Final
              &lt;span class=&quot;label tag&quot;&gt;
                &lt;a href=&quot;https://api.github.com/repos/arquillian/arquillian-core/commits/dc8dbf88eb726f6855360bc6e4f586855e43950d&quot;&gt;view tag&lt;/a&gt;
              &lt;/span&gt;
            &lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Release date&lt;/th&gt;
            &lt;td&gt;2012-10-18&lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Released by&lt;/th&gt;
            &lt;td&gt;Aslak Knutsen&lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Compiled against&lt;/th&gt;
            &lt;td&gt;
              &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;ShrinkWrap Core – 1.0.1&lt;/li&gt;
                &lt;li&gt;ShrinkWrap Descriptors – 2.0.0-alpha-3&lt;/li&gt;
                &lt;li&gt;JUnit – 4.8.1&lt;/li&gt;
                &lt;li&gt;TestNG – 5.14.6&lt;/li&gt;
              &lt;/ul&gt;
      &lt;/td&gt;
          &lt;/tr&gt;
      &lt;/tbody&gt;&lt;/table&gt;&lt;h3&gt;
        Published artifacts
        &lt;small&gt;org.jboss.arquillian&lt;/small&gt;
      &lt;/h3&gt;
      &lt;ul&gt;
      &lt;li&gt;
          org.jboss.arquillian
          »
          arquillian-bom
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/arquillian-bom/1.0.3.Final/arquillian-bom-1.0.3.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.config
          »
          arquillian-config-api
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/config/arquillian-config-api/1.0.3.Final/arquillian-config-api-1.0.3.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/config/arquillian-config-api/1.0.3.Final/arquillian-config-api-1.0.3.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.config
          »
          arquillian-config-impl-base
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/config/arquillian-config-impl-base/1.0.3.Final/arquillian-config-impl-base-1.0.3.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/config/arquillian-config-impl-base/1.0.3.Final/arquillian-config-impl-base-1.0.3.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.config
          »
          arquillian-config-spi
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/config/arquillian-config-spi/1.0.3.Final/arquillian-config-spi-1.0.3.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/config/arquillian-config-spi/1.0.3.Final/arquillian-config-spi-1.0.3.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.container
          »
          arquillian-container-impl-base
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-impl-base/1.0.3.Final/arquillian-container-impl-base-1.0.3.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-impl-base/1.0.3.Final/arquillian-container-impl-base-1.0.3.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.container
          »
          arquillian-container-spi
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-spi/1.0.3.Final/arquillian-container-spi-1.0.3.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-spi/1.0.3.Final/arquillian-container-spi-1.0.3.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.container
          »
          arquillian-container-test-api
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-test-api/1.0.3.Final/arquillian-container-test-api-1.0.3.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-test-api/1.0.3.Final/arquillian-container-test-api-1.0.3.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.container
          »
          arquillian-container-test-impl-base
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-test-impl-base/1.0.3.Final/arquillian-container-test-impl-base-1.0.3.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-test-impl-base/1.0.3.Final/arquillian-container-test-impl-base-1.0.3.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.container
          »
          arquillian-container-test-spi
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-test-spi/1.0.3.Final/arquillian-container-test-spi-1.0.3.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-test-spi/1.0.3.Final/arquillian-container-test-spi-1.0.3.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.core
          »
          arquillian-core-api
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/core/arquillian-core-api/1.0.3.Final/arquillian-core-api-1.0.3.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/core/arquillian-core-api/1.0.3.Final/arquillian-core-api-1.0.3.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.core
          »
          arquillian-core-impl-base
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/core/arquillian-core-impl-base/1.0.3.Final/arquillian-core-impl-base-1.0.3.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/core/arquillian-core-impl-base/1.0.3.Final/arquillian-core-impl-base-1.0.3.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.core
          »
          arquillian-core-spi
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/core/arquillian-core-spi/1.0.3.Final/arquillian-core-spi-1.0.3.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/core/arquillian-core-spi/1.0.3.Final/arquillian-core-spi-1.0.3.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.junit
          »
          arquillian-junit-container
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/junit/arquillian-junit-container/1.0.3.Final/arquillian-junit-container-1.0.3.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/junit/arquillian-junit-container/1.0.3.Final/arquillian-junit-container-1.0.3.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.junit
          »
          arquillian-junit-core
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/junit/arquillian-junit-core/1.0.3.Final/arquillian-junit-core-1.0.3.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/junit/arquillian-junit-core/1.0.3.Final/arquillian-junit-core-1.0.3.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.junit
          »
          arquillian-junit-standalone
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/junit/arquillian-junit-standalone/1.0.3.Final/arquillian-junit-standalone-1.0.3.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/junit/arquillian-junit-standalone/1.0.3.Final/arquillian-junit-standalone-1.0.3.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.protocol
          »
          arquillian-protocol-jmx
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/protocol/arquillian-protocol-jmx/1.0.3.Final/arquillian-protocol-jmx-1.0.3.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/protocol/arquillian-protocol-jmx/1.0.3.Final/arquillian-protocol-jmx-1.0.3.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.protocol
          »
          arquillian-protocol-servlet
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/protocol/arquillian-protocol-servlet/1.0.3.Final/arquillian-protocol-servlet-1.0.3.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/protocol/arquillian-protocol-servlet/1.0.3.Final/arquillian-protocol-servlet-1.0.3.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.test
          »
          arquillian-test-api
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/test/arquillian-test-api/1.0.3.Final/arquillian-test-api-1.0.3.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/test/arquillian-test-api/1.0.3.Final/arquillian-test-api-1.0.3.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.test
          »
          arquillian-test-impl-base
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/test/arquillian-test-impl-base/1.0.3.Final/arquillian-test-impl-base-1.0.3.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/test/arquillian-test-impl-base/1.0.3.Final/arquillian-test-impl-base-1.0.3.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.test
          »
          arquillian-test-spi
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/test/arquillian-test-spi/1.0.3.Final/arquillian-test-spi-1.0.3.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/test/arquillian-test-spi/1.0.3.Final/arquillian-test-spi-1.0.3.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.testenricher
          »
          arquillian-testenricher-cdi
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testenricher/arquillian-testenricher-cdi/1.0.3.Final/arquillian-testenricher-cdi-1.0.3.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testenricher/arquillian-testenricher-cdi/1.0.3.Final/arquillian-testenricher-cdi-1.0.3.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.testenricher
          »
          arquillian-testenricher-ejb
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testenricher/arquillian-testenricher-ejb/1.0.3.Final/arquillian-testenricher-ejb-1.0.3.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testenricher/arquillian-testenricher-ejb/1.0.3.Final/arquillian-testenricher-ejb-1.0.3.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.testenricher
          »
          arquillian-testenricher-initialcontext
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testenricher/arquillian-testenricher-initialcontext/1.0.3.Final/arquillian-testenricher-initialcontext-1.0.3.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testenricher/arquillian-testenricher-initialcontext/1.0.3.Final/arquillian-testenricher-initialcontext-1.0.3.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.testenricher
          »
          arquillian-testenricher-resource
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testenricher/arquillian-testenricher-resource/1.0.3.Final/arquillian-testenricher-resource-1.0.3.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testenricher/arquillian-testenricher-resource/1.0.3.Final/arquillian-testenricher-resource-1.0.3.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.testng
          »
          arquillian-testng-container
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testng/arquillian-testng-container/1.0.3.Final/arquillian-testng-container-1.0.3.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testng/arquillian-testng-container/1.0.3.Final/arquillian-testng-container-1.0.3.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.testng
          »
          arquillian-testng-core
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testng/arquillian-testng-core/1.0.3.Final/arquillian-testng-core-1.0.3.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testng/arquillian-testng-core/1.0.3.Final/arquillian-testng-core-1.0.3.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.testng
          »
          arquillian-testng-standalone
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testng/arquillian-testng-standalone/1.0.3.Final/arquillian-testng-standalone-1.0.3.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testng/arquillian-testng-standalone/1.0.3.Final/arquillian-testng-standalone-1.0.3.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
      &lt;/ul&gt;&lt;h3&gt;
        Release notes and resolved issues
        &lt;small&gt;3&lt;/small&gt;
      &lt;/h3&gt;
      &lt;p&gt;TestNG Bug fix&lt;/p&gt;
      &lt;dl&gt;
      &lt;dt&gt;Bug&lt;/dt&gt;
        &lt;dd&gt;
          &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-563&quot;&gt;ARQ-563&lt;/a&gt; -         @ArquillianResource in TestNG based tests causes test body not to be evaluated&lt;/li&gt;
          &lt;/ul&gt;
      &lt;/dd&gt;
      &lt;/dl&gt;&lt;dl&gt;
      &lt;dt&gt;Feature Request&lt;/dt&gt;
        &lt;dd&gt;
          &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1102&quot;&gt;ARQ-1102&lt;/a&gt; -         Publish Test Source jars to Nexus&lt;/li&gt;
          &lt;/ul&gt;
      &lt;/dd&gt;
      &lt;/dl&gt;&lt;p&gt;
        Thanks to the following list of contributors:
        &lt;a href=&quot;https://community.jboss.org/people/aslak&quot;&gt;Aslak Knutsen&lt;/a&gt;, &lt;a href=&quot;https://github.com/krichardsson&quot;&gt;Kristoffer Richardsson&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/lfryc&quot;&gt;Lukas Fryc&lt;/a&gt;
      &lt;/p&gt;
    </content>
  </entry>
  <entry>
    <id>http://arquillian.org/blog/2012/10/18/arquillian-extension-portal-1-0-0-Alpha2/</id>
    <title>Arquillian Portal Extension 1.0.0.Alpha2 Released</title>
    <updated>2012-10-19T00:00:00+00:00</updated>
    <link href="http://arquillian.org/blog/2012/10/18/arquillian-extension-portal-1-0-0-Alpha2/" rel="alternate" type="text/html" />
    <category scheme="http://arquillian.org/blog/tags" term="release" />
    <category scheme="http://arquillian.org/blog/tags" term="extension" />
    <category scheme="http://arquillian.org/blog/tags" term="portal" />
    <category scheme="http://arquillian.org/blog" term="arquillian" />
    <summary>
      The Arquillian team is proud to announce the 1.0.0.Alpha2 release of the Arquillian Portal Extension component!
      The Portal extension for Arquillian brings testing into the world of Portlets!
      Some of the highlights in this release
       URL injection of portlets by name. @PortalURL now supports defining the names of the portlets that you want rendered on the page of the injected URL. You can either specify a single portlet name, multiple, or leave it empty and it will load all portlets defined within portlets.xml onto the page. Injecting a URL of a portlet page with the MyPortlet portlet present is done by:
      MyTest.java
      @ArquillianResource&#x000A;@PortalURL("MyPortlet")&#x000A;URL portletPage;
      ......
    </summary>
    <content type="html">
      &lt;p&gt;The Arquillian team is proud to announce the &lt;em&gt;1.0.0.Alpha2&lt;/em&gt; release of the &lt;em&gt;Arquillian Portal Extension&lt;/em&gt; component!&lt;/p&gt;
      &lt;p&gt;The &lt;em&gt;Portal&lt;/em&gt; extension for Arquillian brings testing into the world of Portlets!&lt;/p&gt;
      &lt;h3 class=&quot;highlights&quot;&gt;Some of the highlights in this release&lt;/h3&gt;
      &lt;p&gt;&lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; URL injection of portlets by name. &lt;code&gt;@PortalURL&lt;/code&gt; now supports defining the names of the portlets that you want rendered on the page of the injected URL. You can either specify a single portlet name, multiple, or leave it empty and it will load all portlets defined within &lt;code&gt;portlets.xml&lt;/code&gt; onto the page. Injecting a URL of a portlet page with the &lt;code&gt;MyPortlet&lt;/code&gt; portlet present is done by:&lt;/p&gt;
      &lt;div class=&quot;filename&quot;&gt;MyTest.java&lt;/div&gt;
      &lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;@ArquillianResource
      @PortalURL(&quot;MyPortlet&quot;)
      URL portletPage;&lt;/code&gt;&lt;/pre&gt;
      &lt;p&gt;&lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; Annotation for marking portlet tests. &lt;code&gt;@PortalTest&lt;/code&gt; now represents a marker on a test class that signifies to &lt;em&gt;Portal&lt;/em&gt; extension implementations that a portlet test is being invoked. This enables for augmenting the test deployment with whatever information is needed for particular portlet containers to enable a portlet to be tested. It has the added benefit of decoupling a test needing to inject a &lt;code&gt;@PortalURL&lt;/code&gt; if the tests don’t require a URL to the portlet page.&lt;/p&gt;
      &lt;p&gt;Currently there are two implementations of this extension for use with &lt;a href=&quot;https://github.com/jbossportletbridge/pluto-testing&quot;&gt;Pluto&lt;/a&gt; and &lt;a href=&quot;https://github.com/jbossportletbridge/gatein-testing&quot;&gt;GateIn&lt;/a&gt; portal containers.&lt;/p&gt;
      &lt;p&gt;For examples on how to use these extensions with their respective portal containers, you can take a look at the &lt;a href=&quot;https://github.com/jbossportletbridge/jbossportletbridge/tree/master/testsuites&quot;&gt;testsuite&lt;/a&gt; of JBoss Portlet Bridge.&lt;/p&gt;
      &lt;p&gt;We look forward to hearing your feedback about this release in the &lt;a href=&quot;http://community.jboss.org/en/arquillian&quot;&gt;community forums&lt;/a&gt;!&lt;/p&gt;
      &lt;h3&gt;What is Arquillian?&lt;/h3&gt;
      &lt;p&gt;Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop a comprehensive suite of tests from the convenience of your IDE and run them in any IDE, build tool or continuous integration environment.&lt;/p&gt;
      &lt;h3&gt;Release details&lt;/h3&gt;
      &lt;table class=&quot;table table-bordered table-striped&quot;&gt;&lt;tbody&gt;
      &lt;tr&gt;
      &lt;th&gt;Component&lt;/th&gt;
            &lt;td&gt;
              &lt;a href=&quot;http://arquillian.org/modules/portal-extension/&quot;&gt;Arquillian Portal Extension&lt;/a&gt;
            &lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Version&lt;/th&gt;
            &lt;td&gt;
              1.0.0.Alpha2
              &lt;span class=&quot;label tag&quot;&gt;
                &lt;a href=&quot;https://api.github.com/repos/arquillian/arquillian-extension-portal/commits/f214ca2608daaf6d69b4afbe32ff251eae35b9a6&quot;&gt;view tag&lt;/a&gt;
              &lt;/span&gt;
            &lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Release date&lt;/th&gt;
            &lt;td&gt;2012-10-17&lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Released by&lt;/th&gt;
            &lt;td&gt;Ken Finnigan&lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Compiled against&lt;/th&gt;
            &lt;td&gt;
              &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;Arquillian Core – 1.0.2.Final&lt;/li&gt;
              &lt;/ul&gt;
      &lt;/td&gt;
          &lt;/tr&gt;
      &lt;/tbody&gt;&lt;/table&gt;&lt;h3&gt;
        Published artifacts
        &lt;small&gt;org.jboss.arquillian.extension&lt;/small&gt;
      &lt;/h3&gt;
      &lt;ul&gt;
      &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-portal
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-portal/1.0.0.Alpha2/arquillian-portal-1.0.0.Alpha2.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-portal/1.0.0.Alpha2/arquillian-portal-1.0.0.Alpha2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-portal-api
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-portal-api/1.0.0.Alpha2/arquillian-portal-api-1.0.0.Alpha2.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-portal-api/1.0.0.Alpha2/arquillian-portal-api-1.0.0.Alpha2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-portal-impl
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-portal-impl/1.0.0.Alpha2/arquillian-portal-impl-1.0.0.Alpha2.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-portal-impl/1.0.0.Alpha2/arquillian-portal-impl-1.0.0.Alpha2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-portal-spi
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-portal-spi/1.0.0.Alpha2/arquillian-portal-spi-1.0.0.Alpha2.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-portal-spi/1.0.0.Alpha2/arquillian-portal-spi-1.0.0.Alpha2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
      &lt;/ul&gt;&lt;h3&gt;
        Release notes and resolved issues
        &lt;small&gt;6&lt;/small&gt;
      &lt;/h3&gt;
      &lt;p&gt;&lt;/p&gt;
      &lt;dl&gt;
      &lt;dt&gt;Bug&lt;/dt&gt;
        &lt;dd&gt;
          &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-961&quot;&gt;ARQ-961&lt;/a&gt; -         Error in README for the name of additional URL qualifier&lt;/li&gt;
          &lt;/ul&gt;
      &lt;/dd&gt;
      &lt;/dl&gt;&lt;dl&gt;
      &lt;dt&gt;Enhancement&lt;/dt&gt;
        &lt;dd&gt;
          &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1117&quot;&gt;ARQ-1117&lt;/a&gt; -         Support Portal URL for specific portlet or several on a page&lt;/li&gt;
          &lt;/ul&gt;
      &lt;/dd&gt;
      &lt;/dl&gt;&lt;dl&gt;
      &lt;dt&gt;Task&lt;/dt&gt;
        &lt;dd&gt;
          &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1115&quot;&gt;ARQ-1115&lt;/a&gt; -         Introduce Portal depchain&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1116&quot;&gt;ARQ-1116&lt;/a&gt; -         Change references of portal container to portlet container&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1151&quot;&gt;ARQ-1151&lt;/a&gt; -         Update Portal Extension to Core 1.0.2.Final&lt;/li&gt;
          &lt;/ul&gt;
      &lt;/dd&gt;
      &lt;/dl&gt;&lt;p&gt;
        Thanks to the following list of contributors:
        &lt;a href=&quot;https://community.jboss.org/people/kenfinni&quot;&gt;Ken Finnigan&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/toomtooms&quot;&gt;Thomas Delhoménie&lt;/a&gt;
      &lt;/p&gt;
    </content>
  </entry>
  <entry>
    <id>http://arquillian.org/blog/2012/10/17/arquillian-container-weld-1-0-0-CR4/</id>
    <title>Arquillian Container Weld 1.0.0.CR4 Released</title>
    <updated>2012-10-18T00:00:00+00:00</updated>
    <link href="http://arquillian.org/blog/2012/10/17/arquillian-container-weld-1-0-0-CR4/" rel="alternate" type="text/html" />
    <category scheme="http://arquillian.org/blog/tags" term="release" />
    <category scheme="http://arquillian.org/blog/tags" term="container-adapter" />
    <category scheme="http://arquillian.org/blog/tags" term="weld" />
    <category scheme="http://arquillian.org/blog" term="arquillian" />
    <summary>
      The Arquillian team is proud to announce the 1.0.0.CR4 release of the Arquillian Container Weld component!
      
      What is Arquillian?
      Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop a comprehensive suite of tests from the convenience of your IDE and run them in any IDE, build tool or continuous integration environment.
      Release details
      
        
          
           ......
    </summary>
    <content type="html">
      &lt;p&gt;The Arquillian team is proud to announce the &lt;em&gt;1.0.0.CR4&lt;/em&gt; release of the &lt;em&gt;Arquillian Container Weld&lt;/em&gt; component!&lt;/p&gt;
      
      &lt;h3&gt;What is Arquillian?&lt;/h3&gt;
      &lt;p&gt;Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop a comprehensive suite of tests from the convenience of your IDE and run them in any IDE, build tool or continuous integration environment.&lt;/p&gt;
      &lt;h3&gt;Release details&lt;/h3&gt;
      &lt;table class=&quot;table table-bordered table-striped&quot;&gt;&lt;tbody&gt;
      &lt;tr&gt;
      &lt;th&gt;Component&lt;/th&gt;
            &lt;td&gt;Arquillian Container Weld&lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Modules&lt;/th&gt;
            &lt;td&gt;
              &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;
                  &lt;a href=&quot;http://arquillian.org/modules/arquillian-weld-ee-embedded-1.1-container-adapter/&quot;&gt;Arquillian Weld EE Embedded 1.1.x Container Adapter&lt;/a&gt;
                &lt;/li&gt;
                &lt;li&gt;
                  &lt;a href=&quot;http://arquillian.org/modules/arquillian-weld-se-embedded-1-container-adapter/&quot;&gt;Arquillian Weld SE Embedded 1.x Container Adapter&lt;/a&gt;
                &lt;/li&gt;
                &lt;li&gt;
                  &lt;a href=&quot;http://arquillian.org/modules/arquillian-weld-se-embedded-1.1-container-adapter/&quot;&gt;Arquillian Weld SE Embedded 1.1.x Container Adapter&lt;/a&gt;
                &lt;/li&gt;
              &lt;/ul&gt;
      &lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Version&lt;/th&gt;
            &lt;td&gt;
              1.0.0.CR4
              &lt;span class=&quot;label tag&quot;&gt;
                &lt;a href=&quot;https://api.github.com/repos/arquillian/arquillian-container-weld/commits/97397582b80ecc1bfe9ab7610bd5d7965bdc6f32&quot;&gt;view tag&lt;/a&gt;
              &lt;/span&gt;
            &lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Release date&lt;/th&gt;
            &lt;td&gt;2012-10-17&lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Released by&lt;/th&gt;
            &lt;td&gt;Aslak Knutsen&lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Compiled against&lt;/th&gt;
            &lt;td&gt;
              &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;Arquillian Core – 1.0.2.Final&lt;/li&gt;
              &lt;/ul&gt;
      &lt;/td&gt;
          &lt;/tr&gt;
      &lt;/tbody&gt;&lt;/table&gt;&lt;h3&gt;
        Published artifacts
        &lt;small&gt;org.jboss.arquillian.container&lt;/small&gt;
      &lt;/h3&gt;
      &lt;ul&gt;
      &lt;li&gt;
          org.jboss.arquillian.container
          »
          arquillian-weld-ee-embedded-1.1
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-weld-ee-embedded-1.1/1.0.0.CR4/arquillian-weld-ee-embedded-1.1-1.0.0.CR4.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-weld-ee-embedded-1.1/1.0.0.CR4/arquillian-weld-ee-embedded-1.1-1.0.0.CR4.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.container
          »
          arquillian-weld-se-embedded-1
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-weld-se-embedded-1/1.0.0.CR4/arquillian-weld-se-embedded-1-1.0.0.CR4.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-weld-se-embedded-1/1.0.0.CR4/arquillian-weld-se-embedded-1-1.0.0.CR4.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.container
          »
          arquillian-weld-se-embedded-1.1
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-weld-se-embedded-1.1/1.0.0.CR4/arquillian-weld-se-embedded-1.1-1.0.0.CR4.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-weld-se-embedded-1.1/1.0.0.CR4/arquillian-weld-se-embedded-1.1-1.0.0.CR4.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
      &lt;/ul&gt;&lt;h3&gt;
        Release notes and resolved issues
        &lt;small&gt;6&lt;/small&gt;
      &lt;/h3&gt;
      &lt;p&gt;&lt;/p&gt;
      &lt;dl&gt;
      &lt;dt&gt;Bug&lt;/dt&gt;
        &lt;dd&gt;
          &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-753&quot;&gt;ARQ-753&lt;/a&gt; -         ShrinkWrapClassLoader does not find service provider in WAR&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-817&quot;&gt;ARQ-817&lt;/a&gt; -         arquillian-weld-container does not build on Maven Default Profile&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-818&quot;&gt;ARQ-818&lt;/a&gt; -         WebArchiveClassLoader only honors resource requests for Service files&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-819&quot;&gt;ARQ-819&lt;/a&gt; -         Wrong criteria used for supplying Weld with WebArchiveClassLoader&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-890&quot;&gt;ARQ-890&lt;/a&gt; -         WeldEEMockContainer does not clean up resources if the deployment fails&lt;/li&gt;
          &lt;/ul&gt;
      &lt;/dd&gt;
      &lt;/dl&gt;&lt;dl&gt;
      &lt;dt&gt;Feature Request&lt;/dt&gt;
        &lt;dd&gt;
          &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1160&quot;&gt;ARQ-1160&lt;/a&gt; -         Prepare Weld CR4&lt;/li&gt;
          &lt;/ul&gt;
      &lt;/dd&gt;
      &lt;/dl&gt;&lt;p&gt;
        Thanks to the following list of contributors:
        &lt;a href=&quot;https://community.jboss.org/people/aslak&quot;&gt;Aslak Knutsen&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/alrubinger&quot;&gt;Andrew Lee Rubinger&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/jharting&quot;&gt;Jozef Hartinger&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/mkouba&quot;&gt;Martin Kouba&lt;/a&gt;
      &lt;/p&gt;
    </content>
  </entry>
  <entry>
    <id>http://arquillian.org/blog/2012/10/16/arquillian-container-osgi-1-0-3-CR1/</id>
    <title>Arquillian OSGi 1.0.3.CR1 Released</title>
    <updated>2012-10-17T00:00:00+00:00</updated>
    <link href="http://arquillian.org/blog/2012/10/16/arquillian-container-osgi-1-0-3-CR1/" rel="alternate" type="text/html" />
    <category scheme="http://arquillian.org/blog/tags" term="release" />
    <category scheme="http://arquillian.org/blog/tags" term="container-adapter" />
    <category scheme="http://arquillian.org/blog/tags" term="osgi" />
    <category scheme="http://arquillian.org/blog" term="arquillian" />
    <summary>
      The Arquillian team is proud to announce the 1.0.3.CR1 release of the Arquillian OSGi component!
      
      What is Arquillian?
      Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop a comprehensive suite of tests from the convenience of your IDE and run them in any IDE, build tool or continuous integration environment.
      Release details
      
        
          
            Component
      ......
    </summary>
    <content type="html">
      &lt;p&gt;The Arquillian team is proud to announce the &lt;em&gt;1.0.3.CR1&lt;/em&gt; release of the &lt;em&gt;Arquillian OSGi&lt;/em&gt; component!&lt;/p&gt;
      
      &lt;h3&gt;What is Arquillian?&lt;/h3&gt;
      &lt;p&gt;Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop a comprehensive suite of tests from the convenience of your IDE and run them in any IDE, build tool or continuous integration environment.&lt;/p&gt;
      &lt;h3&gt;Release details&lt;/h3&gt;
      &lt;table class=&quot;table table-bordered table-striped&quot;&gt;&lt;tbody&gt;
      &lt;tr&gt;
      &lt;th&gt;Component&lt;/th&gt;
            &lt;td&gt;
              &lt;a href=&quot;http://arquillian.org/modules/arquillian-osgi-embedded-container-adapter/&quot;&gt;Arquillian OSGi&lt;/a&gt;
            &lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Version&lt;/th&gt;
            &lt;td&gt;
              1.0.3.CR1
              &lt;span class=&quot;label tag&quot;&gt;
                &lt;a href=&quot;https://api.github.com/repos/arquillian/arquillian-container-osgi/commits/0fa7386390fd266b37c07e21e62e8d6696c9c7ee&quot;&gt;view tag&lt;/a&gt;
              &lt;/span&gt;
            &lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Release date&lt;/th&gt;
            &lt;td&gt;2012-10-16&lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Released by&lt;/th&gt;
            &lt;td&gt;Thomas Diesler&lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Compiled against&lt;/th&gt;
            &lt;td&gt;
              &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;Arquillian Core – 1.0.2.Final&lt;/li&gt;
                &lt;li&gt;ShrinkWrap Core – 1.0.0&lt;/li&gt;
              &lt;/ul&gt;
      &lt;/td&gt;
          &lt;/tr&gt;
      &lt;/tbody&gt;&lt;/table&gt;&lt;h3&gt;
        Published artifacts
        &lt;small&gt;org.jboss.arquillian.container&lt;/small&gt;
      &lt;/h3&gt;
      &lt;ul&gt;
      &lt;li&gt;
          org.jboss.arquillian.container
          »
          arquillian-container-osgi
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-osgi/1.0.3.CR1/arquillian-container-osgi-1.0.3.CR1.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-osgi/1.0.3.CR1/arquillian-container-osgi-1.0.3.CR1.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.container
          »
          arquillian-container-osgi-embedded
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-osgi-embedded/1.0.3.CR1/arquillian-container-osgi-embedded-1.0.3.CR1.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-osgi-embedded/1.0.3.CR1/arquillian-container-osgi-embedded-1.0.3.CR1.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.protocol
          »
          arquillian-protocol-osgi
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/protocol/arquillian-protocol-osgi/1.0.3.CR1/arquillian-protocol-osgi-1.0.3.CR1.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/protocol/arquillian-protocol-osgi/1.0.3.CR1/arquillian-protocol-osgi-1.0.3.CR1.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.testenricher
          »
          arquillian-testenricher-osgi
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testenricher/arquillian-testenricher-osgi/1.0.3.CR1/arquillian-testenricher-osgi-1.0.3.CR1.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testenricher/arquillian-testenricher-osgi/1.0.3.CR1/arquillian-testenricher-osgi-1.0.3.CR1.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
      &lt;/ul&gt;&lt;p&gt;
        Thanks to the following list of contributors:
        &lt;a href=&quot;https://community.jboss.org/people/thomas.diesler&quot;&gt;Thomas Diesler&lt;/a&gt;
      &lt;/p&gt;
    </content>
  </entry>
  <entry>
    <id>http://arquillian.org/blog/2012/09/24/arquillian-container-tomcat-1-0-0-CR4/</id>
    <title>Arquillian Container Tomcat 1.0.0.CR4 Released</title>
    <updated>2012-09-25T00:00:00+00:00</updated>
    <link href="http://arquillian.org/blog/2012/09/24/arquillian-container-tomcat-1-0-0-CR4/" rel="alternate" type="text/html" />
    <category scheme="http://arquillian.org/blog/tags" term="release" />
    <category scheme="http://arquillian.org/blog/tags" term="container-adapter" />
    <category scheme="http://arquillian.org/blog/tags" term="tomcat" />
    <category scheme="http://arquillian.org/blog" term="arquillian" />
    <summary>
      The Arquillian team is proud to announce the 1.0.0.CR4 release of the Arquillian Container Tomcat component!
      Some of the highlights in this release
      Support for nice multiline/pretty formatting of JVM-argument configuration. Additionally, you can use quotes to provide values containing spaces.
      &lt;property name="javaVmArguments"&gt;&#x000A;  -Xms512m -Xmx512m&#x000A;  -XX:MaxPermSize=512m&#x000A;  "-Djavax.net.ssl.keyStore=/path/to your/keystore"&#x000A;&lt;/property&gt;
      Embedded Tomcat 7 is now capable of protected WAR deployment (this is usual in typical standalone server), thus some standard deployment features are now available even for embedded use, e.g.:
      
      	Deployment of an archive named &#8220;ROOT.war&#8221; to the default context &#8220;/&#8221;
      	Proper processing of &#8220;META-INF/context.xml&#8221; if present in the WAR.
      
      What is Arquillian?
      Arquillian is open source......
    </summary>
    <content type="html">
      &lt;p&gt;The Arquillian team is proud to announce the &lt;em&gt;1.0.0.CR4&lt;/em&gt; release of the &lt;em&gt;Arquillian Container Tomcat&lt;/em&gt; component!&lt;/p&gt;
      &lt;h3&gt;Some of the highlights in this release&lt;/h3&gt;
      &lt;p&gt;Support for nice multiline/pretty formatting of JVM-argument configuration. Additionally, you can use quotes to provide values containing spaces.&lt;/p&gt;
      &lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;&amp;lt;property name=&quot;javaVmArguments&quot;&amp;gt;
        -Xms512m -Xmx512m
        -XX:MaxPermSize=512m
        &quot;-Djavax.net.ssl.keyStore=/path/to your/keystore&quot;
      &amp;lt;/property&amp;gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;p&gt;Embedded Tomcat 7 is now capable of protected WAR deployment (this is usual in typical standalone server), thus some standard deployment features are now available even for embedded use, e.g.:&lt;/p&gt;
      &lt;ul&gt;
      &lt;li&gt;Deployment of an archive named “ROOT.war” to the default context “/”&lt;/li&gt;
      	&lt;li&gt;Proper processing of “META-INF/context.xml” if present in the WAR.&lt;/li&gt;
      &lt;/ul&gt;&lt;h3&gt;What is Arquillian?&lt;/h3&gt;
      &lt;p&gt;Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop a comprehensive suite of tests from the convenience of your IDE and run them in any IDE, build tool or continuous integration environment.&lt;/p&gt;
      &lt;h3&gt;Release details&lt;/h3&gt;
      &lt;table class=&quot;table table-bordered table-striped&quot;&gt;&lt;tbody&gt;
      &lt;tr&gt;
      &lt;th&gt;Component&lt;/th&gt;
            &lt;td&gt;Arquillian Container Tomcat&lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Modules&lt;/th&gt;
            &lt;td&gt;
              &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;
                  &lt;a href=&quot;http://arquillian.org/modules/arquillian-tomcat-managed-5.5-container-adapter/&quot;&gt;Arquillian Tomcat Managed 5.5.x Container Adapter&lt;/a&gt;
                &lt;/li&gt;
                &lt;li&gt;
                  &lt;a href=&quot;http://arquillian.org/modules/arquillian-tomcat-embedded-6-container-adapter/&quot;&gt;Arquillian Tomcat Embedded 6.x Container Adapter&lt;/a&gt;
                &lt;/li&gt;
                &lt;li&gt;
                  &lt;a href=&quot;http://arquillian.org/modules/arquillian-tomcat-remote-6-container-adapter/&quot;&gt;Arquillian Tomcat Remote 6.x Container Adapter&lt;/a&gt;
                &lt;/li&gt;
                &lt;li&gt;
                  &lt;a href=&quot;http://arquillian.org/modules/arquillian-tomcat-managed-6-container-adapter/&quot;&gt;Arquillian Tomcat Managed 6.x Container Adapter&lt;/a&gt;
                &lt;/li&gt;
                &lt;li&gt;
                  &lt;a href=&quot;http://arquillian.org/modules/arquillian-tomcat-embedded-7-container-adapter/&quot;&gt;Arquillian Tomcat Embedded 7.x Container Adapter&lt;/a&gt;
                &lt;/li&gt;
                &lt;li&gt;
                  &lt;a href=&quot;http://arquillian.org/modules/arquillian-tomcat-managed-7-container-adapter/&quot;&gt;Arquillian Tomcat Managed 7.x Container Adapter&lt;/a&gt;
                &lt;/li&gt;
              &lt;/ul&gt;
      &lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Version&lt;/th&gt;
            &lt;td&gt;
              1.0.0.CR4
              &lt;span class=&quot;label tag&quot;&gt;
                &lt;a href=&quot;https://api.github.com/repos/arquillian/arquillian-container-tomcat/commits/888dc33ebacc8904d2fe616b1d241c3b78ea94f8&quot;&gt;view tag&lt;/a&gt;
              &lt;/span&gt;
            &lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Release date&lt;/th&gt;
            &lt;td&gt;2012-09-24&lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Released by&lt;/th&gt;
            &lt;td&gt;Aslak Knutsen&lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Compiled against&lt;/th&gt;
            &lt;td&gt;
              &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;Arquillian Core – 1.0.0.Final&lt;/li&gt;
              &lt;/ul&gt;
      &lt;/td&gt;
          &lt;/tr&gt;
      &lt;/tbody&gt;&lt;/table&gt;&lt;h3&gt;
        Published artifacts
        &lt;small&gt;org.jboss.arquillian.container&lt;/small&gt;
      &lt;/h3&gt;
      &lt;ul&gt;
      &lt;li&gt;
          org.jboss.arquillian.container
          »
          arquillian-tomcat-common
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-tomcat-common/1.0.0.CR4/arquillian-tomcat-common-1.0.0.CR4.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-tomcat-common/1.0.0.CR4/arquillian-tomcat-common-1.0.0.CR4.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.container
          »
          arquillian-tomcat-embedded-6
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-tomcat-embedded-6/1.0.0.CR4/arquillian-tomcat-embedded-6-1.0.0.CR4.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-tomcat-embedded-6/1.0.0.CR4/arquillian-tomcat-embedded-6-1.0.0.CR4.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.container
          »
          arquillian-tomcat-embedded-7
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-tomcat-embedded-7/1.0.0.CR4/arquillian-tomcat-embedded-7-1.0.0.CR4.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-tomcat-embedded-7/1.0.0.CR4/arquillian-tomcat-embedded-7-1.0.0.CR4.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.container
          »
          arquillian-tomcat-managed-5.5
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-tomcat-managed-5.5/1.0.0.CR4/arquillian-tomcat-managed-5.5-1.0.0.CR4.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-tomcat-managed-5.5/1.0.0.CR4/arquillian-tomcat-managed-5.5-1.0.0.CR4.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.container
          »
          arquillian-tomcat-managed-6
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-tomcat-managed-6/1.0.0.CR4/arquillian-tomcat-managed-6-1.0.0.CR4.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-tomcat-managed-6/1.0.0.CR4/arquillian-tomcat-managed-6-1.0.0.CR4.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.container
          »
          arquillian-tomcat-managed-7
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-tomcat-managed-7/1.0.0.CR4/arquillian-tomcat-managed-7-1.0.0.CR4.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-tomcat-managed-7/1.0.0.CR4/arquillian-tomcat-managed-7-1.0.0.CR4.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.container
          »
          arquillian-tomcat-remote-6
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-tomcat-remote-6/1.0.0.CR4/arquillian-tomcat-remote-6-1.0.0.CR4.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-tomcat-remote-6/1.0.0.CR4/arquillian-tomcat-remote-6-1.0.0.CR4.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
      &lt;/ul&gt;&lt;h3&gt;
        Release notes and resolved issues
        &lt;small&gt;4&lt;/small&gt;
      &lt;/h3&gt;
      &lt;p&gt;Small bugfix release&lt;/p&gt;
      &lt;dl&gt;
      &lt;dt&gt;Bug&lt;/dt&gt;
        &lt;dd&gt;
          &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-548&quot;&gt;ARQ-548&lt;/a&gt; -         Unable to set custom Loader for Tomcat 7 Embedded container&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1044&quot;&gt;ARQ-1044&lt;/a&gt; -         The properties of tomcat container configuration in arquillian.xml are not parsed properly&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1051&quot;&gt;ARQ-1051&lt;/a&gt; -         Arquillian Container Tomcat test dependency weld-servlet is not available in Maven Central&lt;/li&gt;
          &lt;/ul&gt;
      &lt;/dd&gt;
      &lt;/dl&gt;&lt;p&gt;
        Thanks to the following list of contributors:
        &lt;a href=&quot;https://community.jboss.org/people/aslak&quot;&gt;Aslak Knutsen&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/ianbrandt&quot;&gt;Ian Brandt&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/trepel&quot;&gt;Tomas Repel&lt;/a&gt;
      &lt;/p&gt;
    </content>
  </entry>
  <entry>
    <id>http://arquillian.org/blog/2012/09/19/introducting-arquillian-graphene-page-fragments/</id>
    <title>Introducing Arquillian Graphene Page Fragments</title>
    <updated>2012-09-20T00:00:00+00:00</updated>
    <link href="http://arquillian.org/blog/2012/09/19/introducting-arquillian-graphene-page-fragments/" rel="alternate" type="text/html" />
    <category scheme="http://arquillian.org/blog/tags" term="graphene" />
    <category scheme="http://arquillian.org/blog/tags" term="selenium" />
    <category scheme="http://arquillian.org/blog/tags" term="page-fragment" />
    <category scheme="http://arquillian.org/blog/tags" term="best-practice" />
    <category scheme="http://arquillian.org/blog/tags" term="2012" />
    <category scheme="http://arquillian.org/blog/tags" term="nonrelease" />
    <category scheme="http://arquillian.org/blog" term="arquillian" />
    <summary>
      Tools like Arquillian Graphene, WebDriver, or just plain Selenium combined with concepts like Page Objects can help you automate your functional(integration, whatever&#8230;) web UI tests. We have already introduced some of the advances brought to you by Arquillian Graphene earlier. In this blog entry we will look a bit deeper into a new concept introduced in Arquillian Graphene 2.0.0.Alpha2; Page Fragments.
      Consider the following example taken from the RichFaces component showcase. The page under test contain three Autocomplete widgets.
      public class TestAutocompleteWidgets extends AbstractGrapheneTest {
      
          private JQueryLocator minCharInput = jq("input[type=text]:eq(0)");
          private JQueryLocator multipleSelectionInput = jq("input[type=text]:eq(1)");
       ......
    </summary>
    <content type="html">
      &lt;p&gt;Tools like &lt;em&gt;Arquillian Graphene&lt;/em&gt;, &lt;em&gt;WebDriver&lt;/em&gt;, or just plain &lt;em&gt;Selenium&lt;/em&gt; combined with concepts like &lt;a href=&quot;http://code.google.com/p/selenium/wiki/PageObjects&quot;&gt;&lt;em&gt;Page Objects&lt;/em&gt;&lt;/a&gt; can help you automate your functional(integration, whatever&amp;#8230;) web UI tests. We have already introduced some of the advances brought to you by &lt;em&gt;Arquillian Graphene&lt;/em&gt; &lt;a href=&quot;http://arquillian.org/blog/tags/graphene/&quot;&gt;earlier&lt;/a&gt;. In this blog entry we will look a bit deeper into a new concept introduced in &lt;em&gt;Arquillian Graphene&lt;/em&gt; 2.0.0.Alpha2; &lt;em&gt;Page Fragments&lt;/em&gt;.&lt;/p&gt;
      &lt;p&gt;Consider the following example taken from the RichFaces &lt;a href=&quot;http://showcase.richfaces.org/richfaces/component-sample.jsf?demo=autocomplete&amp;amp;sample=modes&amp;amp;skin=blueSky&quot;&gt;component showcase&lt;/a&gt;. The page under test contain three Autocomplete widgets.&lt;/p&gt;
      &lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;public class TestAutocompleteWidgets extends AbstractGrapheneTest {&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;    private JQueryLocator minCharInput = jq(&quot;input[type=text]:eq(0)&quot;);
          private JQueryLocator multipleSelectionInput = jq(&quot;input[type=text]:eq(1)&quot;);
          private JQueryLocator selectFirstFalseInput = jq(&quot;input[type=text]:eq(2)&quot;);
          private JQueryLocator selection = jq(&quot;div.rf-au-itm&quot;);&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;    @Test
          public void testFirstAutocomplete() {&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;        graphene.keyPress(minCharInput, 'a');&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;        assertFalse(graphene.isElementPresent(selection),
                  &quot;The suggestion list should not be visible, since there is only one char!&quot;);&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;        String keys = &quot;ar&quot;;
              graphene.focus(minCharInput);
              selenium.type(minCharInput, keys);
              guardXhr(graphene).fireEvent(minCharInput, Event.KEYPRESS);&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;        assertTrue(graphene.isVisible(selection), 
                  &quot;The suggestion list should be visible, since there are two chars!&quot;);&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;        String actualArizona = graphene.getText(jq(selection.getRawLocator() + &quot;:eq(0)&quot;));
              assertEquals(actualArizona, &quot;Arizona&quot;, &quot;The provided suggestion should be Arizona!&quot;);&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;        String actualArkansas = graphene.getText(jq(selection.getRawLocator() + &quot;:eq(1)&quot;));
              assertEquals(actualArkansas, &quot;Arkansas&quot;, &quot;The provided suggestion should be Arkansas!&quot;);&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;    }&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;    @Test
          public void testSecondAutocomplete() {&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;        char key = 'a';
              selenium.focus(multipleSelectionInput);
              guardXhr(selenium).keyPress(multipleSelectionInput, key);&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;        assertTrue(selenium.isVisible(selection),
                  &quot;The suggestion list should be visible, since there is correct starting char!&quot;);&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;        selenium.keyPressNative(KeyEvent.VK_ENTER);&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;        key = ' ';
              selenium.keyPress(multipleSelectionInput, key);&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;        key = 'w';&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;        selenium.focus(multipleSelectionInput);
              guardXhr(selenium).keyPress(multipleSelectionInput, key);&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;        assertTrue(selenium.isVisible(selection),
                  &quot;The suggestion list should be visible, since there is correct starting char!&quot;);&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;        selenium.keyPressNative(KeyEvent.VK_ENTER);&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;        String actualContentOfInput = selenium.getValue(multipleSelectionInput);
              assertEquals(actualContentOfInput, &quot;Alabama Washington&quot;, &quot;The input should contain something else!&quot;);
          }&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;    @Test
          public void testThirdAutocomplete() {
              //similar autocomplete interactions as in the previous tests
          }
      }&lt;/code&gt;&lt;/pre&gt;
      &lt;h3&gt;Now, ask yourself the following questions:&lt;/h3&gt;
      &lt;ul&gt;
      &lt;li&gt;&lt;em&gt;Do you find these types of tests less robust than for example unit tests for the persistence layer?&lt;/em&gt;&lt;/li&gt;
      &lt;/ul&gt;&lt;ul&gt;
      &lt;li&gt;&lt;em&gt;Do you think these tests still pass when the underlying HTML change?&lt;/em&gt;&lt;/li&gt;
      &lt;/ul&gt;&lt;ul&gt;
      &lt;li&gt;&lt;em&gt;Do you see repeating code in the these tests?&lt;/em&gt;&lt;/li&gt;
      &lt;/ul&gt;&lt;p&gt;In my opinion you should have a clean answer to all of these questions. You are probably aware that tests should be loosely coupled with the underlying HTML structure of the application under test as it makes tests more robust and changes in the HTML structure of the page will not directly affect all tests.&lt;/p&gt;
      &lt;p&gt;Let&amp;#8217;s apply the &lt;a href=&quot;http://code.google.com/p/selenium/wiki/PageObjects&quot;&gt;&lt;em&gt;Page Objects&lt;/em&gt;&lt;/a&gt; pattern to split the HTML structure and the test logic. The &lt;em&gt;Page Object&lt;/em&gt; will encapsulate the HTML structure so when the HTML change, only your &lt;em&gt;Page Objects&lt;/em&gt; has to change.&lt;/p&gt;
      &lt;ul&gt;
      &lt;li&gt;&lt;em&gt;But what about when I&amp;#8217;m testing another application that use the same Autocomplete widget?&lt;/em&gt;&lt;/li&gt;
      &lt;/ul&gt;&lt;ul&gt;
      &lt;li&gt;&lt;em&gt;Should I copy the part of the Page Object that interact with the Autocomplete widget and paste it around in my code?&lt;/em&gt;&lt;/li&gt;
      &lt;/ul&gt;&lt;p&gt;But as you&amp;#8217;re already thinking: this would be a major don&amp;#8217;t-repeat-yourself violation! Is there something we could do to improve this?&lt;/p&gt;
      &lt;p&gt;&lt;strong&gt;Yes, there is! Arquillian Graphene &lt;em&gt;Page Fragments&lt;/em&gt; to the rescue!&lt;/strong&gt;&lt;/p&gt;
      &lt;h3&gt;
      &lt;em&gt;Page Fragments&lt;/em&gt;, what are they?&lt;/h3&gt;
      &lt;ul&gt;
      &lt;li&gt;
      &lt;em&gt;Page Fragments&lt;/em&gt; are any repeating part of a page, any widget, web component, etc.&lt;/li&gt;
      	&lt;li&gt;They encapsulate parts of the page into reusable test components across your whole test suite.&lt;/li&gt;
      	&lt;li&gt;You can differentiate each fragment by its root element and reference other elements as children of that root.&lt;/li&gt;
      	&lt;li&gt;They leverage Selenium WebDriver under the hood combined with all of the killer features of &lt;em&gt;Graphene&lt;/em&gt;.&lt;/li&gt;
      	&lt;li&gt;And they come with a set of utilities which simplify using them within tests and &lt;em&gt;Page Objects&lt;/em&gt;.&lt;/li&gt;
      &lt;/ul&gt;&lt;h3&gt;How to define &lt;em&gt;Page Fragments&lt;/em&gt;
      &lt;/h3&gt;
      &lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;public class AutocompleteFragment&amp;lt;T&amp;gt; {&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;    @Root
          WebElement root;&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;    @FindBy(css = &quot;input[type='text']&quot;)
          WebElement inputToWrite;&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;    public static final String CLASS_NAME_SUGGESTION = &quot;rf-au-itm&quot;;&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;    public List&amp;lt;Suggestion&amp;lt;T&amp;gt;&amp;gt; getAllSuggestions(SuggestionParser&amp;lt;T&amp;gt; parser) {
              List&amp;lt;Suggestion&amp;lt;T&amp;gt;&amp;gt; allSugg = new ArrayList&amp;lt;Suggestion&amp;lt;T&amp;gt;&amp;gt;();&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;        if (areSuggestionsAvailable()) {
                  WebElement rightSuggList = getRightSuggestionList();
                  List&amp;lt;WebElement&amp;gt; suggestions = rightSuggList.findElements(
                              By.className(CLASS_NAME_SUGGESTION));&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;            for (WebElement suggestion : suggestions) {
                      allSugg.add(parser.parse(suggestion));
                  }
              }&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;        return allSugg;
          }&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;    public List&amp;lt;Suggestion&amp;lt;T&amp;gt;&amp;gt; type(String value, SuggestionParser&amp;lt;T&amp;gt; parser) {
              List&amp;lt;Suggestion&amp;lt;T&amp;gt;&amp;gt; suggestions = new ArrayList&amp;lt;Suggestion&amp;lt;T&amp;gt;&amp;gt;();&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;        inputToWrite.sendKeys(value);
              try {
                  waitForSuggestions();
              } catch (TimeoutException ex) {
                  // no suggestions available
                  return suggestions;
              }&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;        suggestions = getAllSuggestions(parser);
              return suggestions;
          }&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;    //other handy encapsulation of Autocomplete services
      }&lt;/code&gt;&lt;/pre&gt;
      &lt;p class=&quot;info&quot;&gt;&lt;span&gt;The example is just a snippet from the full implementation of the RichFaces Autocomplete component.&lt;/span&gt;&lt;/p&gt;
      &lt;p&gt;Notice the &lt;code&gt;@Root&lt;/code&gt; annotation? The value of the root field is automatically injected by &lt;em&gt;Graphene&lt;/em&gt;. The &lt;code&gt;root&lt;/code&gt; field contain the root element as defined by the &lt;code&gt;@FindBy&lt;/code&gt; annotation on the injection point of the &lt;em&gt;Page Fragment&lt;/em&gt; in the Page Object or test. All &lt;code&gt;@FindBy&lt;/code&gt; fields in the &lt;em&gt;Page Fragment&lt;/em&gt; will use this root as a starting point.&lt;/p&gt;
      &lt;p&gt;The fragment implementation is pretty generic and therefore reusable in all tests in all applications that use the Autocomplete widget. A full implementation would encapsulate all the services this fragment provide, but it could for example also encapsulate browser specific interactions like submit or click actions. There are no boundaries!&lt;/p&gt;
      &lt;h3&gt;Using &lt;em&gt;Page Fragments&lt;/em&gt; and &lt;em&gt;Page Objects&lt;/em&gt; together&lt;/h3&gt;
      &lt;p&gt;Let&amp;#8217;s rewrite the previous test to use our new &lt;em&gt;Page Fragment&lt;/em&gt; together with our &lt;em&gt;Page Object&lt;/em&gt;.&lt;/p&gt;
      &lt;p&gt;First we define a &lt;em&gt;Page Object&lt;/em&gt; which contain the structure of the page under test.&lt;/p&gt;
      &lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;public class TestPage {&lt;/code&gt;
          
      &lt;code class=&quot;prettify&quot;&gt;    @FindBy(css = &quot;div.rf-au:nth-of-type(1)&quot;)
          private AutocompleteFragment&amp;lt;String&amp;gt; autocomplete1;&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;    @FindBy(css = &quot;div.rf-au:nth-of-type(2)&quot;)
          private AutocompleteFragment&amp;lt;String&amp;gt; autocomplete2;&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;    @FindBy(css = &quot;div.rf-au:nth-of-type(3)&quot;)
          private AutocompleteFragment&amp;lt;String&amp;gt; autocomplete3;&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;    @FindBy(xpath = &quot;//*[contains(@id,'sh1')]&quot;)
          private WebElement viewSourceLink;&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;    //all getters for the fields&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;    //other handy methods which you find useful when testing those three Autocomplete widgets
      }&lt;/code&gt;&lt;/pre&gt;
      &lt;p&gt;Declaring the &lt;em&gt;Page Fragment&lt;/em&gt; in the &lt;em&gt;Page Object&lt;/em&gt; is the preferred option, but you can also declare the &lt;em&gt;Page Fragment&lt;/em&gt; directly in the test if desired. The only thing you need to do is to annotate the &lt;em&gt;Page Fragment&lt;/em&gt; object with WebDriver&amp;#8217;s &lt;code&gt;@FindBy&lt;/code&gt; annotation to refer to the fragment&amp;#8217;s root DOM element. That simple!&lt;/p&gt;
      &lt;p&gt;Graphene differentiates between &lt;em&gt;Page Fragments&lt;/em&gt; and plain &lt;em&gt;WebElements&lt;/em&gt; in the same Page Object so they can be declared side by side. All of the &lt;strong&gt;initialization is done automatically&lt;/strong&gt;, so there is no need to initialize the &lt;em&gt;Page Fragments&lt;/em&gt; or &lt;em&gt;Page Objects&lt;/em&gt; in the &lt;code&gt;@Before&lt;/code&gt; method of your test case.&lt;/p&gt;
      &lt;p&gt;In this last example we see how the autocomplete widgets&amp;#8217;s &lt;em&gt;Page Fragment&lt;/em&gt; is used in the test case.&lt;/p&gt;
      &lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;public class TestWhichUsesPageFragments extend AbstractTest {&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;    @Page
          private TestPage testPage;&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;    @Test
          public void testFirstAutocomplete {
              AutocompleteFragment&amp;lt;String&amp;gt; autocomplete = testPage.getAutocomplete1();&lt;/code&gt;
              
      &lt;code class=&quot;prettify&quot;&gt;        autocomplete.type(&quot;a&quot;);&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;        assertFalse(autocomplete.areSuggestionsAvailable(), 
                  &quot;The suggestion list should not be visible, since there is only one char!&quot;);&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;        String keys = &quot;ar&quot;;
              autocomplete.type(keys);&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;        assertTrue(autocomplete.areSuggestionsAvailable(), 
                  &quot;The suggestion list should be visible, since there are two chars!&quot;);&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;        List&amp;lt;Suggestion&amp;lt;String&amp;gt;&amp;gt; expectedSuggestions = new ArrayList&amp;lt;Suggestion&amp;lt;String&amp;gt;&amp;gt;();
              expectedSuggestions.add(new Suggestion&amp;lt;String&amp;gt;(&quot;Arizona&quot;));
              expectedSuggestions.add(new Suggestion&amp;lt;String&amp;gt;(&quot;Arkansas&quot;));&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;        assertEquals(autocomplete.getAllSuggestions(new StringSuggestionParser()), expectedSuggestions, 
                  &quot;Suggestions are wrong!&quot;);
          }&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;    @Test
          public void testSecondAutocomplete() {
              AutocompleteFragment&amp;lt;String&amp;gt; autocomplete = testPage.getAutocomplete2();&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;        String key = &quot;a&quot;;
              autocomplete.type(key);&lt;/code&gt;
              
      &lt;code class=&quot;prettify&quot;&gt;        String errorMsg = &quot;The suggestion list should be visible, since there was typed correct char &quot;;
              assertTrue(autocomplete.areSuggestionsAvailable(), errorMsg + key);&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;        autocomplete.autocomplete(autocomplete.getFirstSuggestion());&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;        autocomplete.type(&quot; &quot;);&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;        key = &quot;w&quot;
              autocomplete.type(key);&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;        assertTrue(autocomplete.areSuggestionsAvailable(), errorMsg + key);&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;        autocomplete.autocomplete(autocomplete.getFirstSuggestion());        &lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;        String actualContentOfInput = autocomplete.getInputValue();
              assertEquals(actualContentOfInput, &quot;Alabama Washington&quot;, &quot;The input should contain something else!&quot;);
          }&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;    @Test
          public void testThirdAutocomplete() {
              //similar autocomplete interactions as in the previous tests
          }
      }&lt;/code&gt;&lt;/pre&gt;
      &lt;p&gt;As your application grow, the only thing that needs to change is the root references of your &lt;em&gt;Page Fragments&lt;/em&gt;. Last but not least you will be able to make your &lt;em&gt;Page Fragment&lt;/em&gt; availabe to be used by other tests in other applications.&lt;/p&gt;
      &lt;p&gt;To try &lt;em&gt;Page Fragments&lt;/em&gt; check out the Graphene 2.0.0.Alpha2 release. Getting start information can be found in the &lt;a href=&quot;https://docs.jboss.org/author/display/ARQGRA2/Page+Abstractions&quot;&gt;Reference Documentation&lt;/a&gt;.&lt;/p&gt;
    </content>
  </entry>
  <entry>
    <id>http://arquillian.org/blog/2012/09/17/arquillian-graphene-2-0-0-Alpha2/</id>
    <title>Graphene 2.0.0.Alpha2 Released</title>
    <updated>2012-09-18T00:00:00+00:00</updated>
    <link href="http://arquillian.org/blog/2012/09/17/arquillian-graphene-2-0-0-Alpha2/" rel="alternate" type="text/html" />
    <category scheme="http://arquillian.org/blog/tags" term="release" />
    <category scheme="http://arquillian.org/blog/tags" term="extension" />
    <category scheme="http://arquillian.org/blog/tags" term="graphene" />
    <category scheme="http://arquillian.org/blog" term="arquillian" />
    <summary>
      The Arquillian team is proud to announce the 2.0.0.Alpha2 release of the Graphene component!
      Graphene 2 is building on top of the Selenium WebDriver API and provide extensions for writing reusable, robust and AJAX-enabled tests with improved readability.
      Graphene 2 uses the ideas from Graphene 1 (based on Selenium 1 API) and applies it to the world of Selenium WebDriver.
      You can read more about the difference between Graphene 1 and Graphene 2 in the Reference Documentation
      Features
      Page Abstractions
      Page abstractions allow you to abstract page functionality using the well-known Selenium design pattern Page Objects. In Graphene you can inject page objects directly into the......
    </summary>
    <content type="html">
      &lt;p&gt;The Arquillian team is proud to announce the &lt;em&gt;2.0.0.Alpha2&lt;/em&gt; release of the &lt;em&gt;Graphene&lt;/em&gt; component!&lt;/p&gt;
      &lt;p&gt;&lt;em&gt;Graphene 2&lt;/em&gt; is building on top of the Selenium WebDriver API and provide extensions for writing &lt;strong&gt;reusable&lt;/strong&gt;, &lt;strong&gt;robust&lt;/strong&gt; and &lt;strong&gt;AJAX-enabled&lt;/strong&gt; tests with improved &lt;strong&gt;readability&lt;/strong&gt;.&lt;/p&gt;
      &lt;p&gt;&lt;em&gt;Graphene 2&lt;/em&gt; uses the ideas from &lt;em&gt;Graphene 1&lt;/em&gt; (based on &lt;em&gt;Selenium 1 API&lt;/em&gt;) and applies it to the world of &lt;a href=&quot;http://seleniumhq.org/projects/webdriver/&quot;&gt;Selenium WebDriver&lt;/a&gt;.&lt;/p&gt;
      &lt;p&gt;You can read more about the difference between Graphene 1 and Graphene 2 in the &lt;a href=&quot;https://docs.jboss.org/author/pages/viewpage.action?pageId=53118297&quot;&gt;Reference Documentation&lt;/a&gt;&lt;/p&gt;
      &lt;h3&gt;Features&lt;/h3&gt;
      &lt;h4&gt;Page Abstractions&lt;/h4&gt;
      &lt;p&gt;&lt;a href=&quot;https://docs.jboss.org/author/display/ARQGRA2/Page+Abstractions&quot;&gt;Page abstractions&lt;/a&gt; allow you to abstract page functionality using the well-known Selenium design pattern &lt;a href=&quot;http://code.google.com/p/selenium/wiki/PageObjects&quot;&gt;&lt;em&gt;Page Objects&lt;/em&gt;&lt;/a&gt;. In Graphene you can inject page objects directly into the test case using the &lt;code&gt;@Page&lt;/code&gt; annotation.&lt;/p&gt;
      &lt;p&gt;But we take the &lt;em&gt;Page Objects&lt;/em&gt; pattern one step further with the concept of &lt;a href=&quot;https://docs.jboss.org/author/display/ARQGRA2/Page+Fragments&quot;&gt;&lt;em&gt;Page Fragments&lt;/em&gt;&lt;/a&gt; . &lt;em&gt;Page Fragments&lt;/em&gt; are reusable parts within a page encapsulated into an object similar to &lt;em&gt;Page Objects&lt;/em&gt;. A good example of &lt;em&gt;Page Fragments&lt;/em&gt; are JavaScript widgets or forms.&lt;/p&gt;
      &lt;p&gt;The concept of &lt;em&gt;Page Fragments&lt;/em&gt; comes from an idea that those components share a same underlying DOM structure, the only difference between all occurences of a component is a location in a DOM tree where a component is rendered – this is denoted by the &lt;code&gt;@Root&lt;/code&gt; annotation. You can define this root location for each concrete occurence using a &lt;code&gt;@FindBy(locator)&lt;/code&gt; annotation.&lt;/p&gt;
      &lt;h4&gt;Fluent-API for Waiting Conditions&lt;/h4&gt;
      &lt;p&gt;Graphene provides a set of widely used &lt;a href=&quot;https://docs.jboss.org/author/display/ARQGRA2/Graphene+Utility+Class&quot;&gt;conditions to avoid writing them repeatedly&lt;/a&gt;.&lt;/p&gt;
      &lt;h4&gt;Request Guards&lt;/h4&gt;
      &lt;p&gt;&lt;a href=&quot;https://docs.jboss.org/author/display/ARQGRA2/Request+Guards&quot;&gt;Request guards&lt;/a&gt; block the Selenium test execution until a network communication caused by a given action ends. Guards support blocking on &lt;em&gt;HTTP&lt;/em&gt; and &lt;em&gt;XHR (AJAX)&lt;/em&gt; but can also be used to verify that no such requests were done.&lt;/p&gt;
      &lt;h4&gt;Under the Hood&lt;/h4&gt;
      &lt;p&gt;There are some low level features exposed as API that are used by Graphene internally. While not used regularly within a normal test, can be handy to write more robust tests:&lt;/p&gt;
      &lt;h5&gt;&lt;a href=&quot;https://docs.jboss.org/author/display/ARQGRA2/JavaScript+Interface&quot;&gt;JavaScript Interface&lt;/a&gt;&lt;/h5&gt;
      &lt;p&gt;This allows you to write a Java interface which automatically translates Java API invocations to JavaScript calls:&lt;/p&gt;
      &lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;@JavaScript
      public interface Document {
          String getTitle();
      }&lt;/code&gt;&lt;/pre&gt;
      &lt;h5&gt;Page Extensions&lt;/h5&gt;
      &lt;p&gt;&lt;a href=&quot;https://docs.jboss.org/author/display/ARQGRA2/Page+Extensions&quot;&gt;Page Extensions&lt;/a&gt; allow you to inject arbitrary JavaScript code in the page under the test. The javascript code might help you to test complex situations as well as bring completely new features for improving testing. Graphene internally uses &lt;em&gt;Page Extensions&lt;/em&gt; for &lt;em&gt;Request Guards&lt;/em&gt;.&lt;/p&gt;
      &lt;h5&gt;&lt;a href=&quot;https://docs.jboss.org/author/display/ARQGRA2/Graphene+Context+and+Proxy&quot;&gt;Graphene Context&lt;/a&gt;&lt;/h5&gt;
      &lt;p&gt;Graphene allows you to obtain current thread-local context of a browser session and inject it exactly where you need. No more need for driver reference propagation.&lt;/p&gt;
      &lt;h4&gt;Documentation&lt;/h4&gt;
      &lt;p&gt;Last but definitely not the least addition is &lt;a href=&quot;https://docs.jboss.org/author/display/ARQGRA2/Home&quot;&gt;the great documentation&lt;/a&gt; for all of the features above including answers for general questions like &lt;a href=&quot;https://docs.jboss.org/author/pages/viewpage.action?pageId=53118297&quot;&gt;&lt;em&gt;how Selenium 1, Graphene 1, Selenium WebDriver and Graphene 2 relates to each other&lt;/em&gt;&lt;/a&gt;, what’s the &lt;a href=&quot;https://docs.jboss.org/author/display/ARQGRA2/Using+Drone&quot;&gt;&lt;em&gt;relation between Graphene’s, Drone and Arquillian&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt;
      &lt;h3&gt;&lt;a href=&quot;https://docs.jboss.org/author/display/ARQGRA2/Getting+Started&quot;&gt;Getting Started&lt;/a&gt;&lt;/h3&gt;
      &lt;p&gt;It’s the same as with any other Arquillian extension: open the IDE, setup the &lt;a href=&quot;https://docs.jboss.org/author/display/ARQGRA2/Framework+Integration+Options&quot;&gt;Maven dependency&lt;/a&gt; and you are ready to &lt;a href=&quot;https://docs.jboss.org/author/display/ARQGRA2/Getting+Started&quot;&gt;start testing&lt;/a&gt;!&lt;/p&gt;
      &lt;h3&gt;What’s next?&lt;/h3&gt;
      &lt;p&gt;In the upcoming releases, we would like to focus on more new features as well as migrate some features from Graphene 1 to Graphene 2:&lt;/p&gt;
      &lt;ul&gt;
      &lt;li&gt;Forge plugin for quick start&lt;/li&gt;
      	&lt;li&gt;command interceptors&lt;/li&gt;
      	&lt;li&gt;parallel browser session control&lt;/li&gt;
      	&lt;li&gt;jQuery/Sizzle locators&lt;/li&gt;
      	&lt;li&gt;AJAX/HTTP Communication Halter&lt;/li&gt;
      	&lt;li&gt;page abstraction improvements&lt;/li&gt;
      	&lt;li&gt;closer integration with the Arquillian event system&lt;/li&gt;
      	&lt;li&gt;helpers for writing browser specific code&lt;/li&gt;
      &lt;/ul&gt;&lt;h3&gt;Call to Action&lt;/h3&gt;
      &lt;p&gt;&lt;a href=&quot;https://community.jboss.org/en/arquillian&quot;&gt;Let us know what you think&lt;/a&gt; and &lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA&quot;&gt;help us shape Graphene&lt;/a&gt; to be what you want it to be.&lt;/p&gt;
      &lt;h3&gt;What is Arquillian?&lt;/h3&gt;
      &lt;p&gt;Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop a comprehensive suite of tests from the convenience of your IDE and run them in any IDE, build tool or continuous integration environment.&lt;/p&gt;
      &lt;h3&gt;Release details&lt;/h3&gt;
      &lt;table class=&quot;table table-bordered table-striped&quot;&gt;&lt;tbody&gt;
      &lt;tr&gt;
      &lt;th&gt;Component&lt;/th&gt;
            &lt;td&gt;
              &lt;a href=&quot;http://arquillian.org/modules/graphene-extension/&quot;&gt;Graphene&lt;/a&gt;
            &lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Version&lt;/th&gt;
            &lt;td&gt;
              2.0.0.Alpha2
              &lt;span class=&quot;label tag&quot;&gt;
                &lt;a href=&quot;https://api.github.com/repos/arquillian/arquillian-graphene/commits/6ff63d888ca5a5eec068db833ee20144b4b981a8&quot;&gt;view tag&lt;/a&gt;
              &lt;/span&gt;
            &lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Release date&lt;/th&gt;
            &lt;td&gt;2012-09-12&lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Released by&lt;/th&gt;
            &lt;td&gt;Lukas Fryc&lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Compiled against&lt;/th&gt;
            &lt;td&gt;
              &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;Arquillian Core – 1.0.2.Final&lt;/li&gt;
              &lt;/ul&gt;
      &lt;/td&gt;
          &lt;/tr&gt;
      &lt;/tbody&gt;&lt;/table&gt;&lt;h3&gt;
        Published artifacts
        &lt;small&gt;org.jboss.arquillian.graphene&lt;/small&gt;
      &lt;/h3&gt;
      &lt;ul&gt;
      &lt;li&gt;
          org.jboss.arquillian.graphene
          »
          graphene-build-resources
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-build-resources/2.0.0.Alpha2/graphene-build-resources-2.0.0.Alpha2.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-build-resources/2.0.0.Alpha2/graphene-build-resources-2.0.0.Alpha2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.graphene
          »
          graphene-component-api
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-component-api/2.0.0.Alpha2/graphene-component-api-2.0.0.Alpha2.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-component-api/2.0.0.Alpha2/graphene-component-api-2.0.0.Alpha2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.graphene
          »
          graphene-selenium-api
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-selenium-api/2.0.0.Alpha2/graphene-selenium-api-2.0.0.Alpha2.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-selenium-api/2.0.0.Alpha2/graphene-selenium-api-2.0.0.Alpha2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.graphene
          »
          graphene-selenium-drone
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-selenium-drone/2.0.0.Alpha2/graphene-selenium-drone-2.0.0.Alpha2.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-selenium-drone/2.0.0.Alpha2/graphene-selenium-drone-2.0.0.Alpha2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.graphene
          »
          graphene-selenium-ftest-junit-container
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-selenium-ftest-junit-container/2.0.0.Alpha2/graphene-selenium-ftest-junit-container-2.0.0.Alpha2.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-selenium-ftest-junit-container/2.0.0.Alpha2/graphene-selenium-ftest-junit-container-2.0.0.Alpha2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.graphene
          »
          graphene-selenium-ftest-junit-standalone
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-selenium-ftest-junit-standalone/2.0.0.Alpha2/graphene-selenium-ftest-junit-standalone-2.0.0.Alpha2.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-selenium-ftest-junit-standalone/2.0.0.Alpha2/graphene-selenium-ftest-junit-standalone-2.0.0.Alpha2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.graphene
          »
          graphene-selenium-ftest-testng-container
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-selenium-ftest-testng-container/2.0.0.Alpha2/graphene-selenium-ftest-testng-container-2.0.0.Alpha2.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-selenium-ftest-testng-container/2.0.0.Alpha2/graphene-selenium-ftest-testng-container-2.0.0.Alpha2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.graphene
          »
          graphene-selenium-ftest-testng-standalone
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-selenium-ftest-testng-standalone/2.0.0.Alpha2/graphene-selenium-ftest-testng-standalone-2.0.0.Alpha2.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-selenium-ftest-testng-standalone/2.0.0.Alpha2/graphene-selenium-ftest-testng-standalone-2.0.0.Alpha2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.graphene
          »
          graphene-selenium-impl
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-selenium-impl/2.0.0.Alpha2/graphene-selenium-impl-2.0.0.Alpha2.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-selenium-impl/2.0.0.Alpha2/graphene-selenium-impl-2.0.0.Alpha2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.graphene
          »
          graphene-webdriver-drone
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-webdriver-drone/2.0.0.Alpha2/graphene-webdriver-drone-2.0.0.Alpha2.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-webdriver-drone/2.0.0.Alpha2/graphene-webdriver-drone-2.0.0.Alpha2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.graphene
          »
          graphene-webdriver-ftest
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-webdriver-ftest/2.0.0.Alpha2/graphene-webdriver-ftest-2.0.0.Alpha2.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-webdriver-ftest/2.0.0.Alpha2/graphene-webdriver-ftest-2.0.0.Alpha2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.graphene
          »
          graphene-webdriver-impl
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-webdriver-impl/2.0.0.Alpha2/graphene-webdriver-impl-2.0.0.Alpha2.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-webdriver-impl/2.0.0.Alpha2/graphene-webdriver-impl-2.0.0.Alpha2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.graphene
          »
          graphene-webdriver-spi
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-webdriver-spi/2.0.0.Alpha2/graphene-webdriver-spi-2.0.0.Alpha2.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/graphene/graphene-webdriver-spi/2.0.0.Alpha2/graphene-webdriver-spi-2.0.0.Alpha2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
      &lt;/ul&gt;&lt;h3&gt;
        Release notes and resolved issues
        &lt;small&gt;30&lt;/small&gt;
      &lt;/h3&gt;
      &lt;p&gt;Adopting critical functionality from Graphene 1; Page Fragments&lt;/p&gt;
      &lt;dl&gt;
      &lt;dt&gt;Bug&lt;/dt&gt;
        &lt;dd&gt;
          &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-6&quot;&gt;ARQGRA-6&lt;/a&gt; -         Using of JQuery 1.5 causes that JQuery selectors are not escaped properly&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-151&quot;&gt;ARQGRA-151&lt;/a&gt; -         Graphene.getProxyForInterfaces returns wrong proxy&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-159&quot;&gt;ARQGRA-159&lt;/a&gt; -         Use Drone depchain in Graphene depchain&lt;/li&gt;
          &lt;/ul&gt;
      &lt;/dd&gt;
      &lt;/dl&gt;&lt;dl&gt;
      &lt;dt&gt;Component  Upgrade&lt;/dt&gt;
        &lt;dd&gt;
          &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-150&quot;&gt;ARQGRA-150&lt;/a&gt; -         Upgrade to Arquillian Core 1.0.2.Final&lt;/li&gt;
          &lt;/ul&gt;
      &lt;/dd&gt;
      &lt;/dl&gt;&lt;dl&gt;
      &lt;dt&gt;Feature Request&lt;/dt&gt;
        &lt;dd&gt;
          &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-40&quot;&gt;ARQGRA-40&lt;/a&gt; -         Support for Component Objects pattern for Selenium 2&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-41&quot;&gt;ARQGRA-41&lt;/a&gt; -         Support for Java-to-JavaScript calling interfaces&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-62&quot;&gt;ARQGRA-62&lt;/a&gt; -         Umbrella: Adopt Graphene for usage of WebDriver/Selenium 2 API&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-67&quot;&gt;ARQGRA-67&lt;/a&gt; -         Migrate request guards to Selenium 2&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-71&quot;&gt;ARQGRA-71&lt;/a&gt; -         Adopt JavaScript injection (Page Extensions) for Selenium 2&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-74&quot;&gt;ARQGRA-74&lt;/a&gt; -         Support Graphene utility in original scope with Selenium 2&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-156&quot;&gt;ARQGRA-156&lt;/a&gt; -         Introduce Opera and RemoteWebDriver factory wrappers&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-157&quot;&gt;ARQGRA-157&lt;/a&gt; -         Support XHR interception&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-160&quot;&gt;ARQGRA-160&lt;/a&gt; -         Create a configurator for Graphene 2 using arquillian.xml&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-161&quot;&gt;ARQGRA-161&lt;/a&gt; -         Introduce profile to enable execution from several browsers&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-179&quot;&gt;ARQGRA-179&lt;/a&gt; -         Document difference between Graphene 1 and Graphene 2 (Selenium 1 and WebDriver)&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-180&quot;&gt;ARQGRA-180&lt;/a&gt; -         Document Graphene - Getting Started&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-181&quot;&gt;ARQGRA-181&lt;/a&gt; -         Document Using WebDriver&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-182&quot;&gt;ARQGRA-182&lt;/a&gt; -         Document Using Drone&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-183&quot;&gt;ARQGRA-183&lt;/a&gt; -         Document Testing AJAX&lt;/li&gt;
          &lt;/ul&gt;
      &lt;/dd&gt;
      &lt;/dl&gt;&lt;dl&gt;
      &lt;dt&gt;Task&lt;/dt&gt;
        &lt;dd&gt;
          &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-132&quot;&gt;ARQGRA-132&lt;/a&gt; -         Add BOM usage into documentation&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-158&quot;&gt;ARQGRA-158&lt;/a&gt; -         Check and complete all documentation for all features in Alpha2&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-163&quot;&gt;ARQGRA-163&lt;/a&gt; -         Refactor Graphene Webdriver SPI module&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-171&quot;&gt;ARQGRA-171&lt;/a&gt; -         Refactor Component Objects - mainly make Component Obejcts as POJO&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-172&quot;&gt;ARQGRA-172&lt;/a&gt; -         Documentation for Page Extensions&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-173&quot;&gt;ARQGRA-173&lt;/a&gt; -         Documentation for Page Fragments&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-175&quot;&gt;ARQGRA-175&lt;/a&gt; -         Documentation for JavaScript interfaces&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-176&quot;&gt;ARQGRA-176&lt;/a&gt; -         Documentation for GrapheneContext and proxies&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-177&quot;&gt;ARQGRA-177&lt;/a&gt; -         Documentation for Request Guards&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-178&quot;&gt;ARQGRA-178&lt;/a&gt; -         Documentation for Graphene utility class&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQGRA-186&quot;&gt;ARQGRA-186&lt;/a&gt; -         Rename Component Objects dependencies to Page Fragments&lt;/li&gt;
          &lt;/ul&gt;
      &lt;/dd&gt;
      &lt;/dl&gt;&lt;p&gt;
        Thanks to the following list of contributors:
        &lt;a href=&quot;https://github.com/papousek&quot;&gt;Jan Papoušek&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/lfryc&quot;&gt;Lukas Fryc&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/jhuska&quot;&gt;Juraj Huska&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/jhuska&quot;&gt;Juraj Huska&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/bleathem&quot;&gt;Brian Leathem&lt;/a&gt;
      &lt;/p&gt;
    </content>
  </entry>
  <entry>
    <id>http://arquillian.org/blog/2012/09/11/arquillian-extension-drone-1-1-0-CR3/</id>
    <title>Arquillian Drone Extension 1.1.0.CR3 Released</title>
    <updated>2012-09-12T00:00:00+00:00</updated>
    <link href="http://arquillian.org/blog/2012/09/11/arquillian-extension-drone-1-1-0-CR3/" rel="alternate" type="text/html" />
    <category scheme="http://arquillian.org/blog/tags" term="release" />
    <category scheme="http://arquillian.org/blog/tags" term="extension" />
    <category scheme="http://arquillian.org/blog/tags" term="drone" />
    <category scheme="http://arquillian.org/blog" term="arquillian" />
    <summary>
      The Arquillian team is proud to announce the 1.1.0.CR3 release of the Arquillian Drone Extension component!
      After some thought we realized that the current options for configuration (and implementation for that matter) were too complicated. While browserCapabilities allowed you to ignore the implementing class of WebDriver, you were still required to remember how to set up various capabilities.
      We dropped the capability configuration support as you know it from CR1 and CR2 and replaced it with something much easier to use. You can now set up the capabilities directly as they come from WebDriver.
      Some of the highlights in this release
       Direct capability......
    </summary>
    <content type="html">
      &lt;p&gt;The Arquillian team is proud to announce the &lt;em&gt;1.1.0.CR3&lt;/em&gt; release of the &lt;em&gt;Arquillian Drone Extension&lt;/em&gt; component!&lt;/p&gt;
      &lt;p&gt;After some thought we realized that the current options for configuration (and implementation for that matter) were too complicated. While &lt;code&gt;browserCapabilities&lt;/code&gt; allowed you to ignore the implementing class of WebDriver, you were still required to remember how to set up various capabilities.&lt;/p&gt;
      &lt;p&gt;We dropped the capability configuration support as you know it from CR1 and CR2 and replaced it with something much easier to use. You can now set up the capabilities directly as they come from WebDriver.&lt;/p&gt;
      &lt;h3 class=&quot;highlights&quot;&gt;Some of the highlights in this release&lt;/h3&gt;
      &lt;p&gt;&lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; Direct capability mapping. Think of any WebDriver capability, such as &lt;code&gt;opera.no_restart&lt;/code&gt; or &lt;code&gt;acceptSSLCerts&lt;/code&gt;, you can now specify them directly in &lt;code&gt;arquillian.xml&lt;/code&gt;:&lt;/p&gt;
      &lt;div class=&quot;filename&quot;&gt;arquillian.xml&lt;/div&gt;
      &lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;&amp;lt;extension qualifier=&quot;webdriver&quot;&amp;gt;
          &amp;lt;property name=&quot;browserCapabilities&quot;&amp;gt;firefox&amp;lt;/property&amp;gt;
          &amp;lt;property name=&quot;opera.no_restart&quot;&amp;gt;true&amp;lt;/property&amp;gt;
          &amp;lt;property name=&quot;acceptSSLCerts&quot;&amp;gt;false&amp;lt;/property&amp;gt;
      &amp;lt;/extension&amp;gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;p&gt;&lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; Deprecated Arquillian Drone system properties configuration in favor of the system properties configuration provided by Arquillian Core. The old style of system properties still work, but using them will produce warnings in the log and will be removed completely in a later version.&lt;/p&gt;
      &lt;p&gt;In the previous &lt;code&gt;arquilian.xml&lt;/code&gt; snippet, &lt;code&gt;browserCapabilities&lt;/code&gt; would map to &lt;code&gt;arquillian.webdriver.browser.capabilities&lt;/code&gt;. The correct way to override this property is now &lt;code&gt;arq.extension.webdriver.browserCapabilities&lt;/code&gt;. With the new properties handling you can also provide the properties in a file by spcifying the file name in the &lt;code&gt;arquillian.properties&lt;/code&gt; system property.&lt;/p&gt;
      &lt;p&gt;The same apply to the qualifiers support. Given the following &lt;code&gt;arquillian.xml&lt;/code&gt; snippet you would now use &lt;code&gt;arq.extension.webdriver-myqualifier.browserCapabilities&lt;/code&gt; instead of the legacy &lt;code&gt;arquillian.webdriver.myqualifier.browser.capabilities&lt;/code&gt;:&lt;/p&gt;
      &lt;div class=&quot;filename&quot;&gt;arquillian.xml&lt;/div&gt;
      &lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;&amp;lt;extension qualifier=&quot;webdriver-myqualifier&quot;&amp;gt;
          &amp;lt;property name=&quot;browserCapabilities&quot;&amp;gt;chrome&amp;lt;/property&amp;gt;
      &amp;lt;/extension&amp;gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;p&gt;We hope that this will make Arquillian Drone easier to use, especially for people who have already tried to use &lt;code&gt;browserCapabilities&lt;/code&gt;.&lt;/p&gt;
      &lt;p&gt;We look forward to hearing your feedback about this release in the &lt;a href=&quot;http://community.jboss.org/en/arquillian&quot;&gt;community forums&lt;/a&gt;!&lt;/p&gt;
      &lt;h3&gt;What is Arquillian?&lt;/h3&gt;
      &lt;p&gt;Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop a comprehensive suite of tests from the convenience of your IDE and run them in any IDE, build tool or continuous integration environment.&lt;/p&gt;
      &lt;h3&gt;Release details&lt;/h3&gt;
      &lt;table class=&quot;table table-bordered table-striped&quot;&gt;&lt;tbody&gt;
      &lt;tr&gt;
      &lt;th&gt;Component&lt;/th&gt;
            &lt;td&gt;
              &lt;a href=&quot;http://arquillian.org/modules/drone-extension/&quot;&gt;Arquillian Drone Extension&lt;/a&gt;
            &lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Version&lt;/th&gt;
            &lt;td&gt;
              1.1.0.CR3
              &lt;span class=&quot;label tag&quot;&gt;
                &lt;a href=&quot;https://api.github.com/repos/arquillian/arquillian-extension-drone/commits/833113aa75a75ad64b90de312bc61433d46ef51b&quot;&gt;view tag&lt;/a&gt;
              &lt;/span&gt;
            &lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Release date&lt;/th&gt;
            &lt;td&gt;2012-09-10&lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Released by&lt;/th&gt;
            &lt;td&gt;Aslak Knutsen&lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Compiled against&lt;/th&gt;
            &lt;td&gt;
              &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;Arquillian Core – 1.0.2.Final&lt;/li&gt;
              &lt;/ul&gt;
      &lt;/td&gt;
          &lt;/tr&gt;
      &lt;/tbody&gt;&lt;/table&gt;&lt;h3&gt;
        Published artifacts
        &lt;small&gt;org.jboss.arquillian.extension&lt;/small&gt;
      &lt;/h3&gt;
      &lt;ul&gt;
      &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-drone-api
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-api/1.1.0.CR3/arquillian-drone-api-1.1.0.CR3.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-api/1.1.0.CR3/arquillian-drone-api-1.1.0.CR3.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-drone-bom
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-bom/1.1.0.CR3/arquillian-drone-bom-1.1.0.CR3.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-drone-configuration
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-configuration/1.1.0.CR3/arquillian-drone-configuration-1.1.0.CR3.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-configuration/1.1.0.CR3/arquillian-drone-configuration-1.1.0.CR3.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-drone-impl
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-impl/1.1.0.CR3/arquillian-drone-impl-1.1.0.CR3.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-impl/1.1.0.CR3/arquillian-drone-impl-1.1.0.CR3.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-drone-selenium
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-selenium/1.1.0.CR3/arquillian-drone-selenium-1.1.0.CR3.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-selenium/1.1.0.CR3/arquillian-drone-selenium-1.1.0.CR3.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-drone-selenium-depchain
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-selenium-depchain/1.1.0.CR3/arquillian-drone-selenium-depchain-1.1.0.CR3.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-drone-selenium-server
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-selenium-server/1.1.0.CR3/arquillian-drone-selenium-server-1.1.0.CR3.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-selenium-server/1.1.0.CR3/arquillian-drone-selenium-server-1.1.0.CR3.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-drone-spi
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-spi/1.1.0.CR3/arquillian-drone-spi-1.1.0.CR3.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-spi/1.1.0.CR3/arquillian-drone-spi-1.1.0.CR3.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-drone-webdriver
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-webdriver/1.1.0.CR3/arquillian-drone-webdriver-1.1.0.CR3.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-webdriver/1.1.0.CR3/arquillian-drone-webdriver-1.1.0.CR3.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-drone-webdriver-depchain
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-drone-webdriver-depchain/1.1.0.CR3/arquillian-drone-webdriver-depchain-1.1.0.CR3.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
      &lt;/ul&gt;&lt;h3&gt;
        Release notes and resolved issues
        &lt;small&gt;7&lt;/small&gt;
      &lt;/h3&gt;
      &lt;p&gt;&lt;/p&gt;
      &lt;dl&gt;
      &lt;dt&gt;Bug&lt;/dt&gt;
        &lt;dd&gt;
          &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1047&quot;&gt;ARQ-1047&lt;/a&gt; -         RemoteAddress nor Remote property does not trigger remote webdriver&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1064&quot;&gt;ARQ-1064&lt;/a&gt; -         Can't set WebDriver capability with name containing '_'&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1075&quot;&gt;ARQ-1075&lt;/a&gt; -         Problem with Drone when configuring WebDriver via Capabilities interface&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1090&quot;&gt;ARQ-1090&lt;/a&gt; -         Remove chromeSwitches from tests&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1091&quot;&gt;ARQ-1091&lt;/a&gt; -         Make capability setting in Drone easier&lt;/li&gt;
          &lt;/ul&gt;
      &lt;/dd&gt;
      &lt;/dl&gt;&lt;dl&gt;
      &lt;dt&gt;Component  Upgrade&lt;/dt&gt;
        &lt;dd&gt;
          &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1088&quot;&gt;ARQ-1088&lt;/a&gt; -         Upgrade and align AS7 versions in Drone tests&lt;/li&gt;
          &lt;/ul&gt;
      &lt;/dd&gt;
      &lt;/dl&gt;&lt;p&gt;
        Thanks to the following list of contributors:
        &lt;a href=&quot;https://community.jboss.org/people/kpiwko&quot;&gt;Karel Piwko&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/lfryc&quot;&gt;Lukas Fryc&lt;/a&gt;, &lt;a href=&quot;https://github.com/papousek&quot;&gt;Jan Papoušek&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/aslak&quot;&gt;Aslak Knutsen&lt;/a&gt;
      &lt;/p&gt;
    </content>
  </entry>
  <entry>
    <id>http://arquillian.org/blog/2012/08/31/arquillian-extension-persistence-1-0-0-Alpha5/</id>
    <title>Arquillian Persistence Extension 1.0.0.Alpha5 Released</title>
    <updated>2012-09-01T00:00:00+00:00</updated>
    <link href="http://arquillian.org/blog/2012/08/31/arquillian-extension-persistence-1-0-0-Alpha5/" rel="alternate" type="text/html" />
    <category scheme="http://arquillian.org/blog/tags" term="release" />
    <category scheme="http://arquillian.org/blog/tags" term="extension" />
    <category scheme="http://arquillian.org/blog/tags" term="persistence" />
    <category scheme="http://arquillian.org/blog" term="arquillian" />
    <summary>
      The Arquillian team is proud to announce the 1.0.0.Alpha5 release of the Arquillian Persistence Extension component!
      We are back with a bunch of handy new additions and some bug fixes, so keep on reading..
      Big kudos goes to Tomas Hradec for his great contribution on the &#8220;JPA Cache Eviction&#8221; support. You can now control your second level cache directly from the Arquillian tests. I would also like to thank Adrian Gonzalez, Alex Holmansky, Anton Shaykin and Christoph Rohr for their feedback which led us to fix some minor annoyances and shortcomings of APE. We are proud of the vibrant and active community......
    </summary>
    <content type="html">
      &lt;p&gt;The Arquillian team is proud to announce the &lt;em&gt;1.0.0.Alpha5&lt;/em&gt; release of the &lt;em&gt;Arquillian Persistence Extension&lt;/em&gt; component!&lt;/p&gt;
      &lt;p&gt;We are back with a bunch of handy new additions and some bug fixes, so keep on reading..&lt;/p&gt;
      &lt;p&gt;Big kudos goes to &lt;a href=&quot;https://github.com/thradec&quot;&gt;Tomas Hradec&lt;/a&gt; for his great contribution on the “JPA Cache Eviction” support. You can now control your second level cache directly from the Arquillian tests. I would also like to thank Adrian Gonzalez, Alex Holmansky, Anton Shaykin and Christoph Rohr for their feedback which led us to fix some minor annoyances and shortcomings of APE. We are proud of the vibrant and active community around Arquillian!&lt;/p&gt;
      &lt;h3 class=&quot;highlights&quot;&gt;Some of the highlights in this release&lt;/h3&gt;
      &lt;p&gt;&lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; Instead of relying on the JPA provider you can now use your custom scripts to create the schema and populate data for each test. The only thing you have to do is decorate your test class with the following annotation:&lt;/p&gt;
      &lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;@CreateSchema({&quot;create-schema.sql&quot;, &quot;populate-data.sql&quot;})&lt;/code&gt;&lt;/pre&gt;
      &lt;p&gt;&lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; Thanks to Tomas Hradec we have taken control over the Second Level JPA cache eviction. This initial implementation gives you a possibility to evict the cache before or after your test. Just specify which persistence unit(s) should be used by APE:&lt;/p&gt;
      &lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;@JpaCacheEviction(entityManager = { &quot;java:comp/env/MyPersistenceUnit&quot; })&lt;/code&gt;&lt;/pre&gt;
      &lt;p&gt;&lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; One of the shortcomings of the previous versions was the fact that you were always forced to provide the data source name explicitly. Either through &lt;code&gt;arquillian.xml&lt;/code&gt; or by using the &lt;code&gt;@DataSource&lt;/code&gt; annotation. With Alpha 5 you won’t have to. If you only use one data source in the test case, it will be inferred automatically from the &lt;code&gt;persistence.xml&lt;/code&gt; used by your test.&lt;/p&gt;
      &lt;p&gt;&lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; You can also tell DBUnit which schema needs to be used for seeding the database. Just add the &lt;code&gt;schema&lt;/code&gt; property to your &lt;code&gt;arquillian.xml&lt;/code&gt; configuration as illustrated in the snippet below:&lt;/p&gt;
      &lt;div class=&quot;filename&quot;&gt;arquillian.xml&lt;/div&gt;
      &lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;&amp;lt;extension qualifier=&quot;persistence-dbunit&quot;&amp;gt;
          &amp;lt;property name=&quot;schema&quot;&amp;gt;ape&amp;lt;/property&amp;gt;
      &amp;lt;/extension&amp;gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;p&gt;We’ve also extended our test suite by adding the following databases to our continuous integration pipeline&lt;/p&gt;
      &lt;ul&gt;
      &lt;li&gt;MySQL 5.5.24&lt;/li&gt;
      	&lt;li&gt;PostgreSQL 9.1.4&lt;/li&gt;
      &lt;/ul&gt;&lt;p class=&quot;important&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;em&gt;Important change&lt;/em&gt;&lt;/strong&gt;: We renamed two properties used in &lt;code&gt;arquillian.xml&lt;/code&gt; giving them more appropriate names:&lt;br&gt;&lt;em&gt;initStatement&lt;/em&gt; became &lt;em&gt;scriptsToExecuteBeforeTest&lt;/em&gt;&lt;br&gt;&lt;em&gt;cleanupStatement&lt;/em&gt; became &lt;em&gt;scriptsToExecuteAfterTest&lt;/em&gt;&lt;br&gt;
      Moreover you can now specify list of scripts (or files) seperated by comma.&lt;/span&gt;&lt;/p&gt;
      &lt;p&gt;We look forward to hearing your feedback about this release in the &lt;a href=&quot;http://community.jboss.org/en/arquillian&quot;&gt;community forums&lt;/a&gt;!&lt;/p&gt;
      &lt;h3&gt;What is Arquillian?&lt;/h3&gt;
      &lt;p&gt;Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop a comprehensive suite of tests from the convenience of your IDE and run them in any IDE, build tool or continuous integration environment.&lt;/p&gt;
      &lt;h3&gt;Release details&lt;/h3&gt;
      &lt;table class=&quot;table table-bordered table-striped&quot;&gt;&lt;tbody&gt;
      &lt;tr&gt;
      &lt;th&gt;Component&lt;/th&gt;
            &lt;td&gt;
              &lt;a href=&quot;http://arquillian.org/modules/persistence-extension/&quot;&gt;Arquillian Persistence Extension&lt;/a&gt;
            &lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Version&lt;/th&gt;
            &lt;td&gt;
              1.0.0.Alpha5
              &lt;span class=&quot;label tag&quot;&gt;
                &lt;a href=&quot;https://api.github.com/repos/arquillian/arquillian-extension-persistence/commits/9755a39ab2a900a1a9bbb2e668d9b3d41c0ae794&quot;&gt;view tag&lt;/a&gt;
              &lt;/span&gt;
            &lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Release date&lt;/th&gt;
            &lt;td&gt;2012-08-31&lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Released by&lt;/th&gt;
            &lt;td&gt;Aslak Knutsen&lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Compiled against&lt;/th&gt;
            &lt;td&gt;
              &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;Arquillian Core – 1.0.2.Final&lt;/li&gt;
              &lt;/ul&gt;
      &lt;/td&gt;
          &lt;/tr&gt;
      &lt;/tbody&gt;&lt;/table&gt;&lt;h3&gt;
        Published artifacts
        &lt;small&gt;org.jboss.arquillian.extension&lt;/small&gt;
      &lt;/h3&gt;
      &lt;ul&gt;
      &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-persistence-api
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-persistence-api/1.0.0.Alpha5/arquillian-persistence-api-1.0.0.Alpha5.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-persistence-api/1.0.0.Alpha5/arquillian-persistence-api-1.0.0.Alpha5.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-persistence-impl
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-persistence-impl/1.0.0.Alpha5/arquillian-persistence-impl-1.0.0.Alpha5.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-persistence-impl/1.0.0.Alpha5/arquillian-persistence-impl-1.0.0.Alpha5.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-persistence-integration-tests-testng
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-persistence-integration-tests-testng/1.0.0.Alpha5/arquillian-persistence-integration-tests-testng-1.0.0.Alpha5.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-persistence-integration-tests-testng/1.0.0.Alpha5/arquillian-persistence-integration-tests-testng-1.0.0.Alpha5.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
      &lt;/ul&gt;&lt;h3&gt;
        Release notes and resolved issues
        &lt;small&gt;22&lt;/small&gt;
      &lt;/h3&gt;
      &lt;p&gt;&lt;/p&gt;
      &lt;dl&gt;
      &lt;dt&gt;Bug&lt;/dt&gt;
        &lt;dd&gt;
          &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-872&quot;&gt;ARQ-872&lt;/a&gt; -         Integration tests are failing with Glassfish 3.1.2 embedded&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-901&quot;&gt;ARQ-901&lt;/a&gt; -         NPE when using @Cleanup(strategy=CleanupStrategy.USED_ROWS_ONLY)&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1083&quot;&gt;ARQ-1083&lt;/a&gt; -         Closing connection might cause memory leak&lt;/li&gt;
          &lt;/ul&gt;
      &lt;/dd&gt;
      &lt;/dl&gt;&lt;dl&gt;
      &lt;dt&gt;Enhancement&lt;/dt&gt;
        &lt;dd&gt;
          &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-763&quot;&gt;ARQ-763&lt;/a&gt; -         Introduce TestNG tests&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-873&quot;&gt;ARQ-873&lt;/a&gt; -         Provide flexible maven configuration for handling combination of different containers and databases&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-877&quot;&gt;ARQ-877&lt;/a&gt; -         Improve DBUnit cleanup handling&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-882&quot;&gt;ARQ-882&lt;/a&gt; -         Should be possible to specify data insert strategy per @Test&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-885&quot;&gt;ARQ-885&lt;/a&gt; -         Improve init/cleanupStatement handling&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1017&quot;&gt;ARQ-1017&lt;/a&gt; -         Update APE to Core 1.0.1.Final&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1084&quot;&gt;ARQ-1084&lt;/a&gt; -         Fix failing tests in JDK7&lt;/li&gt;
          &lt;/ul&gt;
      &lt;/dd&gt;
      &lt;/dl&gt;&lt;dl&gt;
      &lt;dt&gt;Feature Request&lt;/dt&gt;
        &lt;dd&gt;
          &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-884&quot;&gt;ARQ-884&lt;/a&gt; -         Should be possible to globally define columns to be excluded when comparing data sets.&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-899&quot;&gt;ARQ-899&lt;/a&gt; -         Should be able to read data source name from persistence.xml attached to test archive&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-900&quot;&gt;ARQ-900&lt;/a&gt; -         Should be able to prepare database using custom scripts&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1029&quot;&gt;ARQ-1029&lt;/a&gt; -         Arquillian Persistence Extension: Use specific Schema&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1058&quot;&gt;ARQ-1058&lt;/a&gt; -         Implement JPA Cache eviction control&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1065&quot;&gt;ARQ-1065&lt;/a&gt; -         Improve SQL script handling&lt;/li&gt;
          &lt;/ul&gt;
      &lt;/dd&gt;
      &lt;/dl&gt;&lt;dl&gt;
      &lt;dt&gt;Sub-task&lt;/dt&gt;
        &lt;dd&gt;
          &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-878&quot;&gt;ARQ-878&lt;/a&gt; -         Make default cleanup phase globally configurable&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-879&quot;&gt;ARQ-879&lt;/a&gt; -         Change default cleanup strategy back to AFTER test execution&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-881&quot;&gt;ARQ-881&lt;/a&gt; -         Should be possible to exclude arbitrary tables from cleanup procedure&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-886&quot;&gt;ARQ-886&lt;/a&gt; -         Rename properties to more meaningful ones&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-887&quot;&gt;ARQ-887&lt;/a&gt; -         Allow to use to more than one SQL script file&lt;/li&gt;
          &lt;/ul&gt;
      &lt;/dd&gt;
      &lt;/dl&gt;&lt;p&gt;
        Thanks to the following list of contributors:
        &lt;a href=&quot;https://community.jboss.org/people/bmajsak&quot;&gt;Bartosz Majsak&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/aslak&quot;&gt;Aslak Knutsen&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/thradec&quot;&gt;Tomas Hradec&lt;/a&gt;
      &lt;/p&gt;
    </content>
  </entry>
  <entry>
    <id>http://arquillian.org/blog/2012/08/17/arquillian-extension-spring-1-0-0-Beta1/</id>
    <title>Arquillian Spring Framework Extension 1.0.0.Beta1 Released</title>
    <updated>2012-08-18T00:00:00+00:00</updated>
    <link href="http://arquillian.org/blog/2012/08/17/arquillian-extension-spring-1-0-0-Beta1/" rel="alternate" type="text/html" />
    <category scheme="http://arquillian.org/blog/tags" term="gsoc" />
    <category scheme="http://arquillian.org/blog/tags" term="gsoc" />
    <category scheme="http://arquillian.org/blog/tags" term="release" />
    <category scheme="http://arquillian.org/blog/tags" term="extension" />
    <category scheme="http://arquillian.org/blog/tags" term="spring" />
    <category scheme="http://arquillian.org/blog" term="arquillian" />
    <summary>
      The Arquillian team is proud to announce the 1.0.0.Beta1 release of the Arquillian Spring Framework Extension component!
      The first Beta release of the Arquillian Spring extension is here.
      Some of the highlights in this release
       Client side application context registration
       Spring transaction support
      Client side tests with Spring
      So far the Spring extension has only allowed application context creation and bean injection to occure when the tests were deployed in a container. We wanted to bring the same functionality to the client side. With the two new annotations @SpringClientConfiguration and @SpringClientAnnotationConfiguration it is now possible to set up the application context and inject beans......
    </summary>
    <content type="html">
      &lt;p&gt;The Arquillian team is proud to announce the &lt;em&gt;1.0.0.Beta1&lt;/em&gt; release of the &lt;em&gt;Arquillian Spring Framework Extension&lt;/em&gt; component!&lt;/p&gt;
      &lt;p&gt;The first Beta release of the Arquillian Spring extension is here.&lt;/p&gt;
      &lt;h3 class=&quot;highlights&quot;&gt;Some of the highlights in this release&lt;/h3&gt;
      &lt;p&gt;&lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; Client side application context registration&lt;br&gt;&lt;i class=&quot;icon-star&quot;&gt;&lt;/i&gt; Spring transaction support&lt;/p&gt;
      &lt;h3&gt;Client side tests with Spring&lt;/h3&gt;
      &lt;p&gt;So far the Spring extension has only allowed application context creation and bean injection to occure when the tests were deployed in a container. We wanted to bring the same functionality to the client side. With the two new annotations &lt;code&gt;@SpringClientConfiguration&lt;/code&gt; and &lt;code&gt;@SpringClientAnnotationConfiguration&lt;/code&gt; it is now possible to set up the application context and inject beans into Arquillian tests that are running on the client.&lt;/p&gt;
      &lt;p&gt;An example of use would be to test a deployed REST service using the Spring RestTemplate configured in the client context.&lt;/p&gt;
      &lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;@RunWith(Arquillian.class)
      @SpringClientConfiguration(&quot;applicationContext-rest.xml&quot;)
      public class ClientRestServiceTestCase {&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;    @Deployment(testable = false)
          @OverProtocol(&quot;Servlet 3.0&quot;)
          public static Archive createTestArchive() {
              return Deployments.createWebApplication()
                      .addAsWebInfResource(&quot;mvc/web.xml&quot;, &quot;web.xml&quot;)
                      .addAsWebInfResource(&quot;service-servlet.xml&quot;);
          }&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;    @ArquillianResource
          private URL contextPath;&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;    @Autowired
          private RestTemplate restTemplate;&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;    @Test
          public void testGetEmployees() {&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;        Employee result = restTemplate.getForObject(contextPath + &quot;/Employees/1&quot;, Employee.class);&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;        assertEquals(&quot;The returned employee has invalid name.&quot;, &quot;John Smith&quot;, result.getName());
          }
      }&lt;/code&gt;&lt;/pre&gt;
      &lt;h3&gt;Spring transaction support&lt;/h3&gt;
      &lt;p&gt;The recent release of the &lt;a href=&quot;http://arquillian.org/modules/transaction-extension/&quot;&gt;Arquillian Transaction Extension&lt;/a&gt; allow us to control the transactional behavior of our test methods. With the help of the Spring Extension you can now control your Spring configured transaction manager using the same API. The set up is done in the normal Spring way by defining a transaction manager in the application context.&lt;/p&gt;
      &lt;div class=&quot;filename&quot;&gt;applicationContext.xml&lt;/div&gt;
      &lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;
      &amp;lt;beans xmlns=&quot;http://www.springframework.org/schema/beans&quot;
            xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;
            xmlns:context=&quot;http://www.springframework.org/schema/context&quot;
            xmlns:tx=&quot;http://www.springframework.org/schema/tx&quot;
            xsi:schemaLocation=&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd&quot;&amp;gt;&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;   &amp;lt;!-- Creates local entity manager factory --&amp;gt;
         &amp;lt;bean id=&quot;entityManagerFactory&quot; class=&quot;org.springframework.orm.jpa.LocalEntityManagerFactoryBean&quot;&amp;gt;
             &amp;lt;property name=&quot;persistenceUnitName&quot; value=&quot;ArquillianTestUnit&quot;/&amp;gt;
         &amp;lt;/bean&amp;gt;&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;   &amp;lt;!-- Enables the declarative transaction support --&amp;gt;
         &amp;lt;tx:annotation-driven transaction-manager=&quot;txManager&quot;/&amp;gt;&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;   &amp;lt;!-- Creates transaction manager --&amp;gt;
         &amp;lt;bean id=&quot;txManager&quot; class=&quot;org.springframework.orm.jpa.JpaTransactionManager&quot;&amp;gt;
             &amp;lt;property name=&quot;entityManagerFactory&quot; ref=&quot;entityManagerFactory&quot;/&amp;gt;
         &amp;lt;/bean&amp;gt;&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;&amp;lt;/beans&amp;gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;p&gt;You define which transaction manager to use in your test class via the &lt;code&gt;manager&lt;/code&gt; attribute on the &lt;code&gt;@Transactional&lt;/code&gt; annotation.&lt;/p&gt;
      &lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;@RunWith(Arquillian.class)
      @Transactional(manager = &quot;txManager&quot;)
      @SpringConfiguration(&quot;applicationContext.xml&quot;)
      public class JpaEmployeeRepositoryTestCase {&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;    @Autowired
          private EmployeeRepository employeeRepository;&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;    @PersistenceContext
          private EntityManager entityManager;&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;    @Test
          public void testSave() {&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;        Employee employee = new Employee();
              employee.setName(&quot;Test employee&quot;);&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;        employeeRepository.save(employee);&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;        List&amp;lt;Employee&amp;gt; result = entityManager.createQuery(&quot;from Employee&quot;).getResultList();&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;        assertEquals(&quot;Two employees were expected.&quot;, 1, result.size());
          }
      }&lt;/code&gt;&lt;/pre&gt;
      &lt;h3&gt;Migrating from 1.0.0.Alpha2&lt;/h3&gt;
      &lt;ul&gt;
      &lt;li&gt;Artifact &lt;code&gt;arquillian-container-spring&lt;/code&gt; has been renamed to &lt;code&gt;arquillian-service-container-spring&lt;/code&gt;
      &lt;/li&gt;
      &lt;/ul&gt;&lt;p&gt;We look forward to your feedback on this new release on the &lt;a href=&quot;http://community.jboss.org/en/arquillian&quot;&gt;community forums&lt;/a&gt;!&lt;/p&gt;
      &lt;h3&gt;What is Arquillian?&lt;/h3&gt;
      &lt;p&gt;Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop a comprehensive suite of tests from the convenience of your IDE and run them in any IDE, build tool or continuous integration environment.&lt;/p&gt;
      &lt;h3&gt;Release details&lt;/h3&gt;
      &lt;table class=&quot;table table-bordered table-striped&quot;&gt;&lt;tbody&gt;
      &lt;tr&gt;
      &lt;th&gt;Component&lt;/th&gt;
            &lt;td&gt;
              &lt;a href=&quot;http://arquillian.org/modules/spring-extension/&quot;&gt;Arquillian Spring Framework Extension&lt;/a&gt;
            &lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Version&lt;/th&gt;
            &lt;td&gt;
              1.0.0.Beta1
              &lt;span class=&quot;label tag&quot;&gt;
                &lt;a href=&quot;https://api.github.com/repos/arquillian/arquillian-extension-spring/commits/24516832e4a84f1032ecdbe6e0ee42e5b1f7f25e&quot;&gt;view tag&lt;/a&gt;
              &lt;/span&gt;
            &lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Release date&lt;/th&gt;
            &lt;td&gt;2012-08-17&lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Released by&lt;/th&gt;
            &lt;td&gt;Aslak Knutsen&lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Compiled against&lt;/th&gt;
            &lt;td&gt;
              &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;Arquillian Core – 1.0.1.Final&lt;/li&gt;
                &lt;li&gt;JUnit – 4.8.1&lt;/li&gt;
              &lt;/ul&gt;
      &lt;/td&gt;
          &lt;/tr&gt;
      &lt;/tbody&gt;&lt;/table&gt;&lt;h3&gt;
        Published artifacts
        &lt;small&gt;org.jboss.arquillian.extension&lt;/small&gt;
      &lt;/h3&gt;
      &lt;ul&gt;
      &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-service-container-spring
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-service-container-spring/1.0.0.Beta1/arquillian-service-container-spring-1.0.0.Beta1.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-service-container-spring/1.0.0.Beta1/arquillian-service-container-spring-1.0.0.Beta1.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-service-deployer-spring-2.5
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-service-deployer-spring-2.5/1.0.0.Beta1/arquillian-service-deployer-spring-2.5-1.0.0.Beta1.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-service-deployer-spring-2.5/1.0.0.Beta1/arquillian-service-deployer-spring-2.5-1.0.0.Beta1.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-service-deployer-spring-3
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-service-deployer-spring-3/1.0.0.Beta1/arquillian-service-deployer-spring-3-1.0.0.Beta1.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-service-deployer-spring-3/1.0.0.Beta1/arquillian-service-deployer-spring-3-1.0.0.Beta1.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-service-deployer-spring-common
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-service-deployer-spring-common/1.0.0.Beta1/arquillian-service-deployer-spring-common-1.0.0.Beta1.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-service-deployer-spring-common/1.0.0.Beta1/arquillian-service-deployer-spring-common-1.0.0.Beta1.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-service-integration-spring
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-service-integration-spring/1.0.0.Beta1/arquillian-service-integration-spring-1.0.0.Beta1.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-service-integration-spring/1.0.0.Beta1/arquillian-service-integration-spring-1.0.0.Beta1.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-service-integration-spring-inject
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-service-integration-spring-inject/1.0.0.Beta1/arquillian-service-integration-spring-inject-1.0.0.Beta1.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-service-integration-spring-inject/1.0.0.Beta1/arquillian-service-integration-spring-inject-1.0.0.Beta1.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-service-integration-spring-javaconfig
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-service-integration-spring-javaconfig/1.0.0.Beta1/arquillian-service-integration-spring-javaconfig-1.0.0.Beta1.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-service-integration-spring-javaconfig/1.0.0.Beta1/arquillian-service-integration-spring-javaconfig-1.0.0.Beta1.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-transaction-spring
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-transaction-spring/1.0.0.Beta1/arquillian-transaction-spring-1.0.0.Beta1.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-transaction-spring/1.0.0.Beta1/arquillian-transaction-spring-1.0.0.Beta1.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-warp-spring
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-warp-spring/1.0.0.Beta1/arquillian-warp-spring-1.0.0.Beta1.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-warp-spring/1.0.0.Beta1/arquillian-warp-spring-1.0.0.Beta1.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-warp-spring-ftest
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-warp-spring-ftest/1.0.0.Beta1/arquillian-warp-spring-ftest-1.0.0.Beta1.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-warp-spring-ftest/1.0.0.Beta1/arquillian-warp-spring-ftest-1.0.0.Beta1.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
      &lt;/ul&gt;&lt;h3&gt;
        Release notes and resolved issues
        &lt;small&gt;3&lt;/small&gt;
      &lt;/h3&gt;
      &lt;p&gt;Arquillian Transaction Extension support and Client side ApplicationContext creation&lt;/p&gt;
      &lt;dl&gt;
      &lt;dt&gt;Feature Request&lt;/dt&gt;
        &lt;dd&gt;
          &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-958&quot;&gt;ARQ-958&lt;/a&gt; -         Provide support for Spring transactions&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-985&quot;&gt;ARQ-985&lt;/a&gt; -         Register the Spring Extension on client side.&lt;/li&gt;
          &lt;/ul&gt;
      &lt;/dd&gt;
      &lt;/dl&gt;&lt;p&gt;
        Thanks to the following list of contributors:
        &lt;a href=&quot;https://community.jboss.org/people/jmnarloch&quot;&gt;Jakub Narloch&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/aslak&quot;&gt;Aslak Knutsen&lt;/a&gt;
      &lt;/p&gt;
    </content>
  </entry>
  <entry>
    <id>http://arquillian.org/blog/2012/08/13/arquillian-extension-transaction-1-0-0-Alpha1/</id>
    <title>Arquillian Transaction Extension 1.0.0.Alpha1 Released</title>
    <updated>2012-08-14T00:00:00+00:00</updated>
    <link href="http://arquillian.org/blog/2012/08/13/arquillian-extension-transaction-1-0-0-Alpha1/" rel="alternate" type="text/html" />
    <category scheme="http://arquillian.org/blog/tags" term="release" />
    <category scheme="http://arquillian.org/blog/tags" term="extension" />
    <category scheme="http://arquillian.org/blog/tags" term="transaction" />
    <category scheme="http://arquillian.org/blog" term="arquillian" />
    <summary>
      The Arquillian team is proud to announce the 1.0.0.Alpha1 release of the Arquillian Transaction Extension component!
      Motivation
      Until this point, the only special transaction support in Arquillian has come from the Arquillian Persistence Extension. But as the extension universe expand, the need for other extensions to interact with transactions expand as well. To avoid you having to deal with the individual extensions transaction support in different ways, different apis, we concluded it was time to make Transactions it&#8217;s own top level extension.
      Usage
      The current API takes a declarative approach to configure the transactional behavior of the Test case. By annotating the TestClass or......
    </summary>
    <content type="html">
      &lt;p&gt;The Arquillian team is proud to announce the &lt;em&gt;1.0.0.Alpha1&lt;/em&gt; release of the &lt;em&gt;Arquillian Transaction Extension&lt;/em&gt; component!&lt;/p&gt;
      &lt;h3&gt;Motivation&lt;/h3&gt;
      &lt;p&gt;Until this point, the only special transaction support in Arquillian has come from the &lt;a href=&quot;http://arquillian.org/modules/persistence-extension&quot;&gt;Arquillian Persistence Extension&lt;/a&gt;. But as the extension universe expand, the need for other extensions to interact with transactions expand as well. To avoid you having to deal with the individual extensions transaction support in different ways, different apis, we concluded it was time to make Transactions it’s own top level extension.&lt;/p&gt;
      &lt;h3&gt;Usage&lt;/h3&gt;
      &lt;p&gt;The current API takes a declarative approach to configure the transactional behavior of the Test case. By annotating the TestClass or the TestMethod with &lt;code&gt;@Transactional&lt;/code&gt; you control how the transaction should be handled after TestMethod execution.&lt;br&gt;
      Should Arquillian &lt;code&gt;COMMIT&lt;/code&gt;, &lt;code&gt;ROLLBACK&lt;/code&gt; or &lt;code&gt;DISABLE&lt;/code&gt; the transaction for this method?&lt;/p&gt;
      &lt;p&gt;Example:&lt;/p&gt;
      &lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;@RunWith(Arquillian.class)
      @Transactional
      public class GreeterTestClass {&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;    public void defaultTest() throws Exception {
              // test code
          }&lt;/code&gt;
      
      &lt;code class=&quot;prettify&quot;&gt;    @Transactional(TransactionMode.ROLLBACK)
          public void rollbackTest() throws Exception {
              // test code
          }
      }&lt;/code&gt;&lt;/pre&gt;
      &lt;h3&gt;SPI integration&lt;/h3&gt;
      &lt;p&gt;The extension itself does not come with any implementation for a concrete transaction API, the implementations will be provided by separate modules. During execution, the transactional handling is delegated to a &lt;code&gt;TransactionProvider&lt;/code&gt; service implementation which is registered within Arquillian. The SPI defines a set of transaction lifecycle events (&lt;code&gt;(Before|After)Transaction(Started|Ended)&lt;/code&gt;) and a separate transactional scope (&lt;code&gt;@TransactionScope&lt;/code&gt;) which is bound to the executing transaction.&lt;/p&gt;
      &lt;h3&gt;Implementations&lt;/h3&gt;
      &lt;p&gt;Besides the JTA implementation provided by the &lt;a href=&quot;http://arquillian.org/modules/persistence-extension&quot;&gt;Arquillian Persistence Extension&lt;/a&gt;, the next extensions which will provide support is the Spring Extension. More details to come.&lt;/p&gt;
      &lt;h3&gt;What is Arquillian?&lt;/h3&gt;
      &lt;p&gt;Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop a comprehensive suite of tests from the convenience of your IDE and run them in any IDE, build tool or continuous integration environment.&lt;/p&gt;
      &lt;h3&gt;Release details&lt;/h3&gt;
      &lt;table class=&quot;table table-bordered table-striped&quot;&gt;&lt;tbody&gt;
      &lt;tr&gt;
      &lt;th&gt;Component&lt;/th&gt;
            &lt;td&gt;
              &lt;a href=&quot;http://arquillian.org/modules/transaction-extension/&quot;&gt;Arquillian Transaction Extension&lt;/a&gt;
            &lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Version&lt;/th&gt;
            &lt;td&gt;
              1.0.0.Alpha1
              &lt;span class=&quot;label tag&quot;&gt;
                &lt;a href=&quot;https://api.github.com/repos/arquillian/arquillian-extension-transaction/commits/fbca9f5eb141b9172c4356d934bd4908fd3cc819&quot;&gt;view tag&lt;/a&gt;
              &lt;/span&gt;
            &lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Release date&lt;/th&gt;
            &lt;td&gt;2012-08-13&lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Released by&lt;/th&gt;
            &lt;td&gt;Aslak Knutsen&lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Compiled against&lt;/th&gt;
            &lt;td&gt;
              &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;Arquillian Core – 1.0.0.Final&lt;/li&gt;
                &lt;li&gt;ShrinkWrap Resolvers – 2.0.0-alpha-1&lt;/li&gt;
              &lt;/ul&gt;
      &lt;/td&gt;
          &lt;/tr&gt;
      &lt;/tbody&gt;&lt;/table&gt;&lt;h3&gt;
        Published artifacts
        &lt;small&gt;org.jboss.arquillian.extension&lt;/small&gt;
      &lt;/h3&gt;
      &lt;ul&gt;
      &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-transaction-api
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-transaction-api/1.0.0.Alpha1/arquillian-transaction-api-1.0.0.Alpha1.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-transaction-api/1.0.0.Alpha1/arquillian-transaction-api-1.0.0.Alpha1.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-transaction-bom
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-transaction-bom/1.0.0.Alpha1/arquillian-transaction-bom-1.0.0.Alpha1.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-transaction-impl-base
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-transaction-impl-base/1.0.0.Alpha1/arquillian-transaction-impl-base-1.0.0.Alpha1.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-transaction-impl-base/1.0.0.Alpha1/arquillian-transaction-impl-base-1.0.0.Alpha1.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.extension
          »
          arquillian-transaction-spi
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-transaction-spi/1.0.0.Alpha1/arquillian-transaction-spi-1.0.0.Alpha1.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/extension/arquillian-transaction-spi/1.0.0.Alpha1/arquillian-transaction-spi-1.0.0.Alpha1.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
      &lt;/ul&gt;&lt;h3&gt;
        Release notes and resolved issues
        &lt;small&gt;2&lt;/small&gt;
      &lt;/h3&gt;
      &lt;p&gt;The basic setup for rollback/commit on a TestClass with multiple Manager implementation&lt;/p&gt;
      &lt;dl&gt;
      &lt;dt&gt;Feature Request&lt;/dt&gt;
        &lt;dd&gt;
          &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1033&quot;&gt;ARQ-1033&lt;/a&gt; -         Extract the transaction support out of Arquillian Persistence Extension&lt;/li&gt;
          &lt;/ul&gt;
      &lt;/dd&gt;
      &lt;/dl&gt;&lt;p&gt;
        Thanks to the following list of contributors:
        &lt;a href=&quot;https://community.jboss.org/people/aslak&quot;&gt;Aslak Knutsen&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/jmnarloch&quot;&gt;Jakub Narloch&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/aslak&quot;&gt;Aslak Knutsen&lt;/a&gt;
      &lt;/p&gt;
    </content>
  </entry>
  <entry>
    <id>http://arquillian.org/blog/2012/07/25/arquillian-core-1-0-2-Final/</id>
    <title>Arquillian Core 1.0.2.Final Released</title>
    <updated>2012-07-26T00:00:00+00:00</updated>
    <link href="http://arquillian.org/blog/2012/07/25/arquillian-core-1-0-2-Final/" rel="alternate" type="text/html" />
    <category scheme="http://arquillian.org/blog/tags" term="release" />
    <category scheme="http://arquillian.org/blog/tags" term="platform" />
    <category scheme="http://arquillian.org/blog/tags" term="core" />
    <category scheme="http://arquillian.org/blog/tags" term="jbosscentral" />
    <category scheme="http://arquillian.org/blog" term="arquillian" />
    <summary>
      The Arquillian team is proud to announce the 1.0.2.Final release of the Arquillian Core component!
      Another little maintenance release in the Arquillian 1.0 series.
      The @Deployment can now be defined on private and protected methods. The same package and protected support is applicable to the SPI level for service and observer implementations.
      @Deployment&#x000A;static JavaArchive createDeployment() {&#x000A;   ...&#x000A;}
      Using environment variables in arquillian.xml is now possible via the property expression ENV.name
      &lt;container qualifier="example"&gt;&#x000A;   &lt;property name="jbossHome"&gt;${ENV.JBOSS_HOME}&lt;/property&gt;&#x000A;&lt;/container&gt;
      Ever run into this exception? &#8220;UnsupportedOperationException: Multiple WebArchives found in X.ear. Can not determine which to enrich.&#8221;
      The exception happens when the Servlet Protocol in Arquillian attempts to enrich......
    </summary>
    <content type="html">
      &lt;p&gt;The Arquillian team is proud to announce the &lt;em&gt;1.0.2.Final&lt;/em&gt; release of the &lt;em&gt;Arquillian Core&lt;/em&gt; component!&lt;/p&gt;
      &lt;p&gt;Another little maintenance release in the Arquillian 1.0 series.&lt;/p&gt;
      &lt;p&gt;The &lt;code&gt;@Deployment&lt;/code&gt; can now be defined on private and protected methods. The same package and protected support is applicable to the SPI level for service and observer implementations.&lt;/p&gt;
      &lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;@Deployment
      static JavaArchive createDeployment() {
         ...
      }&lt;/code&gt;&lt;/pre&gt;
      &lt;p&gt;Using environment variables in &lt;code&gt;arquillian.xml&lt;/code&gt; is now possible via the property expression &lt;code&gt;ENV.name&lt;/code&gt;&lt;/p&gt;
      &lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;&amp;lt;container qualifier=&quot;example&quot;&amp;gt;
         &amp;lt;property name=&quot;jbossHome&quot;&amp;gt;${ENV.JBOSS_HOME}&amp;lt;/property&amp;gt;
      &amp;lt;/container&amp;gt;&lt;/code&gt;&lt;/pre&gt;
      &lt;p&gt;Ever run into this exception? “UnsupportedOperationException: Multiple WebArchives found in X.ear. Can not determine which to enrich.”&lt;br&gt;
      The exception happens when the &lt;code&gt;Servlet Protocol&lt;/code&gt; in Arquillian attempts to enrich an &lt;code&gt;EnterpriseArchive&lt;/code&gt; for &lt;code&gt;in-container&lt;/code&gt; testing, but multiple &lt;code&gt;WebArchives&lt;/code&gt; were found in the Deployment, and it can’t determine which you want to test. With the help of &lt;a href=&quot;profile://robertpanzer&quot;&gt;Robert Panzer&lt;/a&gt; this is now supported. You can give a &lt;code&gt;Protocol&lt;/code&gt; a hint to which &lt;code&gt;Archive&lt;/code&gt; is under test by using the new &lt;code&gt;Testable.archiveToTest(Archive)&lt;/code&gt; method.&lt;/p&gt;
      &lt;pre class=&quot;prettify&quot;&gt;&lt;code class=&quot;prettify&quot;&gt;@Deployment
      static EnterpriseArchive create() {
         return ShrinkWrap.create(EnterpriseArchive.class)
            .addAsModule(...some..war..)
            .addAsModule(
               Testable.archiveToTest(
                  ShrinkWrap.create(WebArchive.class)
                     .addXYZ(...)
               )
            );
      }&lt;/code&gt;&lt;/pre&gt;
      &lt;h3&gt;What is Arquillian?&lt;/h3&gt;
      &lt;p&gt;Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop a comprehensive suite of tests from the convenience of your IDE and run them in any IDE, build tool or continuous integration environment.&lt;/p&gt;
      &lt;h3&gt;Release details&lt;/h3&gt;
      &lt;table class=&quot;table table-bordered table-striped&quot;&gt;&lt;tbody&gt;
      &lt;tr&gt;
      &lt;th&gt;Component&lt;/th&gt;
            &lt;td&gt;
              &lt;a href=&quot;http://arquillian.org/modules/core-platform/&quot;&gt;Arquillian Core&lt;/a&gt;
            &lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Version&lt;/th&gt;
            &lt;td&gt;
              1.0.2.Final
              &lt;span class=&quot;label tag&quot;&gt;
                &lt;a href=&quot;https://api.github.com/repos/arquillian/arquillian-core/commits/92d943b36ffffb0883898c9896533dbcafa30d8e&quot;&gt;view tag&lt;/a&gt;
              &lt;/span&gt;
            &lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Release date&lt;/th&gt;
            &lt;td&gt;2012-07-23&lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Released by&lt;/th&gt;
            &lt;td&gt;Aslak Knutsen&lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Compiled against&lt;/th&gt;
            &lt;td&gt;
              &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;ShrinkWrap Core – 1.0.1&lt;/li&gt;
                &lt;li&gt;ShrinkWrap Descriptors – 2.0.0-alpha-3&lt;/li&gt;
                &lt;li&gt;JUnit – 4.8.1&lt;/li&gt;
                &lt;li&gt;TestNG – 5.14.6&lt;/li&gt;
              &lt;/ul&gt;
      &lt;/td&gt;
          &lt;/tr&gt;
      &lt;/tbody&gt;&lt;/table&gt;&lt;h3&gt;
        Published artifacts
        &lt;small&gt;org.jboss.arquillian&lt;/small&gt;
      &lt;/h3&gt;
      &lt;ul&gt;
      &lt;li&gt;
          org.jboss.arquillian
          »
          arquillian-bom
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/arquillian-bom/1.0.2.Final/arquillian-bom-1.0.2.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.config
          »
          arquillian-config-api
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/config/arquillian-config-api/1.0.2.Final/arquillian-config-api-1.0.2.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/config/arquillian-config-api/1.0.2.Final/arquillian-config-api-1.0.2.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.config
          »
          arquillian-config-impl-base
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/config/arquillian-config-impl-base/1.0.2.Final/arquillian-config-impl-base-1.0.2.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/config/arquillian-config-impl-base/1.0.2.Final/arquillian-config-impl-base-1.0.2.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.config
          »
          arquillian-config-spi
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/config/arquillian-config-spi/1.0.2.Final/arquillian-config-spi-1.0.2.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/config/arquillian-config-spi/1.0.2.Final/arquillian-config-spi-1.0.2.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.container
          »
          arquillian-container-impl-base
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-impl-base/1.0.2.Final/arquillian-container-impl-base-1.0.2.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-impl-base/1.0.2.Final/arquillian-container-impl-base-1.0.2.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.container
          »
          arquillian-container-spi
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-spi/1.0.2.Final/arquillian-container-spi-1.0.2.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-spi/1.0.2.Final/arquillian-container-spi-1.0.2.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.container
          »
          arquillian-container-test-api
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-test-api/1.0.2.Final/arquillian-container-test-api-1.0.2.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-test-api/1.0.2.Final/arquillian-container-test-api-1.0.2.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.container
          »
          arquillian-container-test-impl-base
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-test-impl-base/1.0.2.Final/arquillian-container-test-impl-base-1.0.2.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-test-impl-base/1.0.2.Final/arquillian-container-test-impl-base-1.0.2.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.container
          »
          arquillian-container-test-spi
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-test-spi/1.0.2.Final/arquillian-container-test-spi-1.0.2.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/container/arquillian-container-test-spi/1.0.2.Final/arquillian-container-test-spi-1.0.2.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.core
          »
          arquillian-core-api
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/core/arquillian-core-api/1.0.2.Final/arquillian-core-api-1.0.2.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/core/arquillian-core-api/1.0.2.Final/arquillian-core-api-1.0.2.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.core
          »
          arquillian-core-impl-base
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/core/arquillian-core-impl-base/1.0.2.Final/arquillian-core-impl-base-1.0.2.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/core/arquillian-core-impl-base/1.0.2.Final/arquillian-core-impl-base-1.0.2.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.core
          »
          arquillian-core-spi
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/core/arquillian-core-spi/1.0.2.Final/arquillian-core-spi-1.0.2.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/core/arquillian-core-spi/1.0.2.Final/arquillian-core-spi-1.0.2.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.junit
          »
          arquillian-junit-container
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/junit/arquillian-junit-container/1.0.2.Final/arquillian-junit-container-1.0.2.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/junit/arquillian-junit-container/1.0.2.Final/arquillian-junit-container-1.0.2.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.junit
          »
          arquillian-junit-core
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/junit/arquillian-junit-core/1.0.2.Final/arquillian-junit-core-1.0.2.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/junit/arquillian-junit-core/1.0.2.Final/arquillian-junit-core-1.0.2.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.junit
          »
          arquillian-junit-standalone
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/junit/arquillian-junit-standalone/1.0.2.Final/arquillian-junit-standalone-1.0.2.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/junit/arquillian-junit-standalone/1.0.2.Final/arquillian-junit-standalone-1.0.2.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.protocol
          »
          arquillian-protocol-jmx
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/protocol/arquillian-protocol-jmx/1.0.2.Final/arquillian-protocol-jmx-1.0.2.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/protocol/arquillian-protocol-jmx/1.0.2.Final/arquillian-protocol-jmx-1.0.2.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.protocol
          »
          arquillian-protocol-servlet
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/protocol/arquillian-protocol-servlet/1.0.2.Final/arquillian-protocol-servlet-1.0.2.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/protocol/arquillian-protocol-servlet/1.0.2.Final/arquillian-protocol-servlet-1.0.2.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.test
          »
          arquillian-test-api
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/test/arquillian-test-api/1.0.2.Final/arquillian-test-api-1.0.2.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/test/arquillian-test-api/1.0.2.Final/arquillian-test-api-1.0.2.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.test
          »
          arquillian-test-impl-base
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/test/arquillian-test-impl-base/1.0.2.Final/arquillian-test-impl-base-1.0.2.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/test/arquillian-test-impl-base/1.0.2.Final/arquillian-test-impl-base-1.0.2.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.test
          »
          arquillian-test-spi
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/test/arquillian-test-spi/1.0.2.Final/arquillian-test-spi-1.0.2.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/test/arquillian-test-spi/1.0.2.Final/arquillian-test-spi-1.0.2.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.testenricher
          »
          arquillian-testenricher-cdi
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testenricher/arquillian-testenricher-cdi/1.0.2.Final/arquillian-testenricher-cdi-1.0.2.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testenricher/arquillian-testenricher-cdi/1.0.2.Final/arquillian-testenricher-cdi-1.0.2.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.testenricher
          »
          arquillian-testenricher-ejb
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testenricher/arquillian-testenricher-ejb/1.0.2.Final/arquillian-testenricher-ejb-1.0.2.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testenricher/arquillian-testenricher-ejb/1.0.2.Final/arquillian-testenricher-ejb-1.0.2.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.testenricher
          »
          arquillian-testenricher-initialcontext
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testenricher/arquillian-testenricher-initialcontext/1.0.2.Final/arquillian-testenricher-initialcontext-1.0.2.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testenricher/arquillian-testenricher-initialcontext/1.0.2.Final/arquillian-testenricher-initialcontext-1.0.2.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.testenricher
          »
          arquillian-testenricher-resource
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testenricher/arquillian-testenricher-resource/1.0.2.Final/arquillian-testenricher-resource-1.0.2.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testenricher/arquillian-testenricher-resource/1.0.2.Final/arquillian-testenricher-resource-1.0.2.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.testng
          »
          arquillian-testng-container
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testng/arquillian-testng-container/1.0.2.Final/arquillian-testng-container-1.0.2.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testng/arquillian-testng-container/1.0.2.Final/arquillian-testng-container-1.0.2.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.testng
          »
          arquillian-testng-core
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testng/arquillian-testng-core/1.0.2.Final/arquillian-testng-core-1.0.2.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testng/arquillian-testng-core/1.0.2.Final/arquillian-testng-core-1.0.2.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.testng
          »
          arquillian-testng-standalone
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testng/arquillian-testng-standalone/1.0.2.Final/arquillian-testng-standalone-1.0.2.Final.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/testng/arquillian-testng-standalone/1.0.2.Final/arquillian-testng-standalone-1.0.2.Final.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
      &lt;/ul&gt;&lt;h3&gt;
        Release notes and resolved issues
        &lt;small&gt;9&lt;/small&gt;
      &lt;/h3&gt;
      &lt;p&gt;Maintenance release + Multi war support&lt;/p&gt;
      &lt;dl&gt;
      &lt;dt&gt;Bug&lt;/dt&gt;
        &lt;dd&gt;
          &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-376&quot;&gt;ARQ-376&lt;/a&gt; -         Environment configuration is overridden by arquillian.xml&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-620&quot;&gt;ARQ-620&lt;/a&gt; -         arquillian-core-impl-base needs a non-optional dependency on jboss-logmanager&lt;/li&gt;
          &lt;/ul&gt;
      &lt;/dd&gt;
      &lt;/dl&gt;&lt;dl&gt;
      &lt;dt&gt;Enhancement&lt;/dt&gt;
        &lt;dd&gt;
          &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-920&quot;&gt;ARQ-920&lt;/a&gt; -         Support @Deployment on non-public member (method or field)&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-921&quot;&gt;ARQ-921&lt;/a&gt; -         Make environment variables available for property replacement in configuration&lt;/li&gt;
          &lt;/ul&gt;
      &lt;/dd&gt;
      &lt;/dl&gt;&lt;dl&gt;
      &lt;dt&gt;Feature Request&lt;/dt&gt;
        &lt;dd&gt;
          &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-990&quot;&gt;ARQ-990&lt;/a&gt; -         Update dependencies to simplify downstream Fedora Packaging&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1024&quot;&gt;ARQ-1024&lt;/a&gt; -         Support package private implementation&lt;/li&gt;
            &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1035&quot;&gt;ARQ-1035&lt;/a&gt; -         Should support enriching a specific module in a multi module deployment&lt;/li&gt;
          &lt;/ul&gt;
      &lt;/dd&gt;
      &lt;/dl&gt;&lt;dl&gt;
      &lt;dt&gt;Task&lt;/dt&gt;
        &lt;dd&gt;
          &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-956&quot;&gt;ARQ-956&lt;/a&gt; -         Remove dependency on jboss-logging in JMX protocol&lt;/li&gt;
          &lt;/ul&gt;
      &lt;/dd&gt;
      &lt;/dl&gt;&lt;p&gt;
        Thanks to the following list of contributors:
        &lt;a href=&quot;https://community.jboss.org/people/aslak&quot;&gt;Aslak Knutsen&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/Robert.Panzer&quot;&gt;Robert.panzer&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/dan.j.allen&quot;&gt;Dan Allen&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/thomas.diesler&quot;&gt;Thomas Diesler&lt;/a&gt;
      &lt;/p&gt;
    </content>
  </entry>
  <entry>
    <id>http://arquillian.org/blog/2012/07/24/arquillian-testrunner-spock-1-0-0-Alpha2/</id>
    <title>Arquillian TestRunner Spock 1.0.0.Alpha2 Released</title>
    <updated>2012-07-25T00:00:00+00:00</updated>
    <link href="http://arquillian.org/blog/2012/07/24/arquillian-testrunner-spock-1-0-0-Alpha2/" rel="alternate" type="text/html" />
    <category scheme="http://arquillian.org/blog/tags" term="release" />
    <category scheme="http://arquillian.org/blog/tags" term="test-runner" />
    <category scheme="http://arquillian.org/blog/tags" term="spock" />
    <category scheme="http://arquillian.org/blog" term="arquillian" />
    <summary>
      The Arquillian team is proud to announce the 1.0.0.Alpha2 release of the Arquillian TestRunner Spock component!
      Some of the Highlights
      This minor release of the intergalactic cooperation between Spock and Arquillian comes with the following updates:
      
      	Update to the latest stable version of Spock &#8211; 0.6
      	Update Arquillian Core to 1.0.1.Final
      
      Smashing bugs has never been easier!
      What is Arquillian?
      Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can......
    </summary>
    <content type="html">
      &lt;p&gt;The Arquillian team is proud to announce the &lt;em&gt;1.0.0.Alpha2&lt;/em&gt; release of the &lt;em&gt;Arquillian TestRunner Spock&lt;/em&gt; component!&lt;/p&gt;
      &lt;h3&gt;Some of the Highlights&lt;/h3&gt;
      &lt;p&gt;This minor release of the intergalactic cooperation between &lt;a href=&quot;http://code.google.com/p/spock/&quot;&gt;Spock&lt;/a&gt; and Arquillian comes with the following updates:&lt;/p&gt;
      &lt;ul&gt;
      &lt;li&gt;Update to the latest stable version of Spock – 0.6&lt;/li&gt;
      	&lt;li&gt;Update Arquillian Core to 1.0.1.Final&lt;/li&gt;
      &lt;/ul&gt;&lt;p&gt;Smashing bugs has never been easier!&lt;/p&gt;
      &lt;h3&gt;What is Arquillian?&lt;/h3&gt;
      &lt;p&gt;Arquillian is open source software that empowers you to test JVM-based applications more effectively. Created to defend the software galaxy from bugs, Arquillian brings your test to the runtime so you can focus on testing your application's behavior rather than managing the runtime. Using Arquillian, you can develop a comprehensive suite of tests from the convenience of your IDE and run them in any IDE, build tool or continuous integration environment.&lt;/p&gt;
      &lt;h3&gt;Release details&lt;/h3&gt;
      &lt;table class=&quot;table table-bordered table-striped&quot;&gt;&lt;tbody&gt;
      &lt;tr&gt;
      &lt;th&gt;Component&lt;/th&gt;
            &lt;td&gt;
              &lt;a href=&quot;http://arquillian.org/modules/spock-test-runner/&quot;&gt;Arquillian TestRunner Spock&lt;/a&gt;
            &lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Version&lt;/th&gt;
            &lt;td&gt;
              1.0.0.Alpha2
              &lt;span class=&quot;label tag&quot;&gt;
                &lt;a href=&quot;https://api.github.com/repos/arquillian/arquillian-testrunner-spock/commits/18477fe1043b66e617afbf77d72bbd17bdf8ceda&quot;&gt;view tag&lt;/a&gt;
              &lt;/span&gt;
            &lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Release date&lt;/th&gt;
            &lt;td&gt;2012-07-23&lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Released by&lt;/th&gt;
            &lt;td&gt;Aslak Knutsen&lt;/td&gt;
          &lt;/tr&gt;
      &lt;tr&gt;
      &lt;th&gt;Compiled against&lt;/th&gt;
            &lt;td&gt;
              &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;Arquillian Core – 1.0.1.Final&lt;/li&gt;
              &lt;/ul&gt;
      &lt;/td&gt;
          &lt;/tr&gt;
      &lt;/tbody&gt;&lt;/table&gt;&lt;h3&gt;
        Published artifacts
        &lt;small&gt;org.jboss.arquillian.spock&lt;/small&gt;
      &lt;/h3&gt;
      &lt;ul&gt;
      &lt;li&gt;
          org.jboss.arquillian.spock
          »
          arquillian-spock-container
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/spock/arquillian-spock-container/1.0.0.Alpha2/arquillian-spock-container-1.0.0.Alpha2.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/spock/arquillian-spock-container/1.0.0.Alpha2/arquillian-spock-container-1.0.0.Alpha2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.spock
          »
          arquillian-spock-core
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/spock/arquillian-spock-core/1.0.0.Alpha2/arquillian-spock-core-1.0.0.Alpha2.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/spock/arquillian-spock-core/1.0.0.Alpha2/arquillian-spock-core-1.0.0.Alpha2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
        &lt;li&gt;
          org.jboss.arquillian.spock
          »
          arquillian-spock-standalone
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/spock/arquillian-spock-standalone/1.0.0.Alpha2/arquillian-spock-standalone-1.0.0.Alpha2.jar&quot; target=&quot;_blank&quot;&gt;jar&lt;/a&gt;
          &lt;a class=&quot;artifact&quot; href=&quot;http://repo1.maven.org/maven2/org/jboss/arquillian/spock/arquillian-spock-standalone/1.0.0.Alpha2/arquillian-spock-standalone-1.0.0.Alpha2.pom&quot; target=&quot;_blank&quot;&gt;pom&lt;/a&gt;
        &lt;/li&gt;
      &lt;/ul&gt;&lt;h3&gt;
        Release notes and resolved issues
        &lt;small&gt;4&lt;/small&gt;
      &lt;/h3&gt;
      &lt;p&gt;&lt;/p&gt;
      &lt;dl&gt;
      &lt;dt&gt;Bug&lt;/dt&gt;
        &lt;dd&gt;
          &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-895&quot;&gt;ARQ-895&lt;/a&gt; -         Arquillian config-impl-base is not a part of spock-standalone&lt;/li&gt;
          &lt;/ul&gt;
      &lt;/dd&gt;
      &lt;/dl&gt;&lt;dl&gt;
      &lt;dt&gt;Enhancement&lt;/dt&gt;
        &lt;dd&gt;
          &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1041&quot;&gt;ARQ-1041&lt;/a&gt; -         Update Spock to the lastest (0.6) version&lt;/li&gt;
          &lt;/ul&gt;
      &lt;/dd&gt;
      &lt;/dl&gt;&lt;dl&gt;
      &lt;dt&gt;Task&lt;/dt&gt;
        &lt;dd&gt;
          &lt;ul class=&quot;unstyled&quot;&gt;
      &lt;li&gt;
      &lt;a href=&quot;https://issues.jboss.org/browse/ARQ-1039&quot;&gt;ARQ-1039&lt;/a&gt; -         Update Spock Test Runner to 1.0.1.Final of Arquillian Core&lt;/li&gt;
          &lt;/ul&gt;
      &lt;/dd&gt;
      &lt;/dl&gt;&lt;p&gt;
        Thanks to the following list of contributors:
        &lt;a href=&quot;https://community.jboss.org/people/aslak&quot;&gt;Aslak Knutsen&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/bmajsak&quot;&gt;Bartosz Majsak&lt;/a&gt;, &lt;a href=&quot;https://community.jboss.org/people/dan.j.allen&quot;&gt;Dan Allen&lt;/a&gt;
      &lt;/p&gt;
    </content>
  </entry>
</feed>
